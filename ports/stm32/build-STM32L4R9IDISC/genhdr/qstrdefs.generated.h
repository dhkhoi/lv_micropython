// This file was automatically generated by makeqstrdata.py

QDEF(MP_QSTRnull, (const byte*)"\x00\x00\x00" "")
QDEF(MP_QSTR_, (const byte*)"\x05\x15\x00" "")
QDEF(MP_QSTR___dir__, (const byte*)"\x7a\x8f\x07" "__dir__")
QDEF(MP_QSTR__0x0a_, (const byte*)"\xaf\xb5\x01" "\x0a")
QDEF(MP_QSTR__space_, (const byte*)"\x85\xb5\x01" " ")
QDEF(MP_QSTR__star_, (const byte*)"\x8f\xb5\x01" "*")
QDEF(MP_QSTR__slash_, (const byte*)"\x8a\xb5\x01" "/")
QDEF(MP_QSTR__lt_module_gt_, (const byte*)"\xbd\x94\x08" "<module>")
QDEF(MP_QSTR__, (const byte*)"\xfa\xb5\x01" "_")
QDEF(MP_QSTR___call__, (const byte*)"\xa7\xf9\x08" "__call__")
QDEF(MP_QSTR___class__, (const byte*)"\x2b\xc5\x09" "__class__")
QDEF(MP_QSTR___delitem__, (const byte*)"\xfd\x35\x0b" "__delitem__")
QDEF(MP_QSTR___enter__, (const byte*)"\x6d\xba\x09" "__enter__")
QDEF(MP_QSTR___exit__, (const byte*)"\x45\xf8\x08" "__exit__")
QDEF(MP_QSTR___getattr__, (const byte*)"\x40\xf8\x0b" "__getattr__")
QDEF(MP_QSTR___getitem__, (const byte*)"\x26\x39\x0b" "__getitem__")
QDEF(MP_QSTR___hash__, (const byte*)"\xf7\xc8\x08" "__hash__")
QDEF(MP_QSTR___init__, (const byte*)"\x5f\xa5\x08" "__init__")
QDEF(MP_QSTR___int__, (const byte*)"\x16\x1b\x07" "__int__")
QDEF(MP_QSTR___iter__, (const byte*)"\xcf\x32\x08" "__iter__")
QDEF(MP_QSTR___len__, (const byte*)"\xe2\xb0\x07" "__len__")
QDEF(MP_QSTR___main__, (const byte*)"\x8e\x13\x08" "__main__")
QDEF(MP_QSTR___module__, (const byte*)"\xff\x30\x0a" "__module__")
QDEF(MP_QSTR___name__, (const byte*)"\xe2\x38\x08" "__name__")
QDEF(MP_QSTR___new__, (const byte*)"\x79\x15\x07" "__new__")
QDEF(MP_QSTR___next__, (const byte*)"\x02\x73\x08" "__next__")
QDEF(MP_QSTR___qualname__, (const byte*)"\x6b\x00\x0c" "__qualname__")
QDEF(MP_QSTR___repr__, (const byte*)"\x10\x0b\x08" "__repr__")
QDEF(MP_QSTR___setitem__, (const byte*)"\x32\x3e\x0b" "__setitem__")
QDEF(MP_QSTR___str__, (const byte*)"\xd0\xcd\x07" "__str__")
QDEF(MP_QSTR_ArithmeticError, (const byte*)"\x2d\x8c\x0f" "ArithmeticError")
QDEF(MP_QSTR_AssertionError, (const byte*)"\x97\x5a\x0e" "AssertionError")
QDEF(MP_QSTR_AttributeError, (const byte*)"\x21\xde\x0e" "AttributeError")
QDEF(MP_QSTR_BaseException, (const byte*)"\x07\x92\x0d" "BaseException")
QDEF(MP_QSTR_EOFError, (const byte*)"\x91\xbf\x08" "EOFError")
QDEF(MP_QSTR_Ellipsis, (const byte*)"\xf0\xe0\x08" "Ellipsis")
QDEF(MP_QSTR_Exception, (const byte*)"\xf2\x29\x09" "Exception")
QDEF(MP_QSTR_GeneratorExit, (const byte*)"\x16\x62\x0d" "GeneratorExit")
QDEF(MP_QSTR_ImportError, (const byte*)"\x20\x9c\x0b" "ImportError")
QDEF(MP_QSTR_IndentationError, (const byte*)"\x5c\x20\x10" "IndentationError")
QDEF(MP_QSTR_IndexError, (const byte*)"\x83\xad\x0a" "IndexError")
QDEF(MP_QSTR_KeyError, (const byte*)"\xea\x00\x08" "KeyError")
QDEF(MP_QSTR_KeyboardInterrupt, (const byte*)"\xaf\xe2\x11" "KeyboardInterrupt")
QDEF(MP_QSTR_LookupError, (const byte*)"\xff\x69\x0b" "LookupError")
QDEF(MP_QSTR_MemoryError, (const byte*)"\xdc\x83\x0b" "MemoryError")
QDEF(MP_QSTR_NameError, (const byte*)"\xba\x2d\x09" "NameError")
QDEF(MP_QSTR_NoneType, (const byte*)"\x17\x68\x08" "NoneType")
QDEF(MP_QSTR_NotImplementedError, (const byte*)"\xc6\x98\x13" "NotImplementedError")
QDEF(MP_QSTR_OSError, (const byte*)"\xa1\x65\x07" "OSError")
QDEF(MP_QSTR_OverflowError, (const byte*)"\x81\xe1\x0d" "OverflowError")
QDEF(MP_QSTR_RuntimeError, (const byte*)"\x61\xf1\x0c" "RuntimeError")
QDEF(MP_QSTR_StopIteration, (const byte*)"\xea\x1c\x0d" "StopIteration")
QDEF(MP_QSTR_SyntaxError, (const byte*)"\x94\x8f\x0b" "SyntaxError")
QDEF(MP_QSTR_SystemExit, (const byte*)"\x20\xff\x0a" "SystemExit")
QDEF(MP_QSTR_TypeError, (const byte*)"\x25\x96\x09" "TypeError")
QDEF(MP_QSTR_ValueError, (const byte*)"\x96\x87\x0a" "ValueError")
QDEF(MP_QSTR_ZeroDivisionError, (const byte*)"\xb6\x27\x11" "ZeroDivisionError")
QDEF(MP_QSTR_abs, (const byte*)"\x95\x32\x03" "abs")
QDEF(MP_QSTR_all, (const byte*)"\x44\x33\x03" "all")
QDEF(MP_QSTR_any, (const byte*)"\x13\x33\x03" "any")
QDEF(MP_QSTR_append, (const byte*)"\x6b\x97\x06" "append")
QDEF(MP_QSTR_args, (const byte*)"\xc2\xc6\x04" "args")
QDEF(MP_QSTR_bool, (const byte*)"\xeb\x3c\x04" "bool")
QDEF(MP_QSTR_builtins, (const byte*)"\xf7\x31\x08" "builtins")
QDEF(MP_QSTR_bytearray, (const byte*)"\x76\xa3\x09" "bytearray")
QDEF(MP_QSTR_bytecode, (const byte*)"\x22\x7d\x08" "bytecode")
QDEF(MP_QSTR_bytes, (const byte*)"\x5c\xb2\x05" "bytes")
QDEF(MP_QSTR_callable, (const byte*)"\x0d\x70\x08" "callable")
QDEF(MP_QSTR_chr, (const byte*)"\xdc\x4c\x03" "chr")
QDEF(MP_QSTR_classmethod, (const byte*)"\xb4\x8c\x0b" "classmethod")
QDEF(MP_QSTR_clear, (const byte*)"\x7c\xa0\x05" "clear")
QDEF(MP_QSTR_close, (const byte*)"\x33\x67\x05" "close")
QDEF(MP_QSTR_const, (const byte*)"\xc0\xff\x05" "const")
QDEF(MP_QSTR_copy, (const byte*)"\xe0\xdb\x04" "copy")
QDEF(MP_QSTR_count, (const byte*)"\xa6\x4d\x05" "count")
QDEF(MP_QSTR_dict, (const byte*)"\x3f\xfc\x04" "dict")
QDEF(MP_QSTR_dir, (const byte*)"\xfa\x1e\x03" "dir")
QDEF(MP_QSTR_divmod, (const byte*)"\xb8\x04\x06" "divmod")
QDEF(MP_QSTR_end, (const byte*)"\x0a\x23\x03" "end")
QDEF(MP_QSTR_endswith, (const byte*)"\x1b\xa3\x08" "endswith")
QDEF(MP_QSTR_eval, (const byte*)"\x9b\xa6\x04" "eval")
QDEF(MP_QSTR_exec, (const byte*)"\x1e\xc0\x04" "exec")
QDEF(MP_QSTR_extend, (const byte*)"\x63\xe8\x06" "extend")
QDEF(MP_QSTR_find, (const byte*)"\x00\x34\x04" "find")
QDEF(MP_QSTR_format, (const byte*)"\x26\x33\x06" "format")
QDEF(MP_QSTR_from_bytes, (const byte*)"\x35\x74\x0a" "from_bytes")
QDEF(MP_QSTR_get, (const byte*)"\x33\x3b\x03" "get")
QDEF(MP_QSTR_getattr, (const byte*)"\xc0\x17\x07" "getattr")
QDEF(MP_QSTR_globals, (const byte*)"\x9d\x49\x07" "globals")
QDEF(MP_QSTR_hasattr, (const byte*)"\x8c\xb0\x07" "hasattr")
QDEF(MP_QSTR_hash, (const byte*)"\xb7\x70\x04" "hash")
QDEF(MP_QSTR_id, (const byte*)"\x28\x6f\x02" "id")
QDEF(MP_QSTR_index, (const byte*)"\x7b\x28\x05" "index")
QDEF(MP_QSTR_insert, (const byte*)"\x12\x54\x06" "insert")
QDEF(MP_QSTR_int, (const byte*)"\x16\x53\x03" "int")
QDEF(MP_QSTR_isalpha, (const byte*)"\xeb\x37\x07" "isalpha")
QDEF(MP_QSTR_isdigit, (const byte*)"\xa8\x9a\x07" "isdigit")
QDEF(MP_QSTR_isinstance, (const byte*)"\xb6\xbe\x0a" "isinstance")
QDEF(MP_QSTR_islower, (const byte*)"\xfc\x80\x07" "islower")
QDEF(MP_QSTR_isspace, (const byte*)"\x5b\xf8\x07" "isspace")
QDEF(MP_QSTR_issubclass, (const byte*)"\xb5\x7f\x0a" "issubclass")
QDEF(MP_QSTR_isupper, (const byte*)"\xdd\xa7\x07" "isupper")
QDEF(MP_QSTR_items, (const byte*)"\xe3\x53\x05" "items")
QDEF(MP_QSTR_iter, (const byte*)"\x8f\x21\x04" "iter")
QDEF(MP_QSTR_join, (const byte*)"\xa7\x5c\x04" "join")
QDEF(MP_QSTR_key, (const byte*)"\x32\x6d\x03" "key")
QDEF(MP_QSTR_keys, (const byte*)"\x01\x13\x04" "keys")
QDEF(MP_QSTR_len, (const byte*)"\x62\x40\x03" "len")
QDEF(MP_QSTR_list, (const byte*)"\x27\x1d\x04" "list")
QDEF(MP_QSTR_little, (const byte*)"\x89\x6a\x06" "little")
QDEF(MP_QSTR_locals, (const byte*)"\x3b\xa1\x06" "locals")
QDEF(MP_QSTR_lower, (const byte*)"\xc6\xcb\x05" "lower")
QDEF(MP_QSTR_lstrip, (const byte*)"\xe5\xb9\x06" "lstrip")
QDEF(MP_QSTR_main, (const byte*)"\xce\xb7\x04" "main")
QDEF(MP_QSTR_map, (const byte*)"\xb9\x43\x03" "map")
QDEF(MP_QSTR_micropython, (const byte*)"\x0b\x7c\x0b" "micropython")
QDEF(MP_QSTR_next, (const byte*)"\x42\x88\x04" "next")
QDEF(MP_QSTR_object, (const byte*)"\x90\x8d\x06" "object")
QDEF(MP_QSTR_open, (const byte*)"\xd1\x3a\x04" "open")
QDEF(MP_QSTR_ord, (const byte*)"\x1c\x5e\x03" "ord")
QDEF(MP_QSTR_pop, (const byte*)"\x2a\x73\x03" "pop")
QDEF(MP_QSTR_popitem, (const byte*)"\xbf\x2c\x07" "popitem")
QDEF(MP_QSTR_pow, (const byte*)"\x2d\x73\x03" "pow")
QDEF(MP_QSTR_print, (const byte*)"\x54\xc6\x05" "print")
QDEF(MP_QSTR_range, (const byte*)"\x1a\x5e\x05" "range")
QDEF(MP_QSTR_read, (const byte*)"\xb7\xf9\x04" "read")
QDEF(MP_QSTR_readinto, (const byte*)"\x4b\xbf\x08" "readinto")
QDEF(MP_QSTR_readline, (const byte*)"\xf9\x19\x08" "readline")
QDEF(MP_QSTR_remove, (const byte*)"\x63\x8a\x06" "remove")
QDEF(MP_QSTR_replace, (const byte*)"\x49\x25\x07" "replace")
QDEF(MP_QSTR_repr, (const byte*)"\xd0\xf7\x04" "repr")
QDEF(MP_QSTR_reverse, (const byte*)"\x25\x2a\x07" "reverse")
QDEF(MP_QSTR_rfind, (const byte*)"\xd2\x9c\x05" "rfind")
QDEF(MP_QSTR_rindex, (const byte*)"\xe9\x2b\x06" "rindex")
QDEF(MP_QSTR_round, (const byte*)"\xe7\x25\x05" "round")
QDEF(MP_QSTR_rsplit, (const byte*)"\xa5\x00\x06" "rsplit")
QDEF(MP_QSTR_rstrip, (const byte*)"\x3b\x95\x06" "rstrip")
QDEF(MP_QSTR_self, (const byte*)"\x79\x77\x04" "self")
QDEF(MP_QSTR_send, (const byte*)"\xb9\x76\x04" "send")
QDEF(MP_QSTR_sep, (const byte*)"\x23\x8f\x03" "sep")
QDEF(MP_QSTR_set, (const byte*)"\x27\x8f\x03" "set")
QDEF(MP_QSTR_setattr, (const byte*)"\xd4\xa8\x07" "setattr")
QDEF(MP_QSTR_setdefault, (const byte*)"\x6c\xa3\x0a" "setdefault")
QDEF(MP_QSTR_sort, (const byte*)"\xbf\x9d\x04" "sort")
QDEF(MP_QSTR_sorted, (const byte*)"\x5e\x15\x06" "sorted")
QDEF(MP_QSTR_split, (const byte*)"\xb7\x33\x05" "split")
QDEF(MP_QSTR_start, (const byte*)"\x85\xef\x05" "start")
QDEF(MP_QSTR_startswith, (const byte*)"\x74\xe8\x0a" "startswith")
QDEF(MP_QSTR_staticmethod, (const byte*)"\x62\xaf\x0c" "staticmethod")
QDEF(MP_QSTR_step, (const byte*)"\x57\x36\x04" "step")
QDEF(MP_QSTR_stop, (const byte*)"\x9d\x36\x04" "stop")
QDEF(MP_QSTR_str, (const byte*)"\x50\x8d\x03" "str")
QDEF(MP_QSTR_strip, (const byte*)"\x29\x1e\x05" "strip")
QDEF(MP_QSTR_sum, (const byte*)"\x2e\x8d\x03" "sum")
QDEF(MP_QSTR_super, (const byte*)"\xc4\xb2\x05" "super")
QDEF(MP_QSTR_throw, (const byte*)"\xb3\x44\x05" "throw")
QDEF(MP_QSTR_to_bytes, (const byte*)"\xd8\x3e\x08" "to_bytes")
QDEF(MP_QSTR_tuple, (const byte*)"\xfd\x41\x05" "tuple")
QDEF(MP_QSTR_type, (const byte*)"\x9d\x7f\x04" "type")
QDEF(MP_QSTR_update, (const byte*)"\xb4\x76\x06" "update")
QDEF(MP_QSTR_upper, (const byte*)"\x27\x94\x05" "upper")
QDEF(MP_QSTR_utf_hyphen_8, (const byte*)"\xb7\x82\x05" "utf-8")
QDEF(MP_QSTR_value, (const byte*)"\x4e\x34\x05" "value")
QDEF(MP_QSTR_values, (const byte*)"\x7d\xbe\x06" "values")
QDEF(MP_QSTR_write, (const byte*)"\x98\xa8\x05" "write")
QDEF(MP_QSTR_zip, (const byte*)"\xe6\xac\x03" "zip")
QDEF(MP_QSTR___abs__, (const byte*)"\x95\xd6\x07" "__abs__")
QDEF(MP_QSTR___add__, (const byte*)"\xc4\x82\x07" "__add__")
QDEF(MP_QSTR___aenter__, (const byte*)"\x4c\x84\x0a" "__aenter__")
QDEF(MP_QSTR___aexit__, (const byte*)"\xc4\xcf\x09" "__aexit__")
QDEF(MP_QSTR___aiter__, (const byte*)"\x4e\x2b\x09" "__aiter__")
QDEF(MP_QSTR___and__, (const byte*)"\x0e\xdb\x07" "__and__")
QDEF(MP_QSTR___anext__, (const byte*)"\x83\xb4\x09" "__anext__")
QDEF(MP_QSTR___bases__, (const byte*)"\x03\x30\x09" "__bases__")
QDEF(MP_QSTR___bool__, (const byte*)"\x2b\x65\x08" "__bool__")
QDEF(MP_QSTR___build_class__, (const byte*)"\x42\x88\x0f" "__build_class__")
QDEF(MP_QSTR___cast__, (const byte*)"\x80\x96\x08" "__cast__")
QDEF(MP_QSTR___contains__, (const byte*)"\xc6\x5f\x0c" "__contains__")
QDEF(MP_QSTR___del__, (const byte*)"\x68\x37\x07" "__del__")
QDEF(MP_QSTR___delattr__, (const byte*)"\x5b\x77\x0b" "__delattr__")
QDEF(MP_QSTR___delete__, (const byte*)"\xdc\xed\x0a" "__delete__")
QDEF(MP_QSTR___dereference__, (const byte*)"\x2f\x89\x0f" "__dereference__")
QDEF(MP_QSTR___dict__, (const byte*)"\x7f\x54\x08" "__dict__")
QDEF(MP_QSTR___divmod__, (const byte*)"\x78\x11\x0a" "__divmod__")
QDEF(MP_QSTR___eq__, (const byte*)"\x71\x3e\x06" "__eq__")
QDEF(MP_QSTR___file__, (const byte*)"\x03\x54\x08" "__file__")
QDEF(MP_QSTR___floordiv__, (const byte*)"\x46\x5f\x0c" "__floordiv__")
QDEF(MP_QSTR___ge__, (const byte*)"\xa7\x46\x06" "__ge__")
QDEF(MP_QSTR___get__, (const byte*)"\xb3\x8f\x07" "__get__")
QDEF(MP_QSTR___gt__, (const byte*)"\xb6\x82\x06" "__gt__")
QDEF(MP_QSTR___iadd__, (const byte*)"\x6d\x4a\x08" "__iadd__")
QDEF(MP_QSTR___import__, (const byte*)"\x38\x3e\x0a" "__import__")
QDEF(MP_QSTR___invert__, (const byte*)"\xf7\x77\x0a" "__invert__")
QDEF(MP_QSTR___isub__, (const byte*)"\x08\x78\x08" "__isub__")
QDEF(MP_QSTR___le__, (const byte*)"\xcc\x13\x06" "__le__")
QDEF(MP_QSTR___lshift__, (const byte*)"\x09\x88\x0a" "__lshift__")
QDEF(MP_QSTR___lt__, (const byte*)"\x5d\x68\x06" "__lt__")
QDEF(MP_QSTR___matmul__, (const byte*)"\x49\xf3\x0a" "__matmul__")
QDEF(MP_QSTR___mod__, (const byte*)"\x63\x37\x07" "__mod__")
QDEF(MP_QSTR___mul__, (const byte*)"\x31\x42\x07" "__mul__")
QDEF(MP_QSTR___neg__, (const byte*)"\x69\xd5\x07" "__neg__")
QDEF(MP_QSTR___or__, (const byte*)"\x38\xbb\x06" "__or__")
QDEF(MP_QSTR___path__, (const byte*)"\xc8\x23\x08" "__path__")
QDEF(MP_QSTR___pos__, (const byte*)"\x29\xf0\x07" "__pos__")
QDEF(MP_QSTR___pow__, (const byte*)"\x2d\x00\x07" "__pow__")
QDEF(MP_QSTR___repl_print__, (const byte*)"\x00\xbb\x0e" "__repl_print__")
QDEF(MP_QSTR___reversed__, (const byte*)"\x61\xff\x0c" "__reversed__")
QDEF(MP_QSTR___rshift__, (const byte*)"\x57\x98\x0a" "__rshift__")
QDEF(MP_QSTR___set__, (const byte*)"\xa7\xb3\x07" "__set__")
QDEF(MP_QSTR___setattr__, (const byte*)"\x54\x19\x0b" "__setattr__")
QDEF(MP_QSTR___sub__, (const byte*)"\x21\x09\x07" "__sub__")
QDEF(MP_QSTR___traceback__, (const byte*)"\x4f\xcf\x0d" "__traceback__")
QDEF(MP_QSTR___truediv__, (const byte*)"\x88\xef\x0b" "__truediv__")
QDEF(MP_QSTR___xor__, (const byte*)"\x20\xec\x07" "__xor__")
QDEF(MP_QSTR__percent__hash_o, (const byte*)"\x6c\x1a\x03" "%#o")
QDEF(MP_QSTR__percent__hash_x, (const byte*)"\x7b\x1a\x03" "%#x")
QDEF(MP_QSTR__brace_open__colon__hash_b_brace_close_, (const byte*)"\x58\x37\x05" "{:#b}")
QDEF(MP_QSTR_maximum_space_recursion_space_depth_space_exceeded, (const byte*)"\x73\x1e\x20" "maximum recursion depth exceeded")
QDEF(MP_QSTR__lt_lambda_gt_, (const byte*)"\x80\x8c\x08" "<lambda>")
QDEF(MP_QSTR__lt_listcomp_gt_, (const byte*)"\xd4\x15\x0a" "<listcomp>")
QDEF(MP_QSTR__lt_dictcomp_gt_, (const byte*)"\xcc\x8d\x0a" "<dictcomp>")
QDEF(MP_QSTR__lt_setcomp_gt_, (const byte*)"\x54\x51\x09" "<setcomp>")
QDEF(MP_QSTR__lt_genexpr_gt_, (const byte*)"\x34\x6a\x09" "<genexpr>")
QDEF(MP_QSTR__lt_string_gt_, (const byte*)"\x52\x53\x08" "<string>")
QDEF(MP_QSTR__lt_stdin_gt_, (const byte*)"\xe3\x63\x07" "<stdin>")
QDEF(MP_QSTR__slash_flash, (const byte*)"\x1a\x4e\x06" "/flash")
QDEF(MP_QSTR__slash_flash_slash_lib, (const byte*)"\x92\x4d\x0a" "/flash/lib")
QDEF(MP_QSTR__slash_sd, (const byte*)"\xbd\x3d\x03" "/sd")
QDEF(MP_QSTR__slash_sd_slash_lib, (const byte*)"\xb5\x1e\x07" "/sd/lib")
QDEF(MP_QSTR_MSC_plus_HID, (const byte*)"\xb6\x0c\x07" "MSC+HID")
QDEF(MP_QSTR_VCP_plus_MSC, (const byte*)"\xf6\x7e\x07" "VCP+MSC")
QDEF(MP_QSTR_VCP_plus_HID, (const byte*)"\xae\x70\x07" "VCP+HID")
QDEF(MP_QSTR_A0, (const byte*)"\x54\x72\x02" "A0")
QDEF(MP_QSTR_A1, (const byte*)"\x55\x72\x02" "A1")
QDEF(MP_QSTR_A10, (const byte*)"\xc5\xbc\x03" "A10")
QDEF(MP_QSTR_A11, (const byte*)"\xc4\xbc\x03" "A11")
QDEF(MP_QSTR_A12, (const byte*)"\xc7\xbc\x03" "A12")
QDEF(MP_QSTR_A13, (const byte*)"\xc6\xbc\x03" "A13")
QDEF(MP_QSTR_A14, (const byte*)"\xc1\xbc\x03" "A14")
QDEF(MP_QSTR_A15, (const byte*)"\xc0\xbc\x03" "A15")
QDEF(MP_QSTR_A2, (const byte*)"\x56\x72\x02" "A2")
QDEF(MP_QSTR_A3, (const byte*)"\x57\x72\x02" "A3")
QDEF(MP_QSTR_A4, (const byte*)"\x50\x72\x02" "A4")
QDEF(MP_QSTR_A5, (const byte*)"\x51\x72\x02" "A5")
QDEF(MP_QSTR_A6, (const byte*)"\x52\x72\x02" "A6")
QDEF(MP_QSTR_A7, (const byte*)"\x53\x72\x02" "A7")
QDEF(MP_QSTR_A8, (const byte*)"\x5c\x72\x02" "A8")
QDEF(MP_QSTR_A9, (const byte*)"\x5d\x72\x02" "A9")
QDEF(MP_QSTR_AF12_TIM1, (const byte*)"\x7f\xec\x09" "AF12_TIM1")
QDEF(MP_QSTR_AF13_TIM8, (const byte*)"\xd7\xcb\x09" "AF13_TIM8")
QDEF(MP_QSTR_AF14_TIM15, (const byte*)"\x6c\x22\x0a" "AF14_TIM15")
QDEF(MP_QSTR_AF14_TIM16, (const byte*)"\x6f\x22\x0a" "AF14_TIM16")
QDEF(MP_QSTR_AF14_TIM17, (const byte*)"\x6e\x22\x0a" "AF14_TIM17")
QDEF(MP_QSTR_AF14_TIM2, (const byte*)"\x3a\xbb\x09" "AF14_TIM2")
QDEF(MP_QSTR_AF1_TIM1, (const byte*)"\x6d\x8f\x08" "AF1_TIM1")
QDEF(MP_QSTR_AF1_TIM2, (const byte*)"\x6e\x8f\x08" "AF1_TIM2")
QDEF(MP_QSTR_AF1_TIM5, (const byte*)"\x69\x8f\x08" "AF1_TIM5")
QDEF(MP_QSTR_AF2_TIM2, (const byte*)"\x8d\x5f\x08" "AF2_TIM2")
QDEF(MP_QSTR_AF2_TIM3, (const byte*)"\x8c\x5f\x08" "AF2_TIM3")
QDEF(MP_QSTR_AF2_TIM4, (const byte*)"\x8b\x5f\x08" "AF2_TIM4")
QDEF(MP_QSTR_AF2_TIM5, (const byte*)"\x8a\x5f\x08" "AF2_TIM5")
QDEF(MP_QSTR_AF3_SPI2, (const byte*)"\x56\xbb\x08" "AF3_SPI2")
QDEF(MP_QSTR_AF3_TIM1, (const byte*)"\x2f\x3f\x08" "AF3_TIM1")
QDEF(MP_QSTR_AF3_TIM8, (const byte*)"\x26\x3f\x08" "AF3_TIM8")
QDEF(MP_QSTR_AF3_USART2, (const byte*)"\x5d\x68\x0a" "AF3_USART2")
QDEF(MP_QSTR_AF4_I2C1, (const byte*)"\x00\xb2\x08" "AF4_I2C1")
QDEF(MP_QSTR_AF4_I2C3, (const byte*)"\x02\xb2\x08" "AF4_I2C3")
QDEF(MP_QSTR_AF5_SPI2, (const byte*)"\x90\x1b\x08" "AF5_SPI2")
QDEF(MP_QSTR_AF6_I2C3, (const byte*)"\xc0\x71\x08" "AF6_I2C3")
QDEF(MP_QSTR_AF7_USART2, (const byte*)"\xd9\x19\x0a" "AF7_USART2")
QDEF(MP_QSTR_B0, (const byte*)"\xf7\x72\x02" "B0")
QDEF(MP_QSTR_B1, (const byte*)"\xf6\x72\x02" "B1")
QDEF(MP_QSTR_B10, (const byte*)"\x86\xd1\x03" "B10")
QDEF(MP_QSTR_B11, (const byte*)"\x87\xd1\x03" "B11")
QDEF(MP_QSTR_B12, (const byte*)"\x84\xd1\x03" "B12")
QDEF(MP_QSTR_B13, (const byte*)"\x85\xd1\x03" "B13")
QDEF(MP_QSTR_B14, (const byte*)"\x82\xd1\x03" "B14")
QDEF(MP_QSTR_B15, (const byte*)"\x83\xd1\x03" "B15")
QDEF(MP_QSTR_B2, (const byte*)"\xf5\x72\x02" "B2")
QDEF(MP_QSTR_B3, (const byte*)"\xf4\x72\x02" "B3")
QDEF(MP_QSTR_B4, (const byte*)"\xf3\x72\x02" "B4")
QDEF(MP_QSTR_B5, (const byte*)"\xf2\x72\x02" "B5")
QDEF(MP_QSTR_B6, (const byte*)"\xf1\x72\x02" "B6")
QDEF(MP_QSTR_B7, (const byte*)"\xf0\x72\x02" "B7")
QDEF(MP_QSTR_B8, (const byte*)"\xff\x72\x02" "B8")
QDEF(MP_QSTR_B9, (const byte*)"\xfe\x72\x02" "B9")
QDEF(MP_QSTR_C0, (const byte*)"\x96\x72\x02" "C0")
QDEF(MP_QSTR_C1, (const byte*)"\x97\x72\x02" "C1")
QDEF(MP_QSTR_C10, (const byte*)"\x47\xc5\x03" "C10")
QDEF(MP_QSTR_C11, (const byte*)"\x46\xc5\x03" "C11")
QDEF(MP_QSTR_C12, (const byte*)"\x45\xc5\x03" "C12")
QDEF(MP_QSTR_C13, (const byte*)"\x44\xc5\x03" "C13")
QDEF(MP_QSTR_C14, (const byte*)"\x43\xc5\x03" "C14")
QDEF(MP_QSTR_C15, (const byte*)"\x42\xc5\x03" "C15")
QDEF(MP_QSTR_C2, (const byte*)"\x94\x72\x02" "C2")
QDEF(MP_QSTR_C3, (const byte*)"\x95\x72\x02" "C3")
QDEF(MP_QSTR_C4, (const byte*)"\x92\x72\x02" "C4")
QDEF(MP_QSTR_C5, (const byte*)"\x93\x72\x02" "C5")
QDEF(MP_QSTR_C6, (const byte*)"\x90\x72\x02" "C6")
QDEF(MP_QSTR_C7, (const byte*)"\x91\x72\x02" "C7")
QDEF(MP_QSTR_C8, (const byte*)"\x9e\x72\x02" "C8")
QDEF(MP_QSTR_C9, (const byte*)"\x9f\x72\x02" "C9")
QDEF(MP_QSTR_D0, (const byte*)"\x31\x72\x02" "D0")
QDEF(MP_QSTR_D1, (const byte*)"\x30\x72\x02" "D1")
QDEF(MP_QSTR_D10, (const byte*)"\x00\xb8\x03" "D10")
QDEF(MP_QSTR_D11, (const byte*)"\x01\xb8\x03" "D11")
QDEF(MP_QSTR_D12, (const byte*)"\x02\xb8\x03" "D12")
QDEF(MP_QSTR_D13, (const byte*)"\x03\xb8\x03" "D13")
QDEF(MP_QSTR_D14, (const byte*)"\x04\xb8\x03" "D14")
QDEF(MP_QSTR_D15, (const byte*)"\x05\xb8\x03" "D15")
QDEF(MP_QSTR_D2, (const byte*)"\x33\x72\x02" "D2")
QDEF(MP_QSTR_D3, (const byte*)"\x32\x72\x02" "D3")
QDEF(MP_QSTR_D4, (const byte*)"\x35\x72\x02" "D4")
QDEF(MP_QSTR_D5, (const byte*)"\x34\x72\x02" "D5")
QDEF(MP_QSTR_D6, (const byte*)"\x37\x72\x02" "D6")
QDEF(MP_QSTR_D7, (const byte*)"\x36\x72\x02" "D7")
QDEF(MP_QSTR_D8, (const byte*)"\x39\x72\x02" "D8")
QDEF(MP_QSTR_D9, (const byte*)"\x38\x72\x02" "D9")
QDEF(MP_QSTR_E0, (const byte*)"\xd0\x71\x02" "E0")
QDEF(MP_QSTR_E1, (const byte*)"\xd1\x71\x02" "E1")
QDEF(MP_QSTR_E10, (const byte*)"\xc1\xab\x03" "E10")
QDEF(MP_QSTR_E11, (const byte*)"\xc0\xab\x03" "E11")
QDEF(MP_QSTR_E12, (const byte*)"\xc3\xab\x03" "E12")
QDEF(MP_QSTR_E13, (const byte*)"\xc2\xab\x03" "E13")
QDEF(MP_QSTR_E14, (const byte*)"\xc5\xab\x03" "E14")
QDEF(MP_QSTR_E15, (const byte*)"\xc4\xab\x03" "E15")
QDEF(MP_QSTR_E2, (const byte*)"\xd2\x71\x02" "E2")
QDEF(MP_QSTR_E3, (const byte*)"\xd3\x71\x02" "E3")
QDEF(MP_QSTR_E4, (const byte*)"\xd4\x71\x02" "E4")
QDEF(MP_QSTR_E5, (const byte*)"\xd5\x71\x02" "E5")
QDEF(MP_QSTR_E6, (const byte*)"\xd6\x71\x02" "E6")
QDEF(MP_QSTR_E7, (const byte*)"\xd7\x71\x02" "E7")
QDEF(MP_QSTR_E8, (const byte*)"\xd8\x71\x02" "E8")
QDEF(MP_QSTR_E9, (const byte*)"\xd9\x71\x02" "E9")
QDEF(MP_QSTR_F0, (const byte*)"\x73\x72\x02" "F0")
QDEF(MP_QSTR_F1, (const byte*)"\x72\x72\x02" "F1")
QDEF(MP_QSTR_F10, (const byte*)"\x82\xc0\x03" "F10")
QDEF(MP_QSTR_F11, (const byte*)"\x83\xc0\x03" "F11")
QDEF(MP_QSTR_F12, (const byte*)"\x80\xc0\x03" "F12")
QDEF(MP_QSTR_F13, (const byte*)"\x81\xc0\x03" "F13")
QDEF(MP_QSTR_F14, (const byte*)"\x86\xc0\x03" "F14")
QDEF(MP_QSTR_F15, (const byte*)"\x87\xc0\x03" "F15")
QDEF(MP_QSTR_F2, (const byte*)"\x71\x72\x02" "F2")
QDEF(MP_QSTR_F3, (const byte*)"\x70\x72\x02" "F3")
QDEF(MP_QSTR_F4, (const byte*)"\x77\x72\x02" "F4")
QDEF(MP_QSTR_F5, (const byte*)"\x76\x72\x02" "F5")
QDEF(MP_QSTR_F6, (const byte*)"\x75\x72\x02" "F6")
QDEF(MP_QSTR_F7, (const byte*)"\x74\x72\x02" "F7")
QDEF(MP_QSTR_F8, (const byte*)"\x7b\x72\x02" "F8")
QDEF(MP_QSTR_F9, (const byte*)"\x7a\x72\x02" "F9")
QDEF(MP_QSTR_G0, (const byte*)"\x12\x72\x02" "G0")
QDEF(MP_QSTR_G1, (const byte*)"\x13\x72\x02" "G1")
QDEF(MP_QSTR_G10, (const byte*)"\x43\xb4\x03" "G10")
QDEF(MP_QSTR_G11, (const byte*)"\x42\xb4\x03" "G11")
QDEF(MP_QSTR_G12, (const byte*)"\x41\xb4\x03" "G12")
QDEF(MP_QSTR_G13, (const byte*)"\x40\xb4\x03" "G13")
QDEF(MP_QSTR_G14, (const byte*)"\x47\xb4\x03" "G14")
QDEF(MP_QSTR_G15, (const byte*)"\x46\xb4\x03" "G15")
QDEF(MP_QSTR_G2, (const byte*)"\x10\x72\x02" "G2")
QDEF(MP_QSTR_G3, (const byte*)"\x11\x72\x02" "G3")
QDEF(MP_QSTR_G4, (const byte*)"\x16\x72\x02" "G4")
QDEF(MP_QSTR_G5, (const byte*)"\x17\x72\x02" "G5")
QDEF(MP_QSTR_G6, (const byte*)"\x14\x72\x02" "G6")
QDEF(MP_QSTR_G7, (const byte*)"\x15\x72\x02" "G7")
QDEF(MP_QSTR_G8, (const byte*)"\x1a\x72\x02" "G8")
QDEF(MP_QSTR_G9, (const byte*)"\x1b\x72\x02" "G9")
QDEF(MP_QSTR_H0, (const byte*)"\xbd\x73\x02" "H0")
QDEF(MP_QSTR_H1, (const byte*)"\xbc\x73\x02" "H1")
QDEF(MP_QSTR_H10, (const byte*)"\x0c\xeb\x03" "H10")
QDEF(MP_QSTR_H11, (const byte*)"\x0d\xeb\x03" "H11")
QDEF(MP_QSTR_H12, (const byte*)"\x0e\xeb\x03" "H12")
QDEF(MP_QSTR_H13, (const byte*)"\x0f\xeb\x03" "H13")
QDEF(MP_QSTR_H14, (const byte*)"\x08\xeb\x03" "H14")
QDEF(MP_QSTR_H15, (const byte*)"\x09\xeb\x03" "H15")
QDEF(MP_QSTR_H2, (const byte*)"\xbf\x73\x02" "H2")
QDEF(MP_QSTR_H3, (const byte*)"\xbe\x73\x02" "H3")
QDEF(MP_QSTR_H4, (const byte*)"\xb9\x73\x02" "H4")
QDEF(MP_QSTR_H5, (const byte*)"\xb8\x73\x02" "H5")
QDEF(MP_QSTR_H6, (const byte*)"\xbb\x73\x02" "H6")
QDEF(MP_QSTR_H7, (const byte*)"\xba\x73\x02" "H7")
QDEF(MP_QSTR_H8, (const byte*)"\xb5\x73\x02" "H8")
QDEF(MP_QSTR_H9, (const byte*)"\xb4\x73\x02" "H9")
QDEF(MP_QSTR_I0, (const byte*)"\x5c\x73\x02" "I0")
QDEF(MP_QSTR_I1, (const byte*)"\x5d\x73\x02" "I1")
QDEF(MP_QSTR_I10, (const byte*)"\xcd\xde\x03" "I10")
QDEF(MP_QSTR_I11, (const byte*)"\xcc\xde\x03" "I11")
QDEF(MP_QSTR_I2, (const byte*)"\x5e\x73\x02" "I2")
QDEF(MP_QSTR_I3, (const byte*)"\x5f\x73\x02" "I3")
QDEF(MP_QSTR_I4, (const byte*)"\x58\x73\x02" "I4")
QDEF(MP_QSTR_I5, (const byte*)"\x59\x73\x02" "I5")
QDEF(MP_QSTR_I6, (const byte*)"\x5a\x73\x02" "I6")
QDEF(MP_QSTR_I7, (const byte*)"\x5b\x73\x02" "I7")
QDEF(MP_QSTR_I8, (const byte*)"\x54\x73\x02" "I8")
QDEF(MP_QSTR_I9, (const byte*)"\x55\x73\x02" "I9")
QDEF(MP_QSTR_PA0, (const byte*)"\x64\x0f\x03" "PA0")
QDEF(MP_QSTR_PA1, (const byte*)"\x65\x0f\x03" "PA1")
QDEF(MP_QSTR_PA10, (const byte*)"\x35\xfc\x04" "PA10")
QDEF(MP_QSTR_PA11, (const byte*)"\x34\xfc\x04" "PA11")
QDEF(MP_QSTR_PA12, (const byte*)"\x37\xfc\x04" "PA12")
QDEF(MP_QSTR_PA13, (const byte*)"\x36\xfc\x04" "PA13")
QDEF(MP_QSTR_PA14, (const byte*)"\x31\xfc\x04" "PA14")
QDEF(MP_QSTR_PA15, (const byte*)"\x30\xfc\x04" "PA15")
QDEF(MP_QSTR_PA2, (const byte*)"\x66\x0f\x03" "PA2")
QDEF(MP_QSTR_PA3, (const byte*)"\x67\x0f\x03" "PA3")
QDEF(MP_QSTR_PA4, (const byte*)"\x60\x0f\x03" "PA4")
QDEF(MP_QSTR_PA5, (const byte*)"\x61\x0f\x03" "PA5")
QDEF(MP_QSTR_PA6, (const byte*)"\x62\x0f\x03" "PA6")
QDEF(MP_QSTR_PA7, (const byte*)"\x63\x0f\x03" "PA7")
QDEF(MP_QSTR_PA8, (const byte*)"\x6c\x0f\x03" "PA8")
QDEF(MP_QSTR_PA9, (const byte*)"\x6d\x0f\x03" "PA9")
QDEF(MP_QSTR_PB0, (const byte*)"\x87\x0f\x03" "PB0")
QDEF(MP_QSTR_PB1, (const byte*)"\x86\x0f\x03" "PB1")
QDEF(MP_QSTR_PB10, (const byte*)"\x76\x00\x04" "PB10")
QDEF(MP_QSTR_PB11, (const byte*)"\x77\x00\x04" "PB11")
QDEF(MP_QSTR_PB12, (const byte*)"\x74\x00\x04" "PB12")
QDEF(MP_QSTR_PB13, (const byte*)"\x75\x00\x04" "PB13")
QDEF(MP_QSTR_PB14, (const byte*)"\x72\x00\x04" "PB14")
QDEF(MP_QSTR_PB15, (const byte*)"\x73\x00\x04" "PB15")
QDEF(MP_QSTR_PB2, (const byte*)"\x85\x0f\x03" "PB2")
QDEF(MP_QSTR_PB3, (const byte*)"\x84\x0f\x03" "PB3")
QDEF(MP_QSTR_PB4, (const byte*)"\x83\x0f\x03" "PB4")
QDEF(MP_QSTR_PB5, (const byte*)"\x82\x0f\x03" "PB5")
QDEF(MP_QSTR_PB6, (const byte*)"\x81\x0f\x03" "PB6")
QDEF(MP_QSTR_PB7, (const byte*)"\x80\x0f\x03" "PB7")
QDEF(MP_QSTR_PB8, (const byte*)"\x8f\x0f\x03" "PB8")
QDEF(MP_QSTR_PB9, (const byte*)"\x8e\x0f\x03" "PB9")
QDEF(MP_QSTR_PC0, (const byte*)"\xa6\x0f\x03" "PC0")
QDEF(MP_QSTR_PC1, (const byte*)"\xa7\x0f\x03" "PC1")
QDEF(MP_QSTR_PC10, (const byte*)"\xb7\x04\x04" "PC10")
QDEF(MP_QSTR_PC11, (const byte*)"\xb6\x04\x04" "PC11")
QDEF(MP_QSTR_PC12, (const byte*)"\xb5\x04\x04" "PC12")
QDEF(MP_QSTR_PC13, (const byte*)"\xb4\x04\x04" "PC13")
QDEF(MP_QSTR_PC14, (const byte*)"\xb3\x04\x04" "PC14")
QDEF(MP_QSTR_PC15, (const byte*)"\xb2\x04\x04" "PC15")
QDEF(MP_QSTR_PC2, (const byte*)"\xa4\x0f\x03" "PC2")
QDEF(MP_QSTR_PC3, (const byte*)"\xa5\x0f\x03" "PC3")
QDEF(MP_QSTR_PC4, (const byte*)"\xa2\x0f\x03" "PC4")
QDEF(MP_QSTR_PC5, (const byte*)"\xa3\x0f\x03" "PC5")
QDEF(MP_QSTR_PC6, (const byte*)"\xa0\x0f\x03" "PC6")
QDEF(MP_QSTR_PC7, (const byte*)"\xa1\x0f\x03" "PC7")
QDEF(MP_QSTR_PC8, (const byte*)"\xae\x0f\x03" "PC8")
QDEF(MP_QSTR_PC9, (const byte*)"\xaf\x0f\x03" "PC9")
QDEF(MP_QSTR_PD0, (const byte*)"\xc1\x0e\x03" "PD0")
QDEF(MP_QSTR_PD1, (const byte*)"\xc0\x0e\x03" "PD1")
QDEF(MP_QSTR_PD10, (const byte*)"\xf0\xe6\x04" "PD10")
QDEF(MP_QSTR_PD11, (const byte*)"\xf1\xe6\x04" "PD11")
QDEF(MP_QSTR_PD12, (const byte*)"\xf2\xe6\x04" "PD12")
QDEF(MP_QSTR_PD13, (const byte*)"\xf3\xe6\x04" "PD13")
QDEF(MP_QSTR_PD14, (const byte*)"\xf4\xe6\x04" "PD14")
QDEF(MP_QSTR_PD15, (const byte*)"\xf5\xe6\x04" "PD15")
QDEF(MP_QSTR_PD2, (const byte*)"\xc3\x0e\x03" "PD2")
QDEF(MP_QSTR_PD3, (const byte*)"\xc2\x0e\x03" "PD3")
QDEF(MP_QSTR_PD4, (const byte*)"\xc5\x0e\x03" "PD4")
QDEF(MP_QSTR_PD5, (const byte*)"\xc4\x0e\x03" "PD5")
QDEF(MP_QSTR_PD6, (const byte*)"\xc7\x0e\x03" "PD6")
QDEF(MP_QSTR_PD7, (const byte*)"\xc6\x0e\x03" "PD7")
QDEF(MP_QSTR_PD8, (const byte*)"\xc9\x0e\x03" "PD8")
QDEF(MP_QSTR_PD9, (const byte*)"\xc8\x0e\x03" "PD9")
QDEF(MP_QSTR_PE0, (const byte*)"\xe0\x0e\x03" "PE0")
QDEF(MP_QSTR_PE1, (const byte*)"\xe1\x0e\x03" "PE1")
QDEF(MP_QSTR_PE10, (const byte*)"\x31\xeb\x04" "PE10")
QDEF(MP_QSTR_PE11, (const byte*)"\x30\xeb\x04" "PE11")
QDEF(MP_QSTR_PE12, (const byte*)"\x33\xeb\x04" "PE12")
QDEF(MP_QSTR_PE13, (const byte*)"\x32\xeb\x04" "PE13")
QDEF(MP_QSTR_PE14, (const byte*)"\x35\xeb\x04" "PE14")
QDEF(MP_QSTR_PE15, (const byte*)"\x34\xeb\x04" "PE15")
QDEF(MP_QSTR_PE2, (const byte*)"\xe2\x0e\x03" "PE2")
QDEF(MP_QSTR_PE3, (const byte*)"\xe3\x0e\x03" "PE3")
QDEF(MP_QSTR_PE4, (const byte*)"\xe4\x0e\x03" "PE4")
QDEF(MP_QSTR_PE5, (const byte*)"\xe5\x0e\x03" "PE5")
QDEF(MP_QSTR_PE6, (const byte*)"\xe6\x0e\x03" "PE6")
QDEF(MP_QSTR_PE7, (const byte*)"\xe7\x0e\x03" "PE7")
QDEF(MP_QSTR_PE8, (const byte*)"\xe8\x0e\x03" "PE8")
QDEF(MP_QSTR_PE9, (const byte*)"\xe9\x0e\x03" "PE9")
QDEF(MP_QSTR_PF0, (const byte*)"\x03\x0f\x03" "PF0")
QDEF(MP_QSTR_PF1, (const byte*)"\x02\x0f\x03" "PF1")
QDEF(MP_QSTR_PF10, (const byte*)"\x72\xef\x04" "PF10")
QDEF(MP_QSTR_PF11, (const byte*)"\x73\xef\x04" "PF11")
QDEF(MP_QSTR_PF12, (const byte*)"\x70\xef\x04" "PF12")
QDEF(MP_QSTR_PF13, (const byte*)"\x71\xef\x04" "PF13")
QDEF(MP_QSTR_PF14, (const byte*)"\x76\xef\x04" "PF14")
QDEF(MP_QSTR_PF15, (const byte*)"\x77\xef\x04" "PF15")
QDEF(MP_QSTR_PF2, (const byte*)"\x01\x0f\x03" "PF2")
QDEF(MP_QSTR_PF3, (const byte*)"\x00\x0f\x03" "PF3")
QDEF(MP_QSTR_PF4, (const byte*)"\x07\x0f\x03" "PF4")
QDEF(MP_QSTR_PF5, (const byte*)"\x06\x0f\x03" "PF5")
QDEF(MP_QSTR_PF6, (const byte*)"\x05\x0f\x03" "PF6")
QDEF(MP_QSTR_PF7, (const byte*)"\x04\x0f\x03" "PF7")
QDEF(MP_QSTR_PF8, (const byte*)"\x0b\x0f\x03" "PF8")
QDEF(MP_QSTR_PF9, (const byte*)"\x0a\x0f\x03" "PF9")
QDEF(MP_QSTR_PG0, (const byte*)"\x22\x0f\x03" "PG0")
QDEF(MP_QSTR_PG1, (const byte*)"\x23\x0f\x03" "PG1")
QDEF(MP_QSTR_PG10, (const byte*)"\xb3\xf3\x04" "PG10")
QDEF(MP_QSTR_PG11, (const byte*)"\xb2\xf3\x04" "PG11")
QDEF(MP_QSTR_PG12, (const byte*)"\xb1\xf3\x04" "PG12")
QDEF(MP_QSTR_PG13, (const byte*)"\xb0\xf3\x04" "PG13")
QDEF(MP_QSTR_PG14, (const byte*)"\xb7\xf3\x04" "PG14")
QDEF(MP_QSTR_PG15, (const byte*)"\xb6\xf3\x04" "PG15")
QDEF(MP_QSTR_PG2, (const byte*)"\x20\x0f\x03" "PG2")
QDEF(MP_QSTR_PG3, (const byte*)"\x21\x0f\x03" "PG3")
QDEF(MP_QSTR_PG4, (const byte*)"\x26\x0f\x03" "PG4")
QDEF(MP_QSTR_PG5, (const byte*)"\x27\x0f\x03" "PG5")
QDEF(MP_QSTR_PG6, (const byte*)"\x24\x0f\x03" "PG6")
QDEF(MP_QSTR_PG7, (const byte*)"\x25\x0f\x03" "PG7")
QDEF(MP_QSTR_PG8, (const byte*)"\x2a\x0f\x03" "PG8")
QDEF(MP_QSTR_PG9, (const byte*)"\x2b\x0f\x03" "PG9")
QDEF(MP_QSTR_PH0, (const byte*)"\x4d\x10\x03" "PH0")
QDEF(MP_QSTR_PH1, (const byte*)"\x4c\x10\x03" "PH1")
QDEF(MP_QSTR_PH10, (const byte*)"\xfc\x19\x04" "PH10")
QDEF(MP_QSTR_PH11, (const byte*)"\xfd\x19\x04" "PH11")
QDEF(MP_QSTR_PH12, (const byte*)"\xfe\x19\x04" "PH12")
QDEF(MP_QSTR_PH13, (const byte*)"\xff\x19\x04" "PH13")
QDEF(MP_QSTR_PH14, (const byte*)"\xf8\x19\x04" "PH14")
QDEF(MP_QSTR_PH15, (const byte*)"\xf9\x19\x04" "PH15")
QDEF(MP_QSTR_PH2, (const byte*)"\x4f\x10\x03" "PH2")
QDEF(MP_QSTR_PH3, (const byte*)"\x4e\x10\x03" "PH3")
QDEF(MP_QSTR_PH4, (const byte*)"\x49\x10\x03" "PH4")
QDEF(MP_QSTR_PH5, (const byte*)"\x48\x10\x03" "PH5")
QDEF(MP_QSTR_PH6, (const byte*)"\x4b\x10\x03" "PH6")
QDEF(MP_QSTR_PH7, (const byte*)"\x4a\x10\x03" "PH7")
QDEF(MP_QSTR_PH8, (const byte*)"\x45\x10\x03" "PH8")
QDEF(MP_QSTR_PH9, (const byte*)"\x44\x10\x03" "PH9")
QDEF(MP_QSTR_PI0, (const byte*)"\x6c\x10\x03" "PI0")
QDEF(MP_QSTR_PI1, (const byte*)"\x6d\x10\x03" "PI1")
QDEF(MP_QSTR_PI10, (const byte*)"\x3d\x1e\x04" "PI10")
QDEF(MP_QSTR_PI11, (const byte*)"\x3c\x1e\x04" "PI11")
QDEF(MP_QSTR_PI2, (const byte*)"\x6e\x10\x03" "PI2")
QDEF(MP_QSTR_PI3, (const byte*)"\x6f\x10\x03" "PI3")
QDEF(MP_QSTR_PI4, (const byte*)"\x68\x10\x03" "PI4")
QDEF(MP_QSTR_PI5, (const byte*)"\x69\x10\x03" "PI5")
QDEF(MP_QSTR_PI6, (const byte*)"\x6a\x10\x03" "PI6")
QDEF(MP_QSTR_PI7, (const byte*)"\x6b\x10\x03" "PI7")
QDEF(MP_QSTR_PI8, (const byte*)"\x64\x10\x03" "PI8")
QDEF(MP_QSTR_PI9, (const byte*)"\x65\x10\x03" "PI9")
QDEF(MP_QSTR_ADC1, (const byte*)"\xf2\x82\x04" "ADC1")
QDEF(MP_QSTR_ADC1_COMMON, (const byte*)"\x40\x8d\x0b" "ADC1_COMMON")
QDEF(MP_QSTR_ADC_AWD2CR, (const byte*)"\x2d\x2b\x0a" "ADC_AWD2CR")
QDEF(MP_QSTR_ADC_AWD3CR, (const byte*)"\x2c\x2f\x0a" "ADC_AWD3CR")
QDEF(MP_QSTR_ADC_CALFACT, (const byte*)"\x02\xf8\x0b" "ADC_CALFACT")
QDEF(MP_QSTR_ADC_CFGR, (const byte*)"\xcc\x2d\x08" "ADC_CFGR")
QDEF(MP_QSTR_ADC_CFGR2, (const byte*)"\x7e\xe7\x09" "ADC_CFGR2")
QDEF(MP_QSTR_ADC_CR, (const byte*)"\x6d\xa2\x06" "ADC_CR")
QDEF(MP_QSTR_ADC_DIFSEL, (const byte*)"\xad\xca\x0a" "ADC_DIFSEL")
QDEF(MP_QSTR_ADC_DR, (const byte*)"\x0a\xa1\x06" "ADC_DR")
QDEF(MP_QSTR_ADC_IER, (const byte*)"\xe2\xb6\x07" "ADC_IER")
QDEF(MP_QSTR_ADC_ISR, (const byte*)"\x34\xb5\x07" "ADC_ISR")
QDEF(MP_QSTR_ADC_JDR1, (const byte*)"\xf1\x43\x08" "ADC_JDR1")
QDEF(MP_QSTR_ADC_JDR2, (const byte*)"\xf2\x43\x08" "ADC_JDR2")
QDEF(MP_QSTR_ADC_JDR3, (const byte*)"\xf3\x43\x08" "ADC_JDR3")
QDEF(MP_QSTR_ADC_JDR4, (const byte*)"\xf4\x43\x08" "ADC_JDR4")
QDEF(MP_QSTR_ADC_JSQR, (const byte*)"\x66\x00\x08" "ADC_JSQR")
QDEF(MP_QSTR_ADC_OFR1, (const byte*)"\x96\xb8\x08" "ADC_OFR1")
QDEF(MP_QSTR_ADC_OFR2, (const byte*)"\x95\xb8\x08" "ADC_OFR2")
QDEF(MP_QSTR_ADC_OFR3, (const byte*)"\x94\xb8\x08" "ADC_OFR3")
QDEF(MP_QSTR_ADC_OFR4, (const byte*)"\x93\xb8\x08" "ADC_OFR4")
QDEF(MP_QSTR_ADC_SMPR1, (const byte*)"\x51\xb7\x09" "ADC_SMPR1")
QDEF(MP_QSTR_ADC_SMPR2, (const byte*)"\x52\xb7\x09" "ADC_SMPR2")
QDEF(MP_QSTR_ADC_SQR1, (const byte*)"\xdd\xbd\x08" "ADC_SQR1")
QDEF(MP_QSTR_ADC_SQR2, (const byte*)"\xde\xbd\x08" "ADC_SQR2")
QDEF(MP_QSTR_ADC_SQR3, (const byte*)"\xdf\xbd\x08" "ADC_SQR3")
QDEF(MP_QSTR_ADC_SQR4, (const byte*)"\xd8\xbd\x08" "ADC_SQR4")
QDEF(MP_QSTR_ADC_TR1, (const byte*)"\x6b\x82\x07" "ADC_TR1")
QDEF(MP_QSTR_ADC_TR2, (const byte*)"\x68\x82\x07" "ADC_TR2")
QDEF(MP_QSTR_ADC_TR3, (const byte*)"\x69\x82\x07" "ADC_TR3")
QDEF(MP_QSTR_CAN, (const byte*)"\x89\xcf\x03" "CAN")
QDEF(MP_QSTR_CAN1, (const byte*)"\x98\xc0\x04" "CAN1")
QDEF(MP_QSTR_COMP1, (const byte*)"\x25\xeb\x05" "COMP1")
QDEF(MP_QSTR_COMP12_COMMON, (const byte*)"\xe5\xb4\x0d" "COMP12_COMMON")
QDEF(MP_QSTR_COMP2, (const byte*)"\x26\xeb\x05" "COMP2")
QDEF(MP_QSTR_CRC, (const byte*)"\x37\xd1\x03" "CRC")
QDEF(MP_QSTR_CRC_CR, (const byte*)"\x39\x22\x06" "CRC_CR")
QDEF(MP_QSTR_CRC_DR, (const byte*)"\xde\x22\x06" "CRC_DR")
QDEF(MP_QSTR_CRC_IDR, (const byte*)"\x57\x4e\x07" "CRC_IDR")
QDEF(MP_QSTR_CRC_INIT, (const byte*)"\x92\x2f\x08" "CRC_INIT")
QDEF(MP_QSTR_CRC_POL, (const byte*)"\x7b\xaf\x07" "CRC_POL")
QDEF(MP_QSTR_CRS, (const byte*)"\x27\xd1\x03" "CRS")
QDEF(MP_QSTR_DAC, (const byte*)"\x03\xba\x03" "DAC")
QDEF(MP_QSTR_DAC1, (const byte*)"\x52\xfa\x04" "DAC1")
QDEF(MP_QSTR_DAC_CCR, (const byte*)"\x4e\xb5\x07" "DAC_CCR")
QDEF(MP_QSTR_DAC_CR, (const byte*)"\x8d\x81\x06" "DAC_CR")
QDEF(MP_QSTR_DAC_DHR12L1, (const byte*)"\xfc\x22\x0b" "DAC_DHR12L1")
QDEF(MP_QSTR_DAC_DHR12L2, (const byte*)"\xff\x22\x0b" "DAC_DHR12L2")
QDEF(MP_QSTR_DAC_DHR12LD, (const byte*)"\x89\x22\x0b" "DAC_DHR12LD")
QDEF(MP_QSTR_DAC_DHR12R1, (const byte*)"\xa2\x23\x0b" "DAC_DHR12R1")
QDEF(MP_QSTR_DAC_DHR12R2, (const byte*)"\xa1\x23\x0b" "DAC_DHR12R2")
QDEF(MP_QSTR_DAC_DHR12RD, (const byte*)"\xd7\x23\x0b" "DAC_DHR12RD")
QDEF(MP_QSTR_DAC_DHR8R1, (const byte*)"\x39\x97\x0a" "DAC_DHR8R1")
QDEF(MP_QSTR_DAC_DHR8R2, (const byte*)"\x3a\x97\x0a" "DAC_DHR8R2")
QDEF(MP_QSTR_DAC_DHR8RD, (const byte*)"\x4c\x97\x0a" "DAC_DHR8RD")
QDEF(MP_QSTR_DAC_DOR1, (const byte*)"\x54\x90\x08" "DAC_DOR1")
QDEF(MP_QSTR_DAC_DOR2, (const byte*)"\x57\x90\x08" "DAC_DOR2")
QDEF(MP_QSTR_DAC_MCR, (const byte*)"\xc0\x8a\x07" "DAC_MCR")
QDEF(MP_QSTR_DAC_SHHR, (const byte*)"\x5d\x76\x08" "DAC_SHHR")
QDEF(MP_QSTR_DAC_SHRR, (const byte*)"\x87\x76\x08" "DAC_SHRR")
QDEF(MP_QSTR_DAC_SHSR1, (const byte*)"\x97\x53\x09" "DAC_SHSR1")
QDEF(MP_QSTR_DAC_SHSR2, (const byte*)"\x94\x53\x09" "DAC_SHSR2")
QDEF(MP_QSTR_DAC_SR, (const byte*)"\x9d\x7f\x06" "DAC_SR")
QDEF(MP_QSTR_DAC_SWTRIGR, (const byte*)"\x62\x88\x0b" "DAC_SWTRIGR")
QDEF(MP_QSTR_DBGMCU, (const byte*)"\x1f\x7d\x06" "DBGMCU")
QDEF(MP_QSTR_DBGMCU_APB1FZR1, (const byte*)"\xdd\xe7\x0f" "DBGMCU_APB1FZR1")
QDEF(MP_QSTR_DBGMCU_APB1FZR2, (const byte*)"\xde\xe7\x0f" "DBGMCU_APB1FZR2")
QDEF(MP_QSTR_DBGMCU_APB2FZ, (const byte*)"\x3d\x46\x0d" "DBGMCU_APB2FZ")
QDEF(MP_QSTR_DBGMCU_CR, (const byte*)"\x11\xd1\x09" "DBGMCU_CR")
QDEF(MP_QSTR_DBGMCU_IDCODE, (const byte*)"\xe0\x55\x0d" "DBGMCU_IDCODE")
QDEF(MP_QSTR_DCMI, (const byte*)"\xe6\x14\x04" "DCMI")
QDEF(MP_QSTR_DMA2, (const byte*)"\x1f\x2d\x04" "DMA2")
QDEF(MP_QSTR_DMAMUX1, (const byte*)"\x1c\xf1\x07" "DMAMUX1")
QDEF(MP_QSTR_DMA_IFCR, (const byte*)"\xec\x9e\x08" "DMA_IFCR")
QDEF(MP_QSTR_DMA_ISR, (const byte*)"\x5a\xbc\x07" "DMA_ISR")
QDEF(MP_QSTR_EXTI, (const byte*)"\x25\xc6\x04" "EXTI")
QDEF(MP_QSTR_EXTI_EMR1, (const byte*)"\x11\x9b\x09" "EXTI_EMR1")
QDEF(MP_QSTR_EXTI_EMR2, (const byte*)"\x12\x9b\x09" "EXTI_EMR2")
QDEF(MP_QSTR_EXTI_FTSR1, (const byte*)"\x78\xa2\x0a" "EXTI_FTSR1")
QDEF(MP_QSTR_EXTI_FTSR2, (const byte*)"\x7b\xa2\x0a" "EXTI_FTSR2")
QDEF(MP_QSTR_EXTI_IMR1, (const byte*)"\x9d\x6c\x09" "EXTI_IMR1")
QDEF(MP_QSTR_EXTI_IMR2, (const byte*)"\x9e\x6c\x09" "EXTI_IMR2")
QDEF(MP_QSTR_EXTI_PR1, (const byte*)"\xa9\x61\x08" "EXTI_PR1")
QDEF(MP_QSTR_EXTI_PR2, (const byte*)"\xaa\x61\x08" "EXTI_PR2")
QDEF(MP_QSTR_EXTI_RTSR1, (const byte*)"\x6c\x23\x0a" "EXTI_RTSR1")
QDEF(MP_QSTR_EXTI_RTSR2, (const byte*)"\x6f\x23\x0a" "EXTI_RTSR2")
QDEF(MP_QSTR_EXTI_SWIER1, (const byte*)"\xb1\xef\x0b" "EXTI_SWIER1")
QDEF(MP_QSTR_EXTI_SWIER2, (const byte*)"\xb2\xef\x0b" "EXTI_SWIER2")
QDEF(MP_QSTR_FIREWALL, (const byte*)"\x6b\x75\x08" "FIREWALL")
QDEF(MP_QSTR_FLASH, (const byte*)"\x95\x50\x05" "FLASH")
QDEF(MP_QSTR_FLASH_ACR, (const byte*)"\x5a\xaf\x09" "FLASH_ACR")
QDEF(MP_QSTR_FLASH_CFGR, (const byte*)"\x3a\xc5\x0a" "FLASH_CFGR")
QDEF(MP_QSTR_FLASH_CR, (const byte*)"\x5b\xee\x08" "FLASH_CR")
QDEF(MP_QSTR_FLASH_ECCR, (const byte*)"\x7d\xca\x0a" "FLASH_ECCR")
QDEF(MP_QSTR_FLASH_KEYR, (const byte*)"\x6f\x49\x0a" "FLASH_KEYR")
QDEF(MP_QSTR_FLASH_OPTKEYR, (const byte*)"\x24\xa5\x0d" "FLASH_OPTKEYR")
QDEF(MP_QSTR_FLASH_OPTR, (const byte*)"\x13\xac\x0a" "FLASH_OPTR")
QDEF(MP_QSTR_FLASH_PCROP1ER, (const byte*)"\xb2\xf8\x0e" "FLASH_PCROP1ER")
QDEF(MP_QSTR_FLASH_PCROP1SR, (const byte*)"\xe4\xfb\x0e" "FLASH_PCROP1SR")
QDEF(MP_QSTR_FLASH_PCROP2ER, (const byte*)"\xb1\xec\x0e" "FLASH_PCROP2ER")
QDEF(MP_QSTR_FLASH_PCROP2SR, (const byte*)"\x67\xef\x0e" "FLASH_PCROP2SR")
QDEF(MP_QSTR_FLASH_PDKEYR, (const byte*)"\x7b\x1a\x0c" "FLASH_PDKEYR")
QDEF(MP_QSTR_FLASH_RESERVED1, (const byte*)"\xdf\x4c\x0f" "FLASH_RESERVED1")
QDEF(MP_QSTR_FLASH_SR, (const byte*)"\x4b\xf0\x08" "FLASH_SR")
QDEF(MP_QSTR_FLASH_WRP1AR, (const byte*)"\x9d\xe6\x0c" "FLASH_WRP1AR")
QDEF(MP_QSTR_FLASH_WRP1BR, (const byte*)"\x3e\xe6\x0c" "FLASH_WRP1BR")
QDEF(MP_QSTR_FLASH_WRP2AR, (const byte*)"\x1e\xe2\x0c" "FLASH_WRP2AR")
QDEF(MP_QSTR_FLASH_WRP2BR, (const byte*)"\xfd\xe2\x0c" "FLASH_WRP2BR")
QDEF(MP_QSTR_GFXMMU, (const byte*)"\x09\x00\x06" "GFXMMU")
QDEF(MP_QSTR_GPIOA, (const byte*)"\xd5\xe2\x05" "GPIOA")
QDEF(MP_QSTR_GPIOB, (const byte*)"\xd6\xe2\x05" "GPIOB")
QDEF(MP_QSTR_GPIOC, (const byte*)"\xd7\xe2\x05" "GPIOC")
QDEF(MP_QSTR_GPIOD, (const byte*)"\xd0\xe2\x05" "GPIOD")
QDEF(MP_QSTR_GPIOE, (const byte*)"\xd1\xe2\x05" "GPIOE")
QDEF(MP_QSTR_GPIOF, (const byte*)"\xd2\xe2\x05" "GPIOF")
QDEF(MP_QSTR_GPIOG, (const byte*)"\xd3\xe2\x05" "GPIOG")
QDEF(MP_QSTR_GPIOH, (const byte*)"\xdc\xe2\x05" "GPIOH")
QDEF(MP_QSTR_GPIOI, (const byte*)"\xdd\xe2\x05" "GPIOI")
QDEF(MP_QSTR_GPIO_AFR0, (const byte*)"\xce\xee\x09" "GPIO_AFR0")
QDEF(MP_QSTR_GPIO_AFR1, (const byte*)"\xcf\xee\x09" "GPIO_AFR1")
QDEF(MP_QSTR_GPIO_BRR, (const byte*)"\x69\x05\x08" "GPIO_BRR")
QDEF(MP_QSTR_GPIO_BSRR, (const byte*)"\x1a\xae\x09" "GPIO_BSRR")
QDEF(MP_QSTR_GPIO_IDR, (const byte*)"\xf4\xe5\x08" "GPIO_IDR")
QDEF(MP_QSTR_GPIO_LCKR, (const byte*)"\xfd\x23\x09" "GPIO_LCKR")
QDEF(MP_QSTR_GPIO_MODER, (const byte*)"\x7a\xd5\x0a" "GPIO_MODER")
QDEF(MP_QSTR_GPIO_ODR, (const byte*)"\xf2\xdc\x08" "GPIO_ODR")
QDEF(MP_QSTR_GPIO_OSPEEDR, (const byte*)"\x31\xe2\x0c" "GPIO_OSPEEDR")
QDEF(MP_QSTR_GPIO_OTYPER, (const byte*)"\xee\x2e\x0b" "GPIO_OTYPER")
QDEF(MP_QSTR_GPIO_PUPDR, (const byte*)"\x88\xf3\x0a" "GPIO_PUPDR")
QDEF(MP_QSTR_I2C1, (const byte*)"\xcc\xca\x04" "I2C1")
QDEF(MP_QSTR_I2C2, (const byte*)"\xcf\xca\x04" "I2C2")
QDEF(MP_QSTR_I2C3, (const byte*)"\xce\xca\x04" "I2C3")
QDEF(MP_QSTR_I2C4, (const byte*)"\xc9\xca\x04" "I2C4")
QDEF(MP_QSTR_I2C_CR1, (const byte*)"\xc2\x44\x07" "I2C_CR1")
QDEF(MP_QSTR_I2C_CR2, (const byte*)"\xc1\x44\x07" "I2C_CR2")
QDEF(MP_QSTR_I2C_ICR, (const byte*)"\x1a\x7d\x07" "I2C_ICR")
QDEF(MP_QSTR_I2C_ISR, (const byte*)"\x0a\x7f\x07" "I2C_ISR")
QDEF(MP_QSTR_I2C_OAR1, (const byte*)"\xaf\x31\x08" "I2C_OAR1")
QDEF(MP_QSTR_I2C_OAR2, (const byte*)"\xac\x31\x08" "I2C_OAR2")
QDEF(MP_QSTR_I2C_PECR, (const byte*)"\x06\x06\x08" "I2C_PECR")
QDEF(MP_QSTR_I2C_RXDR, (const byte*)"\x7e\xc7\x08" "I2C_RXDR")
QDEF(MP_QSTR_I2C_TIMEOUTR, (const byte*)"\x6b\xba\x0c" "I2C_TIMEOUTR")
QDEF(MP_QSTR_I2C_TIMINGR, (const byte*)"\xc0\xfc\x0b" "I2C_TIMINGR")
QDEF(MP_QSTR_I2C_TXDR, (const byte*)"\xb8\xef\x08" "I2C_TXDR")
QDEF(MP_QSTR_IWDG, (const byte*)"\xf8\x36\x04" "IWDG")
QDEF(MP_QSTR_IWDG_KR, (const byte*)"\x1e\x24\x07" "IWDG_KR")
QDEF(MP_QSTR_IWDG_PR, (const byte*)"\xe5\x25\x07" "IWDG_PR")
QDEF(MP_QSTR_IWDG_RLR, (const byte*)"\x0b\xcc\x08" "IWDG_RLR")
QDEF(MP_QSTR_IWDG_SR, (const byte*)"\x06\x25\x07" "IWDG_SR")
QDEF(MP_QSTR_IWDG_WINR, (const byte*)"\x85\xb6\x09" "IWDG_WINR")
QDEF(MP_QSTR_LPTIM1, (const byte*)"\x58\x9d\x06" "LPTIM1")
QDEF(MP_QSTR_LPTIM2, (const byte*)"\x5b\x9d\x06" "LPTIM2")
QDEF(MP_QSTR_LPUART1, (const byte*)"\x7a\x1b\x07" "LPUART1")
QDEF(MP_QSTR_OCTOSPI1, (const byte*)"\x49\x97\x08" "OCTOSPI1")
QDEF(MP_QSTR_OCTOSPI2, (const byte*)"\x4a\x97\x08" "OCTOSPI2")
QDEF(MP_QSTR_OCTOSPIM, (const byte*)"\x35\x97\x08" "OCTOSPIM")
QDEF(MP_QSTR_OPAMP, (const byte*)"\x86\x84\x05" "OPAMP")
QDEF(MP_QSTR_OPAMP1, (const byte*)"\x77\x15\x06" "OPAMP1")
QDEF(MP_QSTR_OPAMP12_COMMON, (const byte*)"\xb7\xab\x0e" "OPAMP12_COMMON")
QDEF(MP_QSTR_OPAMP2, (const byte*)"\x74\x15\x06" "OPAMP2")
QDEF(MP_QSTR_PWR, (const byte*)"\x50\x0d\x03" "PWR")
QDEF(MP_QSTR_PWR_CR1, (const byte*)"\x0f\x7e\x07" "PWR_CR1")
QDEF(MP_QSTR_PWR_CR2, (const byte*)"\x0c\x7e\x07" "PWR_CR2")
QDEF(MP_QSTR_PWR_CR3, (const byte*)"\x0d\x7e\x07" "PWR_CR3")
QDEF(MP_QSTR_PWR_CR4, (const byte*)"\x0a\x7e\x07" "PWR_CR4")
QDEF(MP_QSTR_PWR_CR5, (const byte*)"\x0b\x7e\x07" "PWR_CR5")
QDEF(MP_QSTR_PWR_PDCRA, (const byte*)"\x2b\xc0\x09" "PWR_PDCRA")
QDEF(MP_QSTR_PWR_PDCRB, (const byte*)"\x28\xc0\x09" "PWR_PDCRB")
QDEF(MP_QSTR_PWR_PDCRC, (const byte*)"\x29\xc0\x09" "PWR_PDCRC")
QDEF(MP_QSTR_PWR_PDCRD, (const byte*)"\x2e\xc0\x09" "PWR_PDCRD")
QDEF(MP_QSTR_PWR_PDCRE, (const byte*)"\x2f\xc0\x09" "PWR_PDCRE")
QDEF(MP_QSTR_PWR_PDCRF, (const byte*)"\x2c\xc0\x09" "PWR_PDCRF")
QDEF(MP_QSTR_PWR_PDCRG, (const byte*)"\x2d\xc0\x09" "PWR_PDCRG")
QDEF(MP_QSTR_PWR_PDCRH, (const byte*)"\x22\xc0\x09" "PWR_PDCRH")
QDEF(MP_QSTR_PWR_PDCRI, (const byte*)"\x23\xc0\x09" "PWR_PDCRI")
QDEF(MP_QSTR_PWR_PUCRA, (const byte*)"\xda\x7a\x09" "PWR_PUCRA")
QDEF(MP_QSTR_PWR_PUCRB, (const byte*)"\xd9\x7a\x09" "PWR_PUCRB")
QDEF(MP_QSTR_PWR_PUCRC, (const byte*)"\xd8\x7a\x09" "PWR_PUCRC")
QDEF(MP_QSTR_PWR_PUCRD, (const byte*)"\xdf\x7a\x09" "PWR_PUCRD")
QDEF(MP_QSTR_PWR_PUCRE, (const byte*)"\xde\x7a\x09" "PWR_PUCRE")
QDEF(MP_QSTR_PWR_PUCRF, (const byte*)"\xdd\x7a\x09" "PWR_PUCRF")
QDEF(MP_QSTR_PWR_PUCRG, (const byte*)"\xdc\x7a\x09" "PWR_PUCRG")
QDEF(MP_QSTR_PWR_PUCRH, (const byte*)"\xd3\x7a\x09" "PWR_PUCRH")
QDEF(MP_QSTR_PWR_PUCRI, (const byte*)"\xd2\x7a\x09" "PWR_PUCRI")
QDEF(MP_QSTR_PWR_SCR, (const byte*)"\x0d\xc0\x07" "PWR_SCR")
QDEF(MP_QSTR_PWR_SR1, (const byte*)"\x1f\xbe\x07" "PWR_SR1")
QDEF(MP_QSTR_PWR_SR2, (const byte*)"\x1c\xbe\x07" "PWR_SR2")
QDEF(MP_QSTR_RCC, (const byte*)"\x57\x07\x03" "RCC")
QDEF(MP_QSTR_RCC_AHB1ENR, (const byte*)"\x6b\x01\x0b" "RCC_AHB1ENR")
QDEF(MP_QSTR_RCC_AHB1RSTR, (const byte*)"\xf5\xda\x0c" "RCC_AHB1RSTR")
QDEF(MP_QSTR_RCC_AHB1SMENR, (const byte*)"\x15\x23\x0d" "RCC_AHB1SMENR")
QDEF(MP_QSTR_RCC_AHB2ENR, (const byte*)"\x88\x6c\x0b" "RCC_AHB2ENR")
QDEF(MP_QSTR_RCC_AHB2RSTR, (const byte*)"\x76\xea\x0c" "RCC_AHB2RSTR")
QDEF(MP_QSTR_RCC_AHB2SMENR, (const byte*)"\xb6\x5b\x0d" "RCC_AHB2SMENR")
QDEF(MP_QSTR_RCC_AHB3ENR, (const byte*)"\x29\xc8\x0b" "RCC_AHB3ENR")
QDEF(MP_QSTR_RCC_AHB3RSTR, (const byte*)"\x77\x89\x0c" "RCC_AHB3RSTR")
QDEF(MP_QSTR_RCC_AHB3SMENR, (const byte*)"\xd7\x13\x0d" "RCC_AHB3SMENR")
QDEF(MP_QSTR_RCC_APB1ENR1, (const byte*)"\xe2\x90\x0c" "RCC_APB1ENR1")
QDEF(MP_QSTR_RCC_APB1ENR2, (const byte*)"\xe1\x90\x0c" "RCC_APB1ENR2")
QDEF(MP_QSTR_RCC_APB1RSTR1, (const byte*)"\xbc\x22\x0d" "RCC_APB1RSTR1")
QDEF(MP_QSTR_RCC_APB1RSTR2, (const byte*)"\xbf\x22\x0d" "RCC_APB1RSTR2")
QDEF(MP_QSTR_RCC_APB1SMENR1, (const byte*)"\x9c\x51\x0e" "RCC_APB1SMENR1")
QDEF(MP_QSTR_RCC_APB1SMENR2, (const byte*)"\x9f\x51\x0e" "RCC_APB1SMENR2")
QDEF(MP_QSTR_RCC_APB2ENR, (const byte*)"\x90\xad\x0b" "RCC_APB2ENR")
QDEF(MP_QSTR_RCC_APB2RSTR, (const byte*)"\x6e\x94\x0c" "RCC_APB2RSTR")
QDEF(MP_QSTR_RCC_APB2SMENR, (const byte*)"\xae\x88\x0d" "RCC_APB2SMENR")
QDEF(MP_QSTR_RCC_BDCR, (const byte*)"\x1f\xdf\x08" "RCC_BDCR")
QDEF(MP_QSTR_RCC_CCIPR, (const byte*)"\x43\x2c\x09" "RCC_CCIPR")
QDEF(MP_QSTR_RCC_CCIPR2, (const byte*)"\x91\xb4\x0a" "RCC_CCIPR2")
QDEF(MP_QSTR_RCC_CFGR, (const byte*)"\x38\x83\x08" "RCC_CFGR")
QDEF(MP_QSTR_RCC_CICR, (const byte*)"\x33\x65\x08" "RCC_CICR")
QDEF(MP_QSTR_RCC_CIER, (const byte*)"\x75\x66\x08" "RCC_CIER")
QDEF(MP_QSTR_RCC_CIFR, (const byte*)"\x96\x65\x08" "RCC_CIFR")
QDEF(MP_QSTR_RCC_CR, (const byte*)"\xd9\x24\x06" "RCC_CR")
QDEF(MP_QSTR_RCC_CRRCR, (const byte*)"\x1a\x5e\x09" "RCC_CRRCR")
QDEF(MP_QSTR_RCC_CSR, (const byte*)"\x8a\xbf\x07" "RCC_CSR")
QDEF(MP_QSTR_RCC_ICSCR, (const byte*)"\xe0\x93\x09" "RCC_ICSCR")
QDEF(MP_QSTR_RCC_PLLCFGR, (const byte*)"\x68\x4e\x0b" "RCC_PLLCFGR")
QDEF(MP_QSTR_RCC_PLLSAI1CFGR, (const byte*)"\x82\xdf\x0f" "RCC_PLLSAI1CFGR")
QDEF(MP_QSTR_RCC_PLLSAI2CFGR, (const byte*)"\x01\x9f\x0f" "RCC_PLLSAI2CFGR")
QDEF(MP_QSTR_RNG, (const byte*)"\xfe\x07\x03" "RNG")
QDEF(MP_QSTR_RNG_CR, (const byte*)"\xd0\x8c\x06" "RNG_CR")
QDEF(MP_QSTR_RNG_DR, (const byte*)"\xb7\x8c\x06" "RNG_DR")
QDEF(MP_QSTR_RNG_SR, (const byte*)"\xc0\x8e\x06" "RNG_SR")
QDEF(MP_QSTR_RTC, (const byte*)"\xa0\x04\x03" "RTC")
QDEF(MP_QSTR_RTC_ALRMAR, (const byte*)"\x7e\xcd\x0a" "RTC_ALRMAR")
QDEF(MP_QSTR_RTC_ALRMASSR, (const byte*)"\xde\x1e\x0c" "RTC_ALRMASSR")
QDEF(MP_QSTR_RTC_ALRMBR, (const byte*)"\xdd\xcd\x0a" "RTC_ALRMBR")
QDEF(MP_QSTR_RTC_ALRMBSSR, (const byte*)"\xbd\xaa\x0c" "RTC_ALRMBSSR")
QDEF(MP_QSTR_RTC_BKP0R, (const byte*)"\x84\xca\x09" "RTC_BKP0R")
QDEF(MP_QSTR_RTC_BKP10R, (const byte*)"\xf5\x23\x0a" "RTC_BKP10R")
QDEF(MP_QSTR_RTC_BKP11R, (const byte*)"\xd4\x23\x0a" "RTC_BKP11R")
QDEF(MP_QSTR_RTC_BKP12R, (const byte*)"\x37\x23\x0a" "RTC_BKP12R")
QDEF(MP_QSTR_RTC_BKP13R, (const byte*)"\x16\x23\x0a" "RTC_BKP13R")
QDEF(MP_QSTR_RTC_BKP14R, (const byte*)"\x71\x23\x0a" "RTC_BKP14R")
QDEF(MP_QSTR_RTC_BKP15R, (const byte*)"\x50\x23\x0a" "RTC_BKP15R")
QDEF(MP_QSTR_RTC_BKP16R, (const byte*)"\xb3\x22\x0a" "RTC_BKP16R")
QDEF(MP_QSTR_RTC_BKP17R, (const byte*)"\x92\x22\x0a" "RTC_BKP17R")
QDEF(MP_QSTR_RTC_BKP18R, (const byte*)"\xfd\x24\x0a" "RTC_BKP18R")
QDEF(MP_QSTR_RTC_BKP19R, (const byte*)"\xdc\x24\x0a" "RTC_BKP19R")
QDEF(MP_QSTR_RTC_BKP1R, (const byte*)"\xa5\xca\x09" "RTC_BKP1R")
QDEF(MP_QSTR_RTC_BKP20R, (const byte*)"\x76\x1f\x0a" "RTC_BKP20R")
QDEF(MP_QSTR_RTC_BKP21R, (const byte*)"\x17\x1f\x0a" "RTC_BKP21R")
QDEF(MP_QSTR_RTC_BKP22R, (const byte*)"\x34\x1f\x0a" "RTC_BKP22R")
QDEF(MP_QSTR_RTC_BKP23R, (const byte*)"\xd5\x1f\x0a" "RTC_BKP23R")
QDEF(MP_QSTR_RTC_BKP24R, (const byte*)"\xf2\x1e\x0a" "RTC_BKP24R")
QDEF(MP_QSTR_RTC_BKP25R, (const byte*)"\x93\x1e\x0a" "RTC_BKP25R")
QDEF(MP_QSTR_RTC_BKP26R, (const byte*)"\xb0\x1e\x0a" "RTC_BKP26R")
QDEF(MP_QSTR_RTC_BKP27R, (const byte*)"\x51\x1f\x0a" "RTC_BKP27R")
QDEF(MP_QSTR_RTC_BKP28R, (const byte*)"\x7e\x20\x0a" "RTC_BKP28R")
QDEF(MP_QSTR_RTC_BKP29R, (const byte*)"\x1f\x20\x0a" "RTC_BKP29R")
QDEF(MP_QSTR_RTC_BKP2R, (const byte*)"\xc6\xca\x09" "RTC_BKP2R")
QDEF(MP_QSTR_RTC_BKP30R, (const byte*)"\x77\x1b\x0a" "RTC_BKP30R")
QDEF(MP_QSTR_RTC_BKP31R, (const byte*)"\x56\x1b\x0a" "RTC_BKP31R")
QDEF(MP_QSTR_RTC_BKP3R, (const byte*)"\xe7\xca\x09" "RTC_BKP3R")
QDEF(MP_QSTR_RTC_BKP4R, (const byte*)"\x00\xca\x09" "RTC_BKP4R")
QDEF(MP_QSTR_RTC_BKP5R, (const byte*)"\x21\xca\x09" "RTC_BKP5R")
QDEF(MP_QSTR_RTC_BKP6R, (const byte*)"\x42\xca\x09" "RTC_BKP6R")
QDEF(MP_QSTR_RTC_BKP7R, (const byte*)"\x63\xca\x09" "RTC_BKP7R")
QDEF(MP_QSTR_RTC_BKP8R, (const byte*)"\x8c\xcb\x09" "RTC_BKP8R")
QDEF(MP_QSTR_RTC_BKP9R, (const byte*)"\xad\xcb\x09" "RTC_BKP9R")
QDEF(MP_QSTR_RTC_CALR, (const byte*)"\x83\x4d\x08" "RTC_CALR")
QDEF(MP_QSTR_RTC_CR, (const byte*)"\x4e\xcc\x06" "RTC_CR")
QDEF(MP_QSTR_RTC_DR, (const byte*)"\xa9\xcb\x06" "RTC_DR")
QDEF(MP_QSTR_RTC_ISR, (const byte*)"\xf7\x2b\x07" "RTC_ISR")
QDEF(MP_QSTR_RTC_OR, (const byte*)"\xc2\xca\x06" "RTC_OR")
QDEF(MP_QSTR_RTC_PRER, (const byte*)"\xca\x44\x08" "RTC_PRER")
QDEF(MP_QSTR_RTC_SHIFTR, (const byte*)"\x2d\x25\x0a" "RTC_SHIFTR")
QDEF(MP_QSTR_RTC_SSR, (const byte*)"\x6d\x16\x07" "RTC_SSR")
QDEF(MP_QSTR_RTC_TAMPCR, (const byte*)"\x26\x2d\x0a" "RTC_TAMPCR")
QDEF(MP_QSTR_RTC_TR, (const byte*)"\xb9\xc9\x06" "RTC_TR")
QDEF(MP_QSTR_RTC_TSDR, (const byte*)"\x2e\x20\x08" "RTC_TSDR")
QDEF(MP_QSTR_RTC_TSSSR, (const byte*)"\x4a\xe1\x09" "RTC_TSSSR")
QDEF(MP_QSTR_RTC_TSTR, (const byte*)"\x3e\x1e\x08" "RTC_TSTR")
QDEF(MP_QSTR_RTC_WPR, (const byte*)"\x8a\x04\x07" "RTC_WPR")
QDEF(MP_QSTR_RTC_WUTR, (const byte*)"\x1b\xaa\x08" "RTC_WUTR")
QDEF(MP_QSTR_SAI1, (const byte*)"\x6f\x87\x04" "SAI1")
QDEF(MP_QSTR_SAI2, (const byte*)"\x6c\x87\x04" "SAI2")
QDEF(MP_QSTR_SDMMC1, (const byte*)"\x00\x87\x06" "SDMMC1")
QDEF(MP_QSTR_SPI1, (const byte*)"\xfe\x4f\x04" "SPI1")
QDEF(MP_QSTR_SPI2, (const byte*)"\xfd\x4f\x04" "SPI2")
QDEF(MP_QSTR_SPI3, (const byte*)"\xfc\x4f\x04" "SPI3")
QDEF(MP_QSTR_SPI_CR1, (const byte*)"\xb0\x08\x07" "SPI_CR1")
QDEF(MP_QSTR_SPI_CR2, (const byte*)"\xb3\x08\x07" "SPI_CR2")
QDEF(MP_QSTR_SPI_CRCPR, (const byte*)"\xc0\x4b\x09" "SPI_CRCPR")
QDEF(MP_QSTR_SPI_DR, (const byte*)"\x06\x7c\x06" "SPI_DR")
QDEF(MP_QSTR_SPI_RXCRCR, (const byte*)"\x1a\x5f\x0a" "SPI_RXCRCR")
QDEF(MP_QSTR_SPI_SR, (const byte*)"\x71\x7a\x06" "SPI_SR")
QDEF(MP_QSTR_SPI_TXCRCR, (const byte*)"\xdc\xb1\x0a" "SPI_TXCRCR")
QDEF(MP_QSTR_SYSCFG, (const byte*)"\xde\x81\x06" "SYSCFG")
QDEF(MP_QSTR_SYSCFG_CFGR1, (const byte*)"\x80\x7c\x0c" "SYSCFG_CFGR1")
QDEF(MP_QSTR_SYSCFG_CFGR2, (const byte*)"\x83\x7c\x0c" "SYSCFG_CFGR2")
QDEF(MP_QSTR_SYSCFG_EXTICR0, (const byte*)"\xe0\x6d\x0e" "SYSCFG_EXTICR0")
QDEF(MP_QSTR_SYSCFG_EXTICR1, (const byte*)"\xe1\x6d\x0e" "SYSCFG_EXTICR1")
QDEF(MP_QSTR_SYSCFG_EXTICR2, (const byte*)"\xe2\x6d\x0e" "SYSCFG_EXTICR2")
QDEF(MP_QSTR_SYSCFG_EXTICR3, (const byte*)"\xe3\x6d\x0e" "SYSCFG_EXTICR3")
QDEF(MP_QSTR_SYSCFG_MEMRMP, (const byte*)"\xab\x46\x0d" "SYSCFG_MEMRMP")
QDEF(MP_QSTR_SYSCFG_SCSR, (const byte*)"\x90\xd1\x0b" "SYSCFG_SCSR")
QDEF(MP_QSTR_SYSCFG_SKR, (const byte*)"\x8b\xa2\x0a" "SYSCFG_SKR")
QDEF(MP_QSTR_SYSCFG_SWPR, (const byte*)"\xe7\xa2\x0b" "SYSCFG_SWPR")
QDEF(MP_QSTR_SYSCFG_SWPR2, (const byte*)"\xf5\xff\x0c" "SYSCFG_SWPR2")
QDEF(MP_QSTR_TIM1, (const byte*)"\x84\xe1\x04" "TIM1")
QDEF(MP_QSTR_TIM15, (const byte*)"\x31\x12\x05" "TIM15")
QDEF(MP_QSTR_TIM16, (const byte*)"\x32\x12\x05" "TIM16")
QDEF(MP_QSTR_TIM17, (const byte*)"\x33\x12\x05" "TIM17")
QDEF(MP_QSTR_TIM2, (const byte*)"\x87\xe1\x04" "TIM2")
QDEF(MP_QSTR_TIM3, (const byte*)"\x86\xe1\x04" "TIM3")
QDEF(MP_QSTR_TIM4, (const byte*)"\x81\xe1\x04" "TIM4")
QDEF(MP_QSTR_TIM5, (const byte*)"\x80\xe1\x04" "TIM5")
QDEF(MP_QSTR_TIM6, (const byte*)"\x83\xe1\x04" "TIM6")
QDEF(MP_QSTR_TIM7, (const byte*)"\x82\xe1\x04" "TIM7")
QDEF(MP_QSTR_TIM8, (const byte*)"\x8d\xe1\x04" "TIM8")
QDEF(MP_QSTR_TIM_ARR, (const byte*)"\xeb\x9f\x07" "TIM_ARR")
QDEF(MP_QSTR_TIM_BDTR, (const byte*)"\xaa\xd0\x08" "TIM_BDTR")
QDEF(MP_QSTR_TIM_CCER, (const byte*)"\x7d\x70\x08" "TIM_CCER")
QDEF(MP_QSTR_TIM_CCMR1, (const byte*)"\x24\x5e\x09" "TIM_CCMR1")
QDEF(MP_QSTR_TIM_CCMR2, (const byte*)"\x27\x5e\x09" "TIM_CCMR2")
QDEF(MP_QSTR_TIM_CCMR3, (const byte*)"\x26\x5e\x09" "TIM_CCMR3")
QDEF(MP_QSTR_TIM_CCR1, (const byte*)"\x69\x71\x08" "TIM_CCR1")
QDEF(MP_QSTR_TIM_CCR2, (const byte*)"\x6a\x71\x08" "TIM_CCR2")
QDEF(MP_QSTR_TIM_CCR3, (const byte*)"\x6b\x71\x08" "TIM_CCR3")
QDEF(MP_QSTR_TIM_CCR4, (const byte*)"\x6c\x71\x08" "TIM_CCR4")
QDEF(MP_QSTR_TIM_CCR5, (const byte*)"\x6d\x71\x08" "TIM_CCR5")
QDEF(MP_QSTR_TIM_CCR6, (const byte*)"\x6e\x71\x08" "TIM_CCR6")
QDEF(MP_QSTR_TIM_CNT, (const byte*)"\xf3\xa5\x07" "TIM_CNT")
QDEF(MP_QSTR_TIM_CR1, (const byte*)"\x0a\xa8\x07" "TIM_CR1")
QDEF(MP_QSTR_TIM_CR2, (const byte*)"\x09\xa8\x07" "TIM_CR2")
QDEF(MP_QSTR_TIM_DCR, (const byte*)"\x5f\xbb\x07" "TIM_DCR")
QDEF(MP_QSTR_TIM_DIER, (const byte*)"\x10\xfa\x08" "TIM_DIER")
QDEF(MP_QSTR_TIM_DMAR, (const byte*)"\x90\xe9\x08" "TIM_DMAR")
QDEF(MP_QSTR_TIM_EGR, (const byte*)"\x5a\xae\x07" "TIM_EGR")
QDEF(MP_QSTR_TIM_OR1, (const byte*)"\x06\x97\x07" "TIM_OR1")
QDEF(MP_QSTR_TIM_OR2, (const byte*)"\x05\x97\x07" "TIM_OR2")
QDEF(MP_QSTR_TIM_OR3, (const byte*)"\x04\x97\x07" "TIM_OR3")
QDEF(MP_QSTR_TIM_PSC, (const byte*)"\x4a\xec\x07" "TIM_PSC")
QDEF(MP_QSTR_TIM_RCR, (const byte*)"\xc9\xd5\x07" "TIM_RCR")
QDEF(MP_QSTR_TIM_SMCR, (const byte*)"\xa5\x0b\x08" "TIM_SMCR")
QDEF(MP_QSTR_TIM_SR, (const byte*)"\xcb\x0e\x06" "TIM_SR")
QDEF(MP_QSTR_TSC, (const byte*)"\xc1\xfc\x03" "TSC")
QDEF(MP_QSTR_UART4, (const byte*)"\xa3\x50\x05" "UART4")
QDEF(MP_QSTR_UART5, (const byte*)"\xa2\x50\x05" "UART5")
QDEF(MP_QSTR_USART1, (const byte*)"\x35\x5b\x06" "USART1")
QDEF(MP_QSTR_USART2, (const byte*)"\x36\x5b\x06" "USART2")
QDEF(MP_QSTR_USART3, (const byte*)"\x37\x5b\x06" "USART3")
QDEF(MP_QSTR_USART_BRR, (const byte*)"\xf9\x6f\x09" "USART_BRR")
QDEF(MP_QSTR_USART_CR1, (const byte*)"\xdb\x5a\x09" "USART_CR1")
QDEF(MP_QSTR_USART_CR2, (const byte*)"\xd8\x5a\x09" "USART_CR2")
QDEF(MP_QSTR_USART_CR3, (const byte*)"\xd9\x5a\x09" "USART_CR3")
QDEF(MP_QSTR_USART_GTPR, (const byte*)"\x2a\xda\x0a" "USART_GTPR")
QDEF(MP_QSTR_USART_ICR, (const byte*)"\xc3\x53\x09" "USART_ICR")
QDEF(MP_QSTR_USART_ISR, (const byte*)"\xd3\x51\x09" "USART_ISR")
QDEF(MP_QSTR_USART_PRESC, (const byte*)"\xcc\xec\x0b" "USART_PRESC")
QDEF(MP_QSTR_USART_RDR, (const byte*)"\xbf\x2d\x09" "USART_RDR")
QDEF(MP_QSTR_USART_RQR, (const byte*)"\x0a\x2f\x09" "USART_RQR")
QDEF(MP_QSTR_USART_RTOR, (const byte*)"\xa0\x25\x0a" "USART_RTOR")
QDEF(MP_QSTR_USART_TDR, (const byte*)"\xb9\x35\x09" "USART_TDR")
QDEF(MP_QSTR_VREFBUF, (const byte*)"\xd3\x47\x07" "VREFBUF")
QDEF(MP_QSTR_WWDG, (const byte*)"\x26\x29\x04" "WWDG")
QDEF(MP_QSTR_WWDG_CFR, (const byte*)"\x4e\x8b\x08" "WWDG_CFR")
QDEF(MP_QSTR_WWDG_CR, (const byte*)"\x88\x97\x07" "WWDG_CR")
QDEF(MP_QSTR_WWDG_SR, (const byte*)"\x98\x95\x07" "WWDG_SR")
QDEF(MP_QSTR_ADC, (const byte*)"\x63\xb6\x03" "ADC")
QDEF(MP_QSTR_ADCAll, (const byte*)"\x02\x28\x06" "ADCAll")
QDEF(MP_QSTR_AF_INET, (const byte*)"\xeb\xb7\x07" "AF_INET")
QDEF(MP_QSTR_AF_INET6, (const byte*)"\x7d\xb5\x08" "AF_INET6")
QDEF(MP_QSTR_AF_OD, (const byte*)"\x96\x2f\x05" "AF_OD")
QDEF(MP_QSTR_AF_PP, (const byte*)"\x7d\x2f\x05" "AF_PP")
QDEF(MP_QSTR_ALIGN, (const byte*)"\xc8\x1c\x05" "ALIGN")
QDEF(MP_QSTR_ALL, (const byte*)"\x64\xb7\x03" "ALL")
QDEF(MP_QSTR_ALPHA_1BIT, (const byte*)"\xe0\x8e\x0a" "ALPHA_1BIT")
QDEF(MP_QSTR_ALPHA_2BIT, (const byte*)"\x03\x0b\x0a" "ALPHA_2BIT")
QDEF(MP_QSTR_ALPHA_4BIT, (const byte*)"\x45\xc1\x0a" "ALPHA_4BIT")
QDEF(MP_QSTR_ALPHA_8BIT, (const byte*)"\xc9\x91\x0a" "ALPHA_8BIT")
QDEF(MP_QSTR_ALT, (const byte*)"\x7c\xb7\x03" "ALT")
QDEF(MP_QSTR_ALT_OPEN_DRAIN, (const byte*)"\xf8\xeb\x0e" "ALT_OPEN_DRAIN")
QDEF(MP_QSTR_ANALOG, (const byte*)"\xaf\xf2\x06" "ANALOG")
QDEF(MP_QSTR_ANIM, (const byte*)"\xce\x9b\x04" "ANIM")
QDEF(MP_QSTR_APPLY, (const byte*)"\x71\x7a\x05" "APPLY")
QDEF(MP_QSTR_AREA, (const byte*)"\x52\xcf\x04" "AREA")
QDEF(MP_QSTR_ARRAY, (const byte*)"\x5c\x7a\x05" "ARRAY")
QDEF(MP_QSTR_AUDIO, (const byte*)"\x33\x1a\x05" "AUDIO")
QDEF(MP_QSTR_AUTO, (const byte*)"\xea\xb8\x04" "AUTO")
QDEF(MP_QSTR_AXIS, (const byte*)"\xc6\xf8\x04" "AXIS")
QDEF(MP_QSTR_BACKSPACE, (const byte*)"\x8a\x9e\x09" "BACKSPACE")
QDEF(MP_QSTR_BACKWARD, (const byte*)"\x0e\x8d\x08" "BACKWARD")
QDEF(MP_QSTR_BAR_ANIM_STATE, (const byte*)"\x28\x68\x0e" "BAR_ANIM_STATE")
QDEF(MP_QSTR_BASE_DIR_CHG, (const byte*)"\xc3\xcd\x0c" "BASE_DIR_CHG")
QDEF(MP_QSTR_BATTERY_1, (const byte*)"\x86\x37\x09" "BATTERY_1")
QDEF(MP_QSTR_BATTERY_2, (const byte*)"\x85\x37\x09" "BATTERY_2")
QDEF(MP_QSTR_BATTERY_3, (const byte*)"\x84\x37\x09" "BATTERY_3")
QDEF(MP_QSTR_BATTERY_EMPTY, (const byte*)"\x42\xbf\x0d" "BATTERY_EMPTY")
QDEF(MP_QSTR_BATTERY_FULL, (const byte*)"\xc4\xcf\x0c" "BATTERY_FULL")
QDEF(MP_QSTR_BELL, (const byte*)"\x02\x14\x04" "BELL")
QDEF(MP_QSTR_BFINT16, (const byte*)"\x95\xe2\x07" "BFINT16")
QDEF(MP_QSTR_BFINT32, (const byte*)"\x53\xe2\x07" "BFINT32")
QDEF(MP_QSTR_BFINT8, (const byte*)"\x4a\x9a\x06" "BFINT8")
QDEF(MP_QSTR_BFUINT16, (const byte*)"\x40\xa6\x08" "BFUINT16")
QDEF(MP_QSTR_BFUINT32, (const byte*)"\x06\xa6\x08" "BFUINT32")
QDEF(MP_QSTR_BFUINT8, (const byte*)"\xbf\xaf\x07" "BFUINT8")
QDEF(MP_QSTR_BF_LEN, (const byte*)"\x19\xb0\x06" "BF_LEN")
QDEF(MP_QSTR_BF_POS, (const byte*)"\x52\x9d\x06" "BF_POS")
QDEF(MP_QSTR_BG, (const byte*)"\x80\x72\x02" "BG")
QDEF(MP_QSTR_BIDI_DIR, (const byte*)"\x83\xa1\x08" "BIDI_DIR")
QDEF(MP_QSTR_BIG_ENDIAN, (const byte*)"\xff\x51\x0a" "BIG_ENDIAN")
QDEF(MP_QSTR_BLOCK, (const byte*)"\x0c\x45\x05" "BLOCK")
QDEF(MP_QSTR_BLUETOOTH, (const byte*)"\x73\x8a\x09" "BLUETOOTH")
QDEF(MP_QSTR_BORDER, (const byte*)"\xe9\x96\x06" "BORDER")
QDEF(MP_QSTR_BOTH, (const byte*)"\x14\x3f\x04" "BOTH")
QDEF(MP_QSTR_BOTTOM, (const byte*)"\x6a\x29\x06" "BOTTOM")
QDEF(MP_QSTR_BOX_INA, (const byte*)"\xe9\x48\x07" "BOX_INA")
QDEF(MP_QSTR_BOX_PR, (const byte*)"\x4d\xd7\x06" "BOX_PR")
QDEF(MP_QSTR_BOX_REL, (const byte*)"\xd4\xa9\x07" "BOX_REL")
QDEF(MP_QSTR_BOX_TGL_PR, (const byte*)"\x0d\x4e\x0a" "BOX_TGL_PR")
QDEF(MP_QSTR_BOX_TGL_REL, (const byte*)"\x14\x19\x0b" "BOX_TGL_REL")
QDEF(MP_QSTR_BREAK, (const byte*)"\x1a\xd9\x05" "BREAK")
QDEF(MP_QSTR_BRK_HIGH, (const byte*)"\x8f\x8b\x08" "BRK_HIGH")
QDEF(MP_QSTR_BRK_LOW, (const byte*)"\x35\xbf\x07" "BRK_LOW")
QDEF(MP_QSTR_BRK_OFF, (const byte*)"\x8e\xd4\x07" "BRK_OFF")
QDEF(MP_QSTR_BTNM_BTN, (const byte*)"\x37\x81\x08" "BTNM_BTN")
QDEF(MP_QSTR_BTNS_POS, (const byte*)"\x5d\x16\x08" "BTNS_POS")
QDEF(MP_QSTR_BTN_BG, (const byte*)"\x47\x5c\x06" "BTN_BG")
QDEF(MP_QSTR_BTN_INA, (const byte*)"\x84\x01\x07" "BTN_INA")
QDEF(MP_QSTR_BTN_PR, (const byte*)"\x00\x5e\x06" "BTN_PR")
QDEF(MP_QSTR_BTN_REL, (const byte*)"\xb9\x28\x07" "BTN_REL")
QDEF(MP_QSTR_BTN_TGL_PR, (const byte*)"\xc0\x93\x0a" "BTN_TGL_PR")
QDEF(MP_QSTR_BTN_TGL_REL, (const byte*)"\xf9\xf5\x0b" "BTN_TGL_REL")
QDEF(MP_QSTR_BUSY, (const byte*)"\xf8\x54\x04" "BUSY")
QDEF(MP_QSTR_BUTTON, (const byte*)"\xf3\xda\x06" "BUTTON")
QDEF(MP_QSTR_Blob, (const byte*)"\x86\xd4\x04" "Blob")
QDEF(MP_QSTR_BytesIO, (const byte*)"\x1a\xb7\x07" "BytesIO")
QDEF(MP_QSTR_CALL, (const byte*)"\xa7\xc0\x04" "CALL")
QDEF(MP_QSTR_CANCEL, (const byte*)"\x03\xac\x06" "CANCEL")
QDEF(MP_QSTR_CELL1, (const byte*)"\x32\xc5\x05" "CELL1")
QDEF(MP_QSTR_CELL2, (const byte*)"\x31\xc5\x05" "CELL2")
QDEF(MP_QSTR_CELL3, (const byte*)"\x30\xc5\x05" "CELL3")
QDEF(MP_QSTR_CELL4, (const byte*)"\x37\xc5\x05" "CELL4")
QDEF(MP_QSTR_CENTER, (const byte*)"\x8e\xdb\x06" "CENTER")
QDEF(MP_QSTR_CF, (const byte*)"\xe0\x72\x02" "CF")
QDEF(MP_QSTR_CHARGE, (const byte*)"\xff\x11\x06" "CHARGE")
QDEF(MP_QSTR_CHART_POINT, (const byte*)"\xfa\x8e\x0b" "CHART_POINT")
QDEF(MP_QSTR_CHART_TICK_LENGTH, (const byte*)"\x40\xba\x11" "CHART_TICK_LENGTH")
QDEF(MP_QSTR_CHILD_CHG, (const byte*)"\x5c\xf8\x09" "CHILD_CHG")
QDEF(MP_QSTR_CIRCLE, (const byte*)"\xf7\x02\x06" "CIRCLE")
QDEF(MP_QSTR_CIRCULAR, (const byte*)"\xb4\x76\x08" "CIRCULAR")
QDEF(MP_QSTR_CLEANUP, (const byte*)"\x25\x8a\x07" "CLEANUP")
QDEF(MP_QSTR_CLICKED, (const byte*)"\x6a\xd4\x07" "CLICKED")
QDEF(MP_QSTR_CLICK_FOCUS, (const byte*)"\xb8\xb6\x0b" "CLICK_FOCUS")
QDEF(MP_QSTR_CLICK_TRIG, (const byte*)"\x9c\x76\x0a" "CLICK_TRIG")
QDEF(MP_QSTR_CLOSE, (const byte*)"\x53\x88\x05" "CLOSE")
QDEF(MP_QSTR_COLOR_MODE, (const byte*)"\xc4\x2f\x0a" "COLOR_MODE")
QDEF(MP_QSTR_COLUMN, (const byte*)"\xd3\xce\x06" "COLUMN")
QDEF(MP_QSTR_COL_L, (const byte*)"\xb6\xef\x05" "COL_L")
QDEF(MP_QSTR_COL_M, (const byte*)"\xb7\xef\x05" "COL_M")
QDEF(MP_QSTR_COL_R, (const byte*)"\xa8\xef\x05" "COL_R")
QDEF(MP_QSTR_COMPRESSED, (const byte*)"\x42\xb8\x0a" "COMPRESSED")
QDEF(MP_QSTR_CONSTANT_ARC, (const byte*)"\xd4\xa1\x0c" "CONSTANT_ARC")
QDEF(MP_QSTR_CONTENT, (const byte*)"\x4c\x3d\x07" "CONTENT")
QDEF(MP_QSTR_CONTROL, (const byte*)"\xe2\xf5\x07" "CONTROL")
QDEF(MP_QSTR_COORD, (const byte*)"\x90\x03\x05" "COORD")
QDEF(MP_QSTR_COPY, (const byte*)"\x20\xdb\x04" "COPY")
QDEF(MP_QSTR_CORD_CHG, (const byte*)"\x8c\xd1\x08" "CORD_CHG")
QDEF(MP_QSTR_CORE_TEMP, (const byte*)"\xcd\x58\x09" "CORE_TEMP")
QDEF(MP_QSTR_CORE_VBAT, (const byte*)"\x80\x9c\x09" "CORE_VBAT")
QDEF(MP_QSTR_CORE_VREF, (const byte*)"\x06\x58\x09" "CORE_VREF")
QDEF(MP_QSTR_COVER, (const byte*)"\xe8\x6b\x05" "COVER")
QDEF(MP_QSTR_COVER_CHK, (const byte*)"\xd7\x3d\x09" "COVER_CHK")
QDEF(MP_QSTR_CROP, (const byte*)"\xcb\xf8\x04" "CROP")
QDEF(MP_QSTR_CTRL, (const byte*)"\x2c\xfd\x04" "CTRL")
QDEF(MP_QSTR_CTS, (const byte*)"\x61\xd1\x03" "CTS")
QDEF(MP_QSTR_CURSOR, (const byte*)"\xcf\x1f\x06" "CURSOR")
QDEF(MP_QSTR_CUT, (const byte*)"\x07\xd1\x03" "CUT")
QDEF(MP_QSTR_C_Pointer, (const byte*)"\x02\xab\x09" "C_Pointer")
QDEF(MP_QSTR_DAY_NAMES, (const byte*)"\xb2\xf4\x09" "DAY_NAMES")
QDEF(MP_QSTR_DEEPSLEEP_RESET, (const byte*)"\x14\x0e\x0f" "DEEPSLEEP_RESET")
QDEF(MP_QSTR_DEF, (const byte*)"\x82\xba\x03" "DEF")
QDEF(MP_QSTR_DEFOCUS, (const byte*)"\x88\x39\x07" "DEFOCUS")
QDEF(MP_QSTR_DEFOCUSED, (const byte*)"\x29\xc4\x09" "DEFOCUSED")
QDEF(MP_QSTR_DEL, (const byte*)"\x88\xba\x03" "DEL")
QDEF(MP_QSTR_DELETE, (const byte*)"\x1c\x2c\x06" "DELETE")
QDEF(MP_QSTR_DENIED, (const byte*)"\x22\xf0\x06" "DENIED")
QDEF(MP_QSTR_DESIGN, (const byte*)"\x97\x4b\x06" "DESIGN")
QDEF(MP_QSTR_DIR, (const byte*)"\x1a\xbb\x03" "DIR")
QDEF(MP_QSTR_DIRECTORY, (const byte*)"\xac\x75\x09" "DIRECTORY")
QDEF(MP_QSTR_DISC, (const byte*)"\x38\x1e\x04" "DISC")
QDEF(MP_QSTR_DOT, (const byte*)"\x5a\xbc\x03" "DOT")
QDEF(MP_QSTR_DOWN, (const byte*)"\x37\x47\x04" "DOWN")
QDEF(MP_QSTR_DOWNLOAD, (const byte*)"\x91\x3e\x08" "DOWNLOAD")
QDEF(MP_QSTR_DRAG, (const byte*)"\x75\x5b\x04" "DRAG")
QDEF(MP_QSTR_DRAG_BEGIN, (const byte*)"\x0d\x68\x0a" "DRAG_BEGIN")
QDEF(MP_QSTR_DRAG_DIR, (const byte*)"\xf5\x46\x08" "DRAG_DIR")
QDEF(MP_QSTR_DRAG_END, (const byte*)"\x45\x4a\x08" "DRAG_END")
QDEF(MP_QSTR_DRAG_THROW_BEGIN, (const byte*)"\xc4\x12\x10" "DRAG_THROW_BEGIN")
QDEF(MP_QSTR_DRAW_LAST_TICK, (const byte*)"\x1a\x09\x0e" "DRAW_LAST_TICK")
QDEF(MP_QSTR_DRAW_MAIN, (const byte*)"\x91\xed\x09" "DRAW_MAIN")
QDEF(MP_QSTR_DRAW_POST, (const byte*)"\x22\xac\x09" "DRAW_POST")
QDEF(MP_QSTR_DRIVE, (const byte*)"\xa9\xe9\x05" "DRIVE")
QDEF(MP_QSTR_DUMMY, (const byte*)"\x2d\x4e\x05" "DUMMY")
QDEF(MP_QSTR_DecompIO, (const byte*)"\x93\xb7\x08" "DecompIO")
QDEF(MP_QSTR_EACCES, (const byte*)"\x37\xc2\x06" "EACCES")
QDEF(MP_QSTR_EADDRINUSE, (const byte*)"\x17\x11\x0a" "EADDRINUSE")
QDEF(MP_QSTR_EAGAIN, (const byte*)"\x20\xec\x06" "EAGAIN")
QDEF(MP_QSTR_EALREADY, (const byte*)"\x46\x15\x08" "EALREADY")
QDEF(MP_QSTR_EBADF, (const byte*)"\x61\xa3\x05" "EBADF")
QDEF(MP_QSTR_ECONNABORTED, (const byte*)"\x27\xab\x0c" "ECONNABORTED")
QDEF(MP_QSTR_ECONNREFUSED, (const byte*)"\x3a\x2c\x0c" "ECONNREFUSED")
QDEF(MP_QSTR_ECONNRESET, (const byte*)"\x19\xfb\x0a" "ECONNRESET")
QDEF(MP_QSTR_EDGE, (const byte*)"\x86\x72\x04" "EDGE")
QDEF(MP_QSTR_EDGE_FLASH, (const byte*)"\x09\x82\x0a" "EDGE_FLASH")
QDEF(MP_QSTR_EDIT, (const byte*)"\x59\x74\x04" "EDIT")
QDEF(MP_QSTR_EEXIST, (const byte*)"\x53\xad\x06" "EEXIST")
QDEF(MP_QSTR_EHOSTUNREACH, (const byte*)"\x86\x25\x0c" "EHOSTUNREACH")
QDEF(MP_QSTR_EINPROGRESS, (const byte*)"\x9a\xa0\x0b" "EINPROGRESS")
QDEF(MP_QSTR_EINVAL, (const byte*)"\x5c\xff\x06" "EINVAL")
QDEF(MP_QSTR_EIO, (const byte*)"\x86\xa6\x03" "EIO")
QDEF(MP_QSTR_EISDIR, (const byte*)"\xa5\x4f\x06" "EISDIR")
QDEF(MP_QSTR_EJECT, (const byte*)"\x18\x16\x05" "EJECT")
QDEF(MP_QSTR_ENCODER, (const byte*)"\x31\x4d\x07" "ENCODER")
QDEF(MP_QSTR_ENC_A, (const byte*)"\x93\x1e\x05" "ENC_A")
QDEF(MP_QSTR_ENC_AB, (const byte*)"\xb1\xf0\x06" "ENC_AB")
QDEF(MP_QSTR_ENC_B, (const byte*)"\x90\x1e\x05" "ENC_B")
QDEF(MP_QSTR_END, (const byte*)"\x2a\xa7\x03" "END")
QDEF(MP_QSTR_ENOBUFS, (const byte*)"\xe3\x87\x07" "ENOBUFS")
QDEF(MP_QSTR_ENODEV, (const byte*)"\xb6\x67\x06" "ENODEV")
QDEF(MP_QSTR_ENOENT, (const byte*)"\x5e\x65\x06" "ENOENT")
QDEF(MP_QSTR_ENOMEM, (const byte*)"\xa4\x85\x06" "ENOMEM")
QDEF(MP_QSTR_ENOTCONN, (const byte*)"\x79\xd7\x08" "ENOTCONN")
QDEF(MP_QSTR_ENTER, (const byte*)"\x4d\x56\x05" "ENTER")
QDEF(MP_QSTR_ENUM_LV_BAR_ANIM_STATE, (const byte*)"\x41\x46\x16" "ENUM_LV_BAR_ANIM_STATE")
QDEF(MP_QSTR_ENUM_LV_BTNM_BTN, (const byte*)"\x9e\x2c\x10" "ENUM_LV_BTNM_BTN")
QDEF(MP_QSTR_ENUM_LV_CHART_POINT, (const byte*)"\xb3\x57\x13" "ENUM_LV_CHART_POINT")
QDEF(MP_QSTR_ENUM_LV_CHART_TICK_LENGTH, (const byte*)"\x09\xc6\x19" "ENUM_LV_CHART_TICK_LENGTH")
QDEF(MP_QSTR_ENUM_LV_COORD, (const byte*)"\xd9\xe6\x0d" "ENUM_LV_COORD")
QDEF(MP_QSTR_ENUM_LV_LABEL_DOT, (const byte*)"\xea\x30\x11" "ENUM_LV_LABEL_DOT")
QDEF(MP_QSTR_ENUM_LV_LABEL_POS, (const byte*)"\xf9\xfc\x11" "ENUM_LV_LABEL_POS")
QDEF(MP_QSTR_ENUM_LV_LABEL_TEXT_SEL, (const byte*)"\x6d\x5f\x16" "ENUM_LV_LABEL_TEXT_SEL")
QDEF(MP_QSTR_ENUM_LV_LOG_LEVEL, (const byte*)"\x61\x8a\x11" "ENUM_LV_LOG_LEVEL")
QDEF(MP_QSTR_ENUM_LV_RADIUS, (const byte*)"\xd4\xbc\x0e" "ENUM_LV_RADIUS")
QDEF(MP_QSTR_ENUM_LV_TA_CURSOR, (const byte*)"\x0c\xa1\x11" "ENUM_LV_TA_CURSOR")
QDEF(MP_QSTR_EOPNOTSUPP, (const byte*)"\xac\x97\x0a" "EOPNOTSUPP")
QDEF(MP_QSTR_EPERM, (const byte*)"\xea\x7f\x05" "EPERM")
QDEF(MP_QSTR_ERROR, (const byte*)"\x9d\x19\x05" "ERROR")
QDEF(MP_QSTR_ESC, (const byte*)"\x50\xa8\x03" "ESC")
QDEF(MP_QSTR_ETIMEDOUT, (const byte*)"\xff\xf8\x09" "ETIMEDOUT")
QDEF(MP_QSTR_EVENT, (const byte*)"\x29\x8a\x05" "EVENT")
QDEF(MP_QSTR_EVT_FALLING, (const byte*)"\x3a\x5d\x0b" "EVT_FALLING")
QDEF(MP_QSTR_EVT_RISING, (const byte*)"\x55\xfe\x0a" "EVT_RISING")
QDEF(MP_QSTR_EVT_RISING_FALLING, (const byte*)"\xcd\x08\x12" "EVT_RISING_FALLING")
QDEF(MP_QSTR_EXPAND, (const byte*)"\x23\xcb\x06" "EXPAND")
QDEF(MP_QSTR_ExtInt, (const byte*)"\x7f\x5c\x06" "ExtInt")
QDEF(MP_QSTR_FALLING, (const byte*)"\x02\x69\x07" "FALLING")
QDEF(MP_QSTR_FILE, (const byte*)"\x83\x13\x04" "FILE")
QDEF(MP_QSTR_FILL, (const byte*)"\x8a\x13\x04" "FILL")
QDEF(MP_QSTR_FILLSPIN_ARC, (const byte*)"\xa1\x22\x0c" "FILLSPIN_ARC")
QDEF(MP_QSTR_FIT, (const byte*)"\x1e\xb3\x03" "FIT")
QDEF(MP_QSTR_FLOAT32, (const byte*)"\xb4\x87\x07" "FLOAT32")
QDEF(MP_QSTR_FLOAT64, (const byte*)"\x17\x87\x07" "FLOAT64")
QDEF(MP_QSTR_FLOOD, (const byte*)"\x8b\x25\x05" "FLOOD")
QDEF(MP_QSTR_FOCUS, (const byte*)"\x69\xed\x05" "FOCUS")
QDEF(MP_QSTR_FOCUSED, (const byte*)"\x08\xf4\x07" "FOCUSED")
QDEF(MP_QSTR_FOLLOW, (const byte*)"\xf4\x45\x06" "FOLLOW")
QDEF(MP_QSTR_FONT_FMT_TXT, (const byte*)"\xf1\x1a\x0c" "FONT_FMT_TXT")
QDEF(MP_QSTR_FONT_FMT_TXT_CMAP, (const byte*)"\x51\xbd\x11" "FONT_FMT_TXT_CMAP")
QDEF(MP_QSTR_FONT_SUBPX, (const byte*)"\x05\x0e\x0a" "FONT_SUBPX")
QDEF(MP_QSTR_FORMAT0_FULL, (const byte*)"\x9a\x9c\x0c" "FORMAT0_FULL")
QDEF(MP_QSTR_FORMAT0_TINY, (const byte*)"\x83\x16\x0c" "FORMAT0_TINY")
QDEF(MP_QSTR_FORWARD, (const byte*)"\x7e\xfd\x07" "FORWARD")
QDEF(MP_QSTR_FS_ERR, (const byte*)"\xaa\x8a\x06" "FS_ERR")
QDEF(MP_QSTR_FS_MODE, (const byte*)"\xac\x81\x07" "FS_MODE")
QDEF(MP_QSTR_FS_RES, (const byte*)"\x0b\xd9\x06" "FS_RES")
QDEF(MP_QSTR_FULL, (const byte*)"\x96\x47\x04" "FULL")
QDEF(MP_QSTR_FileIO, (const byte*)"\xc5\x15\x06" "FileIO")
QDEF(MP_QSTR_Flash, (const byte*)"\x95\x91\x05" "Flash")
QDEF(MP_QSTR_FrameBuffer, (const byte*)"\xd8\xbe\x0b" "FrameBuffer")
QDEF(MP_QSTR_FrameBuffer1, (const byte*)"\xe9\x99\x0c" "FrameBuffer1")
QDEF(MP_QSTR_GET_EDITABLE, (const byte*)"\x5a\x00\x0c" "GET_EDITABLE")
QDEF(MP_QSTR_GET_TYPE, (const byte*)"\xf4\x8b\x08" "GET_TYPE")
QDEF(MP_QSTR_GPS, (const byte*)"\xe1\xc0\x03" "GPS")
QDEF(MP_QSTR_GREY, (const byte*)"\x8c\xc6\x04" "GREY")
QDEF(MP_QSTR_GREY_ALPHA, (const byte*)"\x67\x4c\x0a" "GREY_ALPHA")
QDEF(MP_QSTR_GRID, (const byte*)"\x1d\xc7\x04" "GRID")
QDEF(MP_QSTR_GROUP_REFOCUS_POLICY, (const byte*)"\x61\xe3\x14" "GROUP_REFOCUS_POLICY")
QDEF(MP_QSTR_GS2_HMSB, (const byte*)"\x28\xc3\x08" "GS2_HMSB")
QDEF(MP_QSTR_GS4_HMSB, (const byte*)"\x6e\x73\x08" "GS4_HMSB")
QDEF(MP_QSTR_GS8, (const byte*)"\xa9\xc0\x03" "GS8")
QDEF(MP_QSTR_HARD_RESET, (const byte*)"\xb0\x51\x0a" "HARD_RESET")
QDEF(MP_QSTR_HEADER, (const byte*)"\x9a\xb4\x06" "HEADER")
QDEF(MP_QSTR_HEADER_PR, (const byte*)"\x47\x47\x09" "HEADER_PR")
QDEF(MP_QSTR_HID, (const byte*)"\x00\xec\x03" "HID")
QDEF(MP_QSTR_HIDDEN, (const byte*)"\xef\x84\x06" "HIDDEN")
QDEF(MP_QSTR_HIDE, (const byte*)"\x45\x6c\x04" "HIDE")
QDEF(MP_QSTR_HIGH, (const byte*)"\x2b\x6c\x04" "HIGH")
QDEF(MP_QSTR_HIGHEST, (const byte*)"\x29\xa7\x07" "HIGHEST")
QDEF(MP_QSTR_HIGHLIGHTED_DAYS, (const byte*)"\x64\x5d\x10" "HIGHLIGHTED_DAYS")
QDEF(MP_QSTR_HOME, (const byte*)"\x6a\x76\x04" "HOME")
QDEF(MP_QSTR_HOR, (const byte*)"\x50\xec\x03" "HOR")
QDEF(MP_QSTR_HUE, (const byte*)"\x9d\xee\x03" "HUE")
QDEF(MP_QSTR_HW_ERR, (const byte*)"\x60\x4a\x06" "HW_ERR")
QDEF(MP_QSTR_I2C, (const byte*)"\x5d\xdf\x03" "I2C")
QDEF(MP_QSTR_IC, (const byte*)"\x2f\x73\x02" "IC")
QDEF(MP_QSTR_IMAGE, (const byte*)"\x62\xa0\x05" "IMAGE")
QDEF(MP_QSTR_IN, (const byte*)"\x22\x73\x02" "IN")
QDEF(MP_QSTR_INA, (const byte*)"\x23\xd7\x03" "INA")
QDEF(MP_QSTR_INACTIVE, (const byte*)"\x4e\xa7\x08" "INACTIVE")
QDEF(MP_QSTR_INACTIVE_DAYS, (const byte*)"\xbe\xdd\x0d" "INACTIVE_DAYS")
QDEF(MP_QSTR_INDEV_STATE, (const byte*)"\xfd\x1c\x0b" "INDEV_STATE")
QDEF(MP_QSTR_INDEV_TYPE, (const byte*)"\x72\xf7\x0a" "INDEV_TYPE")
QDEF(MP_QSTR_INDEXED_1BIT, (const byte*)"\x8b\x4d\x0c" "INDEXED_1BIT")
QDEF(MP_QSTR_INDEXED_2BIT, (const byte*)"\x68\xd1\x0c" "INDEXED_2BIT")
QDEF(MP_QSTR_INDEXED_4BIT, (const byte*)"\x2e\x77\x0c" "INDEXED_4BIT")
QDEF(MP_QSTR_INDEXED_8BIT, (const byte*)"\xa2\x09\x0c" "INDEXED_8BIT")
QDEF(MP_QSTR_INDIC, (const byte*)"\xcc\x31\x05" "INDIC")
QDEF(MP_QSTR_INDICATOR, (const byte*)"\x44\xf7\x09" "INDICATOR")
QDEF(MP_QSTR_INFO, (const byte*)"\xeb\xbb\x04" "INFO")
QDEF(MP_QSTR_INHERIT, (const byte*)"\x60\x44\x07" "INHERIT")
QDEF(MP_QSTR_INIFINITE, (const byte*)"\x32\x17\x09" "INIFINITE")
QDEF(MP_QSTR_INSERT, (const byte*)"\xd2\x58\x06" "INSERT")
QDEF(MP_QSTR_INT, (const byte*)"\x36\xd7\x03" "INT")
QDEF(MP_QSTR_INT16, (const byte*)"\x91\x76\x05" "INT16")
QDEF(MP_QSTR_INT32, (const byte*)"\x57\x76\x05" "INT32")
QDEF(MP_QSTR_INT64, (const byte*)"\xf4\x75\x05" "INT64")
QDEF(MP_QSTR_INT8, (const byte*)"\xce\xbd\x04" "INT8")
QDEF(MP_QSTR_INTERNAL, (const byte*)"\x42\xcc\x08" "INTERNAL")
QDEF(MP_QSTR_INV, (const byte*)"\x34\xd7\x03" "INV")
QDEF(MP_QSTR_INVERSE_LABELS_ORDER, (const byte*)"\x0e\x2d\x14" "INVERSE_LABELS_ORDER")
QDEF(MP_QSTR_INV_PARAM, (const byte*)"\xc4\x97\x09" "INV_PARAM")
QDEF(MP_QSTR_IN_BOTTOM_LEFT, (const byte*)"\x16\x43\x0e" "IN_BOTTOM_LEFT")
QDEF(MP_QSTR_IN_BOTTOM_MID, (const byte*)"\x0d\xcf\x0d" "IN_BOTTOM_MID")
QDEF(MP_QSTR_IN_BOTTOM_RIGHT, (const byte*)"\x4d\xc2\x0f" "IN_BOTTOM_RIGHT")
QDEF(MP_QSTR_IN_LEFT_MID, (const byte*)"\xb9\xee\x0b" "IN_LEFT_MID")
QDEF(MP_QSTR_IN_RIGHT_MID, (const byte*)"\x62\x89\x0c" "IN_RIGHT_MID")
QDEF(MP_QSTR_IN_TOP_LEFT, (const byte*)"\xf2\xc2\x0b" "IN_TOP_LEFT")
QDEF(MP_QSTR_IN_TOP_MID, (const byte*)"\x69\x03\x0a" "IN_TOP_MID")
QDEF(MP_QSTR_IN_TOP_RIGHT, (const byte*)"\xa9\x2d\x0c" "IN_TOP_RIGHT")
QDEF(MP_QSTR_IOBase, (const byte*)"\x36\xbe\x06" "IOBase")
QDEF(MP_QSTR_IRQ_FALLING, (const byte*)"\x37\xc0\x0b" "IRQ_FALLING")
QDEF(MP_QSTR_IRQ_RISING, (const byte*)"\x78\xed\x0a" "IRQ_RISING")
QDEF(MP_QSTR_IRQ_RISING_FALLING, (const byte*)"\x60\xd5\x12" "IRQ_RISING_FALLING")
QDEF(MP_QSTR_IRQ_RXIDLE, (const byte*)"\x7e\x72\x0a" "IRQ_RXIDLE")
QDEF(MP_QSTR_KEY, (const byte*)"\x12\xf1\x03" "KEY")
QDEF(MP_QSTR_KEYBOARD, (const byte*)"\xa8\x7e\x08" "KEYBOARD")
QDEF(MP_QSTR_KEYPAD, (const byte*)"\x27\xd3\x06" "KEYPAD")
QDEF(MP_QSTR_KNOB, (const byte*)"\xcd\xe5\x04" "KNOB")
QDEF(MP_QSTR_KNOB_OFF, (const byte*)"\xbd\xbf\x08" "KNOB_OFF")
QDEF(MP_QSTR_KNOB_ON, (const byte*)"\x93\x2c\x07" "KNOB_ON")
QDEF(MP_QSTR_LABEL_DOT, (const byte*)"\xe3\x4c\x09" "LABEL_DOT")
QDEF(MP_QSTR_LABEL_POS, (const byte*)"\xf0\x18\x09" "LABEL_POS")
QDEF(MP_QSTR_LABEL_TEXT_SEL, (const byte*)"\x84\xd6\x0e" "LABEL_TEXT_SEL")
QDEF(MP_QSTR_LAST, (const byte*)"\x2f\x5f\x04" "LAST")
QDEF(MP_QSTR_LAYOUT, (const byte*)"\x9f\xfb\x06" "LAYOUT")
QDEF(MP_QSTR_LCD, (const byte*)"\xce\xdc\x03" "LCD")
QDEF(MP_QSTR_LCT, (const byte*)"\xde\xdc\x03" "LCT")
QDEF(MP_QSTR_LED, (const byte*)"\x88\xdc\x03" "LED")
QDEF(MP_QSTR_LEFT, (const byte*)"\x9e\x6d\x04" "LEFT")
QDEF(MP_QSTR_LINE, (const byte*)"\x8b\x3c\x04" "LINE")
QDEF(MP_QSTR_LIST, (const byte*)"\x27\x3d\x04" "LIST")
QDEF(MP_QSTR_LITTLE_ENDIAN, (const byte*)"\xbf\x5b\x0d" "LITTLE_ENDIAN")
QDEF(MP_QSTR_LOCKED, (const byte*)"\xcf\x3f\x06" "LOCKED")
QDEF(MP_QSTR_LOG_LEVEL, (const byte*)"\x68\xc5\x09" "LOG_LEVEL")
QDEF(MP_QSTR_LONG, (const byte*)"\x0f\x65\x04" "LONG")
QDEF(MP_QSTR_LONGLONG, (const byte*)"\x85\xd4\x08" "LONGLONG")
QDEF(MP_QSTR_LONG_PRESS, (const byte*)"\x17\x1e\x0a" "LONG_PRESS")
QDEF(MP_QSTR_LONG_PRESSED, (const byte*)"\xb6\xf6\x0c" "LONG_PRESSED")
QDEF(MP_QSTR_LONG_PRESSED_REPEAT, (const byte*)"\x5e\x31\x13" "LONG_PRESSED_REPEAT")
QDEF(MP_QSTR_LONG_PRESS_REP, (const byte*)"\x0f\x65\x0e" "LONG_PRESS_REP")
QDEF(MP_QSTR_LOOP, (const byte*)"\x39\x65\x04" "LOOP")
QDEF(MP_QSTR_LOW, (const byte*)"\x51\xdc\x03" "LOW")
QDEF(MP_QSTR_LOWEST, (const byte*)"\x93\xc9\x06" "LOWEST")
QDEF(MP_QSTR_LSB, (const byte*)"\xd8\xde\x03" "LSB")
QDEF(MP_QSTR_LTR, (const byte*)"\xaf\xde\x03" "LTR")
QDEF(MP_QSTR_LV_ALIGN, (const byte*)"\xcd\xd1\x08" "LV_ALIGN")
QDEF(MP_QSTR_LV_ANIM, (const byte*)"\x2b\x25\x07" "LV_ANIM")
QDEF(MP_QSTR_LV_ARC_STYLE, (const byte*)"\xd8\x93\x0c" "LV_ARC_STYLE")
QDEF(MP_QSTR_LV_BAR_STYLE, (const byte*)"\x79\xb1\x0c" "LV_BAR_STYLE")
QDEF(MP_QSTR_LV_BIDI_DIR, (const byte*)"\x66\x4d\x0b" "LV_BIDI_DIR")
QDEF(MP_QSTR_LV_BORDER, (const byte*)"\xcc\xab\x09" "LV_BORDER")
QDEF(MP_QSTR_LV_BTNM_CTRL, (const byte*)"\x23\x07\x0c" "LV_BTNM_CTRL")
QDEF(MP_QSTR_LV_BTNM_STYLE, (const byte*)"\x1d\x53\x0d" "LV_BTNM_STYLE")
QDEF(MP_QSTR_LV_BTN_STATE, (const byte*)"\x50\x33\x0c" "LV_BTN_STATE")
QDEF(MP_QSTR_LV_BTN_STYLE, (const byte*)"\x50\x96\x0c" "LV_BTN_STYLE")
QDEF(MP_QSTR_LV_CALENDAR_STYLE, (const byte*)"\x1a\x11\x11" "LV_CALENDAR_STYLE")
QDEF(MP_QSTR_LV_CANVAS_STYLE, (const byte*)"\x40\x34\x0f" "LV_CANVAS_STYLE")
QDEF(MP_QSTR_LV_CB_STYLE, (const byte*)"\x69\x09\x0b" "LV_CB_STYLE")
QDEF(MP_QSTR_LV_CHART_AXIS, (const byte*)"\xb0\x8c\x0d" "LV_CHART_AXIS")
QDEF(MP_QSTR_LV_CHART_STYLE, (const byte*)"\x44\x02\x0e" "LV_CHART_STYLE")
QDEF(MP_QSTR_LV_CHART_TYPE, (const byte*)"\x2b\x07\x0d" "LV_CHART_TYPE")
QDEF(MP_QSTR_LV_CHART_UPDATE_MODE, (const byte*)"\xbe\xf2\x14" "LV_CHART_UPDATE_MODE")
QDEF(MP_QSTR_LV_CONT_STYLE, (const byte*)"\x3e\x7c\x0d" "LV_CONT_STYLE")
QDEF(MP_QSTR_LV_CPICKER_COLOR_MODE, (const byte*)"\x5b\xf4\x15" "LV_CPICKER_COLOR_MODE")
QDEF(MP_QSTR_LV_CPICKER_STYLE, (const byte*)"\x0d\xa1\x10" "LV_CPICKER_STYLE")
QDEF(MP_QSTR_LV_CPICKER_TYPE, (const byte*)"\x02\x59\x0f" "LV_CPICKER_TYPE")
QDEF(MP_QSTR_LV_CURSOR, (const byte*)"\xea\x9c\x09" "LV_CURSOR")
QDEF(MP_QSTR_LV_DDLIST_STYLE, (const byte*)"\x6a\xf8\x0f" "LV_DDLIST_STYLE")
QDEF(MP_QSTR_LV_DESIGN, (const byte*)"\xb2\xe1\x09" "LV_DESIGN")
QDEF(MP_QSTR_LV_DRAG_DIR, (const byte*)"\x10\xd7\x0b" "LV_DRAG_DIR")
QDEF(MP_QSTR_LV_EVENT, (const byte*)"\x6c\x5f\x08" "LV_EVENT")
QDEF(MP_QSTR_LV_FIT, (const byte*)"\xdb\x25\x06" "LV_FIT")
QDEF(MP_QSTR_LV_FONT_FMT_TXT, (const byte*)"\x94\xc1\x0f" "LV_FONT_FMT_TXT")
QDEF(MP_QSTR_LV_FONT_FMT_TXT_CMAP, (const byte*)"\xd4\x6f\x14" "LV_FONT_FMT_TXT_CMAP")
QDEF(MP_QSTR_LV_FONT_SUBPX, (const byte*)"\xa0\xa1\x0d" "LV_FONT_SUBPX")
QDEF(MP_QSTR_LV_FS_MODE, (const byte*)"\x29\x5a\x0a" "LV_FS_MODE")
QDEF(MP_QSTR_LV_FS_RES, (const byte*)"\xae\x15\x09" "LV_FS_RES")
QDEF(MP_QSTR_LV_GAUGE_STYLE, (const byte*)"\x59\xf8\x0e" "LV_GAUGE_STYLE")
QDEF(MP_QSTR_LV_GROUP_REFOCUS_POLICY, (const byte*)"\x04\xd6\x17" "LV_GROUP_REFOCUS_POLICY")
QDEF(MP_QSTR_LV_IMGBTN_STYLE, (const byte*)"\xd3\xcd\x0f" "LV_IMGBTN_STYLE")
QDEF(MP_QSTR_LV_IMG_CF, (const byte*)"\xd9\x90\x09" "LV_IMG_CF")
QDEF(MP_QSTR_LV_IMG_SRC, (const byte*)"\x3e\x6a\x0a" "LV_IMG_SRC")
QDEF(MP_QSTR_LV_IMG_STYLE, (const byte*)"\xeb\x94\x0c" "LV_IMG_STYLE")
QDEF(MP_QSTR_LV_INDEV_STATE, (const byte*)"\xf8\x46\x0e" "LV_INDEV_STATE")
QDEF(MP_QSTR_LV_INDEV_TYPE, (const byte*)"\x57\x54\x0d" "LV_INDEV_TYPE")
QDEF(MP_QSTR_LV_KB_MODE, (const byte*)"\x55\xc4\x0a" "LV_KB_MODE")
QDEF(MP_QSTR_LV_KB_STYLE, (const byte*)"\x61\x68\x0b" "LV_KB_STYLE")
QDEF(MP_QSTR_LV_KEY, (const byte*)"\xd7\x4a\x06" "LV_KEY")
QDEF(MP_QSTR_LV_LABEL_ALIGN, (const byte*)"\xb4\x12\x0e" "LV_LABEL_ALIGN")
QDEF(MP_QSTR_LV_LABEL_LONG, (const byte*)"\xf3\x0a\x0d" "LV_LABEL_LONG")
QDEF(MP_QSTR_LV_LABEL_STYLE, (const byte*)"\x8e\x9e\x0e" "LV_LABEL_STYLE")
QDEF(MP_QSTR_LV_LAYOUT, (const byte*)"\xba\xd1\x09" "LV_LAYOUT")
QDEF(MP_QSTR_LV_LED_STYLE, (const byte*)"\xe5\xb5\x0c" "LV_LED_STYLE")
QDEF(MP_QSTR_LV_LINE_STYLE, (const byte*)"\x86\xbd\x0d" "LV_LINE_STYLE")
QDEF(MP_QSTR_LV_LIST_STYLE, (const byte*)"\xea\x07\x0d" "LV_LIST_STYLE")
QDEF(MP_QSTR_LV_LMETER_STYLE, (const byte*)"\xcf\x6d\x0f" "LV_LMETER_STYLE")
QDEF(MP_QSTR_LV_MBOX_STYLE, (const byte*)"\x10\x66\x0d" "LV_MBOX_STYLE")
QDEF(MP_QSTR_LV_OPA, (const byte*)"\x7e\x5d\x06" "LV_OPA")
QDEF(MP_QSTR_LV_PAGE_EDGE, (const byte*)"\xef\xd6\x0c" "LV_PAGE_EDGE")
QDEF(MP_QSTR_LV_PAGE_STYLE, (const byte*)"\xfb\x02\x0d" "LV_PAGE_STYLE")
QDEF(MP_QSTR_LV_PRELOAD_DIR, (const byte*)"\x41\x4a\x0e" "LV_PRELOAD_DIR")
QDEF(MP_QSTR_LV_PRELOAD_STYLE, (const byte*)"\xe9\xe6\x10" "LV_PRELOAD_STYLE")
QDEF(MP_QSTR_LV_PRELOAD_TYPE, (const byte*)"\xe6\x10\x0f" "LV_PRELOAD_TYPE")
QDEF(MP_QSTR_LV_PROTECT, (const byte*)"\x0b\x3e\x0a" "LV_PROTECT")
QDEF(MP_QSTR_LV_RES, (const byte*)"\x44\x58\x06" "LV_RES")
QDEF(MP_QSTR_LV_ROLLER_MODE, (const byte*)"\xf6\xc9\x0e" "LV_ROLLER_MODE")
QDEF(MP_QSTR_LV_ROLLER_STYLE, (const byte*)"\xa2\x82\x0f" "LV_ROLLER_STYLE")
QDEF(MP_QSTR_LV_SB_MODE, (const byte*)"\x4d\xa0\x0a" "LV_SB_MODE")
QDEF(MP_QSTR_LV_SHADOW, (const byte*)"\x46\x5b\x09" "LV_SHADOW")
QDEF(MP_QSTR_LV_SIGNAL, (const byte*)"\xde\x19\x09" "LV_SIGNAL")
QDEF(MP_QSTR_LV_SLIDER_STYLE, (const byte*)"\xad\x84\x0f" "LV_SLIDER_STYLE")
QDEF(MP_QSTR_LV_SPINBOX_STYLE, (const byte*)"\x39\xec\x10" "LV_SPINBOX_STYLE")
QDEF(MP_QSTR_LV_SW_STYLE, (const byte*)"\x6c\x97\x0b" "LV_SW_STYLE")
QDEF(MP_QSTR_LV_SYMBOL, (const byte*)"\xc6\x8a\x09" "LV_SYMBOL")
QDEF(MP_QSTR_LV_TABLE_STYLE, (const byte*)"\x36\x5c\x0e" "LV_TABLE_STYLE")
QDEF(MP_QSTR_LV_TABVIEW_BTNS_POS, (const byte*)"\x3d\xb4\x13" "LV_TABVIEW_BTNS_POS")
QDEF(MP_QSTR_LV_TABVIEW_STYLE, (const byte*)"\x12\x3d\x10" "LV_TABVIEW_STYLE")
QDEF(MP_QSTR_LV_TASK_PRIO, (const byte*)"\xd6\x62\x0c" "LV_TASK_PRIO")
QDEF(MP_QSTR_LV_TA_STYLE, (const byte*)"\x1d\x78\x0b" "LV_TA_STYLE")
QDEF(MP_QSTR_LV_TILEVIEW_STYLE, (const byte*)"\x31\x0a\x11" "LV_TILEVIEW_STYLE")
QDEF(MP_QSTR_LV_TXT_CMD_STATE, (const byte*)"\xc5\xfd\x10" "LV_TXT_CMD_STATE")
QDEF(MP_QSTR_LV_TXT_FLAG, (const byte*)"\x8b\x1a\x0b" "LV_TXT_FLAG")
QDEF(MP_QSTR_LV_WIN_STYLE, (const byte*)"\xf8\xf7\x0c" "LV_WIN_STYLE")
QDEF(MP_QSTR_LodePNGColorMode, (const byte*)"\x80\xa8\x10" "LodePNGColorMode")
QDEF(MP_QSTR_LodePNGDecoderSettings, (const byte*)"\xe5\xd3\x16" "LodePNGDecoderSettings")
QDEF(MP_QSTR_LodePNGDecompressSettings, (const byte*)"\x5c\xfe\x19" "LodePNGDecompressSettings")
QDEF(MP_QSTR_LodePNGDecompressSettings_custom_inflate, (const byte*)"\x32\x93\x28" "LodePNGDecompressSettings_custom_inflate")
QDEF(MP_QSTR_LodePNGDecompressSettings_custom_zlib, (const byte*)"\x92\x80\x25" "LodePNGDecompressSettings_custom_zlib")
QDEF(MP_QSTR_LodePNGInfo, (const byte*)"\x50\xa4\x0b" "LodePNGInfo")
QDEF(MP_QSTR_LodePNGState, (const byte*)"\x89\xaf\x0c" "LodePNGState")
QDEF(MP_QSTR_LodePNGTime, (const byte*)"\x4b\x76\x0b" "LodePNGTime")
QDEF(MP_QSTR_MAIN, (const byte*)"\xce\xb7\x04" "MAIN")
QDEF(MP_QSTR_MASTER, (const byte*)"\x39\x8d\x06" "MASTER")
QDEF(MP_QSTR_MAX, (const byte*)"\x91\xc7\x03" "MAX")
QDEF(MP_QSTR_MAX_OCTET_VALUE, (const byte*)"\x13\x35\x0f" "MAX_OCTET_VALUE")
QDEF(MP_QSTR_MID, (const byte*)"\x85\xc6\x03" "MID")
QDEF(MP_QSTR_MIN, (const byte*)"\x8f\xc6\x03" "MIN")
QDEF(MP_QSTR_MINUS, (const byte*)"\x29\x9f\x05" "MINUS")
QDEF(MP_QSTR_MODE, (const byte*)"\x66\xc0\x04" "MODE")
QDEF(MP_QSTR_MONO_HLSB, (const byte*)"\x4c\x98\x09" "MONO_HLSB")
QDEF(MP_QSTR_MONO_HMSB, (const byte*)"\xcd\x83\x09" "MONO_HMSB")
QDEF(MP_QSTR_MONO_VLSB, (const byte*)"\x12\xfc\x09" "MONO_VLSB")
QDEF(MP_QSTR_MSB, (const byte*)"\x59\xca\x03" "MSB")
QDEF(MP_QSTR_MSC, (const byte*)"\x58\xca\x03" "MSC")
QDEF(MP_QSTR_MUTE, (const byte*)"\x6c\x0b\x04" "MUTE")
QDEF(MP_QSTR_MVLSB, (const byte*)"\x03\x14\x05" "MVLSB")
QDEF(MP_QSTR_NATIVE, (const byte*)"\x04\x8e\x06" "NATIVE")
QDEF(MP_QSTR_NEUTRAL, (const byte*)"\xf0\x40\x07" "NEUTRAL")
QDEF(MP_QSTR_NEXT, (const byte*)"\x02\x67\x04" "NEXT")
QDEF(MP_QSTR_NONE, (const byte*)"\x4f\x4d\x04" "NONE")
QDEF(MP_QSTR_NORM, (const byte*)"\xdb\x4e\x04" "NORM")
QDEF(MP_QSTR_NORMAL, (const byte*)"\xf6\x79\x06" "NORMAL")
QDEF(MP_QSTR_NOT_EX, (const byte*)"\x32\xe4\x06" "NOT_EX")
QDEF(MP_QSTR_NOT_IMP, (const byte*)"\x5b\x59\x07" "NOT_IMP")
QDEF(MP_QSTR_NO_REPEAT, (const byte*)"\xec\x6b\x09" "NO_REPEAT")
QDEF(MP_QSTR_NUM, (const byte*)"\x93\xd6\x03" "NUM")
QDEF(MP_QSTR_None, (const byte*)"\x6f\xd1\x04" "None")
QDEF(MP_QSTR_NotImplemented, (const byte*)"\x3e\xc6\x0e" "NotImplemented")
QDEF(MP_QSTR_OC_ACTIVE, (const byte*)"\xfa\x02\x09" "OC_ACTIVE")
QDEF(MP_QSTR_OC_FORCED_ACTIVE, (const byte*)"\xfc\x6f\x10" "OC_FORCED_ACTIVE")
QDEF(MP_QSTR_OC_FORCED_INACTIVE, (const byte*)"\x1b\x51\x12" "OC_FORCED_INACTIVE")
QDEF(MP_QSTR_OC_INACTIVE, (const byte*)"\x1d\x9c\x0b" "OC_INACTIVE")
QDEF(MP_QSTR_OC_TIMING, (const byte*)"\xe6\x28\x09" "OC_TIMING")
QDEF(MP_QSTR_OC_TOGGLE, (const byte*)"\x64\x08\x09" "OC_TOGGLE")
QDEF(MP_QSTR_OFF, (const byte*)"\xaa\xe0\x03" "OFF")
QDEF(MP_QSTR_OK, (const byte*)"\x61\x73\x02" "OK")
QDEF(MP_QSTR_ON, (const byte*)"\x64\x73\x02" "ON")
QDEF(MP_QSTR_ONE_SHOT, (const byte*)"\x5e\xff\x08" "ONE_SHOT")
QDEF(MP_QSTR_OPA, (const byte*)"\xfb\xe2\x03" "OPA")
QDEF(MP_QSTR_OPEN_DRAIN, (const byte*)"\x5e\x48\x0a" "OPEN_DRAIN")
QDEF(MP_QSTR_OUT, (const byte*)"\x0b\xe3\x03" "OUT")
QDEF(MP_QSTR_OUTLINE, (const byte*)"\x05\x5b\x07" "OUTLINE")
QDEF(MP_QSTR_OUT_BOTTOM_LEFT, (const byte*)"\x3f\xd7\x0f" "OUT_BOTTOM_LEFT")
QDEF(MP_QSTR_OUT_BOTTOM_MID, (const byte*)"\x04\x29\x0e" "OUT_BOTTOM_MID")
QDEF(MP_QSTR_OUT_BOTTOM_RIGHT, (const byte*)"\x84\x6f\x10" "OUT_BOTTOM_RIGHT")
QDEF(MP_QSTR_OUT_LEFT_BOTTOM, (const byte*)"\xbf\x18\x0f" "OUT_LEFT_BOTTOM")
QDEF(MP_QSTR_OUT_LEFT_MID, (const byte*)"\x30\xd6\x0c" "OUT_LEFT_MID")
QDEF(MP_QSTR_OUT_LEFT_TOP, (const byte*)"\x7b\x6e\x0c" "OUT_LEFT_TOP")
QDEF(MP_QSTR_OUT_OD, (const byte*)"\x1f\x2a\x06" "OUT_OD")
QDEF(MP_QSTR_OUT_OF_MEM, (const byte*)"\x07\x79\x0a" "OUT_OF_MEM")
QDEF(MP_QSTR_OUT_PP, (const byte*)"\x34\x27\x06" "OUT_PP")
QDEF(MP_QSTR_OUT_RIGHT_BOTTOM, (const byte*)"\xa4\x4d\x10" "OUT_RIGHT_BOTTOM")
QDEF(MP_QSTR_OUT_RIGHT_MID, (const byte*)"\x8b\x05\x0d" "OUT_RIGHT_MID")
QDEF(MP_QSTR_OUT_RIGHT_TOP, (const byte*)"\xc0\x5c\x0d" "OUT_RIGHT_TOP")
QDEF(MP_QSTR_OUT_TOP_LEFT, (const byte*)"\xfb\x91\x0c" "OUT_TOP_LEFT")
QDEF(MP_QSTR_OUT_TOP_MID, (const byte*)"\xc0\x8a\x0b" "OUT_TOP_MID")
QDEF(MP_QSTR_OUT_TOP_RIGHT, (const byte*)"\x40\xa0\x0d" "OUT_TOP_RIGHT")
QDEF(MP_QSTR_OrderedDict, (const byte*)"\xf0\x7e\x0b" "OrderedDict")
QDEF(MP_QSTR_PALETTE, (const byte*)"\x78\x46\x07" "PALETTE")
QDEF(MP_QSTR_PAR, (const byte*)"\x06\x0f\x03" "PAR")
QDEF(MP_QSTR_PARENT, (const byte*)"\x19\xd5\x06" "PARENT")
QDEF(MP_QSTR_PARENT_SIZE_CHG, (const byte*)"\x30\xaa\x0f" "PARENT_SIZE_CHG")
QDEF(MP_QSTR_PAUSE, (const byte*)"\xf7\xdd\x05" "PAUSE")
QDEF(MP_QSTR_PERIODIC, (const byte*)"\x0a\x35\x08" "PERIODIC")
QDEF(MP_QSTR_PLACEHOLDER, (const byte*)"\xe6\x1e\x0b" "PLACEHOLDER")
QDEF(MP_QSTR_PLAIN, (const byte*)"\x5f\xe5\x05" "PLAIN")
QDEF(MP_QSTR_PLAY, (const byte*)"\xe1\x06\x04" "PLAY")
QDEF(MP_QSTR_PLUS, (const byte*)"\x7f\x05\x04" "PLUS")
QDEF(MP_QSTR_POINT, (const byte*)"\xc9\x7a\x05" "POINT")
QDEF(MP_QSTR_POINTER, (const byte*)"\x7e\x49\x07" "POINTER")
QDEF(MP_QSTR_POLLERR, (const byte*)"\xdf\xc0\x07" "POLLERR")
QDEF(MP_QSTR_POLLHUP, (const byte*)"\x77\x8a\x07" "POLLHUP")
QDEF(MP_QSTR_POLLIN, (const byte*)"\x7d\x61\x06" "POLLIN")
QDEF(MP_QSTR_POLLOUT, (const byte*)"\x74\x85\x07" "POLLOUT")
QDEF(MP_QSTR_POS, (const byte*)"\x49\x10\x03" "POS")
QDEF(MP_QSTR_POWER, (const byte*)"\xfa\x4e\x05" "POWER")
QDEF(MP_QSTR_PR, (const byte*)"\xc7\x74\x02" "PR")
QDEF(MP_QSTR_PRESSED, (const byte*)"\x63\x5a\x07" "PRESSED")
QDEF(MP_QSTR_PRESSING, (const byte*)"\xc2\xb7\x08" "PRESSING")
QDEF(MP_QSTR_PRESS_LOST, (const byte*)"\xf9\x07\x0a" "PRESS_LOST")
QDEF(MP_QSTR_PRETTY, (const byte*)"\xfb\x45\x06" "PRETTY")
QDEF(MP_QSTR_PREV, (const byte*)"\x74\xca\x04" "PREV")
QDEF(MP_QSTR_PROTECT, (const byte*)"\x4e\xad\x07" "PROTECT")
QDEF(MP_QSTR_PTR, (const byte*)"\xb3\x0c\x03" "PTR")
QDEF(MP_QSTR_PULL_DOWN, (const byte*)"\xad\xfb\x09" "PULL_DOWN")
QDEF(MP_QSTR_PULL_NONE, (const byte*)"\x55\xb5\x09" "PULL_NONE")
QDEF(MP_QSTR_PULL_UP, (const byte*)"\xba\x5e\x07" "PULL_UP")
QDEF(MP_QSTR_PWM, (const byte*)"\x4f\x0d\x03" "PWM")
QDEF(MP_QSTR_PWM_INVERTED, (const byte*)"\xe3\xff\x0c" "PWM_INVERTED")
QDEF(MP_QSTR_PWRON_RESET, (const byte*)"\xdb\xcb\x0b" "PWRON_RESET")
QDEF(MP_QSTR_Pin, (const byte*)"\x12\x14\x03" "Pin")
QDEF(MP_QSTR_PinAF, (const byte*)"\x35\x58\x05" "PinAF")
QDEF(MP_QSTR_PinBase, (const byte*)"\x47\x43\x07" "PinBase")
QDEF(MP_QSTR_RADIUS, (const byte*)"\xbd\x91\x06" "RADIUS")
QDEF(MP_QSTR_RAW, (const byte*)"\x01\x07\x03" "RAW")
QDEF(MP_QSTR_RAW_ALPHA, (const byte*)"\x6a\x87\x09" "RAW_ALPHA")
QDEF(MP_QSTR_RAW_CHROMA_KEYED, (const byte*)"\x0d\x83\x10" "RAW_CHROMA_KEYED")
QDEF(MP_QSTR_RD, (const byte*)"\x93\x74\x02" "RD")
QDEF(MP_QSTR_RECOLOR, (const byte*)"\x4f\x07\x07" "RECOLOR")
QDEF(MP_QSTR_RECT, (const byte*)"\xe5\xd8\x04" "RECT")
QDEF(MP_QSTR_REFRESH, (const byte*)"\xb8\xa8\x07" "REFRESH")
QDEF(MP_QSTR_REFR_EXT_DRAW_PAD, (const byte*)"\xc5\x98\x11" "REFR_EXT_DRAW_PAD")
QDEF(MP_QSTR_REL, (const byte*)"\x9e\x06\x03" "REL")
QDEF(MP_QSTR_RELEASED, (const byte*)"\xc8\x6a\x08" "RELEASED")
QDEF(MP_QSTR_RES, (const byte*)"\x81\x06\x03" "RES")
QDEF(MP_QSTR_RESERVED_15, (const byte*)"\x1a\x04\x0b" "RESERVED_15")
QDEF(MP_QSTR_RESERVED_16, (const byte*)"\x19\x04\x0b" "RESERVED_16")
QDEF(MP_QSTR_RESERVED_17, (const byte*)"\x18\x04\x0b" "RESERVED_17")
QDEF(MP_QSTR_RESERVED_18, (const byte*)"\x17\x04\x0b" "RESERVED_18")
QDEF(MP_QSTR_RESERVED_19, (const byte*)"\x16\x04\x0b" "RESERVED_19")
QDEF(MP_QSTR_RESERVED_20, (const byte*)"\xfc\x03\x0b" "RESERVED_20")
QDEF(MP_QSTR_RESERVED_21, (const byte*)"\xfd\x03\x0b" "RESERVED_21")
QDEF(MP_QSTR_RESERVED_22, (const byte*)"\xfe\x03\x0b" "RESERVED_22")
QDEF(MP_QSTR_RESERVED_23, (const byte*)"\xff\x03\x0b" "RESERVED_23")
QDEF(MP_QSTR_RGB, (const byte*)"\xd2\x06\x03" "RGB")
QDEF(MP_QSTR_RGB565, (const byte*)"\x64\xcc\x06" "RGB565")
QDEF(MP_QSTR_RGBA, (const byte*)"\x53\xe1\x04" "RGBA")
QDEF(MP_QSTR_RIGHT, (const byte*)"\xc5\x79\x05" "RIGHT")
QDEF(MP_QSTR_RISING, (const byte*)"\x2d\x0b\x06" "RISING")
QDEF(MP_QSTR_ROW_B, (const byte*)"\xb2\x3f\x05" "ROW_B")
QDEF(MP_QSTR_ROW_M, (const byte*)"\xbd\x3f\x05" "ROW_M")
QDEF(MP_QSTR_ROW_T, (const byte*)"\xa4\x3f\x05" "ROW_T")
QDEF(MP_QSTR_RTL, (const byte*)"\xaf\x04\x03" "RTL")
QDEF(MP_QSTR_RTS, (const byte*)"\xb0\x04\x03" "RTS")
QDEF(MP_QSTR_SATURATION, (const byte*)"\x99\xeb\x0a" "SATURATION")
QDEF(MP_QSTR_SAVE, (const byte*)"\xe4\x83\x04" "SAVE")
QDEF(MP_QSTR_SB, (const byte*)"\xf4\x74\x02" "SB")
QDEF(MP_QSTR_SB_MODE, (const byte*)"\x08\x20\x07" "SB_MODE")
QDEF(MP_QSTR_SCRL, (const byte*)"\xeb\x8c\x04" "SCRL")
QDEF(MP_QSTR_SEL, (const byte*)"\x1f\x13\x03" "SEL")
QDEF(MP_QSTR_SETTINGS, (const byte*)"\x20\xf2\x08" "SETTINGS")
QDEF(MP_QSTR_SHADOW, (const byte*)"\x63\x3e\x06" "SHADOW")
QDEF(MP_QSTR_SHIFT, (const byte*)"\xe5\x25\x05" "SHIFT")
QDEF(MP_QSTR_SHORT, (const byte*)"\xf7\x1b\x05" "SHORT")
QDEF(MP_QSTR_SHORT_CLICKED, (const byte*)"\x87\xbe\x0d" "SHORT_CLICKED")
QDEF(MP_QSTR_SHUFFLE, (const byte*)"\xa2\x91\x07" "SHUFFLE")
QDEF(MP_QSTR_SIGNAL, (const byte*)"\xfb\xfd\x06" "SIGNAL")
QDEF(MP_QSTR_SIZE, (const byte*)"\x60\xa5\x04" "SIZE")
QDEF(MP_QSTR_SKIP_LAST_TICK, (const byte*)"\xbb\x59\x0e" "SKIP_LAST_TICK")
QDEF(MP_QSTR_SLAVE, (const byte*)"\x68\x15\x05" "SLAVE")
QDEF(MP_QSTR_SOCK_DGRAM, (const byte*)"\xb3\x14\x0a" "SOCK_DGRAM")
QDEF(MP_QSTR_SOCK_RAW, (const byte*)"\xca\x96\x08" "SOCK_RAW")
QDEF(MP_QSTR_SOCK_STREAM, (const byte*)"\x32\xbe\x0b" "SOCK_STREAM")
QDEF(MP_QSTR_SOFT_RESET, (const byte*)"\x01\xc6\x0a" "SOFT_RESET")
QDEF(MP_QSTR_SPARSE_FULL, (const byte*)"\x0f\xf0\x0b" "SPARSE_FULL")
QDEF(MP_QSTR_SPARSE_TINY, (const byte*)"\x16\x05\x0b" "SPARSE_TINY")
QDEF(MP_QSTR_SPI, (const byte*)"\xef\x11\x03" "SPI")
QDEF(MP_QSTR_SPINNING_ARC, (const byte*)"\x20\x4d\x0c" "SPINNING_ARC")
QDEF(MP_QSTR_SRC, (const byte*)"\x27\x11\x03" "SRC")
QDEF(MP_QSTR_SROLL, (const byte*)"\xeb\x0f\x05" "SROLL")
QDEF(MP_QSTR_SROLL_CIRC, (const byte*)"\x2f\x68\x0a" "SROLL_CIRC")
QDEF(MP_QSTR_START, (const byte*)"\xe5\xef\x05" "START")
QDEF(MP_QSTR_STATE, (const byte*)"\x32\xf0\x05" "STATE")
QDEF(MP_QSTR_STOP, (const byte*)"\x5d\x3f\x04" "STOP")
QDEF(MP_QSTR_STYLE, (const byte*)"\x32\x53\x05" "STYLE")
QDEF(MP_QSTR_STYLE_CHG, (const byte*)"\x81\xb0\x09" "STYLE_CHG")
QDEF(MP_QSTR_SYMBOL, (const byte*)"\xe3\x0c\x06" "SYMBOL")
QDEF(MP_QSTR_Signal, (const byte*)"\x9b\xe4\x06" "Signal")
QDEF(MP_QSTR_SoftSPI, (const byte*)"\x21\x58\x07" "SoftSPI")
QDEF(MP_QSTR_StopAsyncIteration, (const byte*)"\xec\xf0\x12" "StopAsyncIteration")
QDEF(MP_QSTR_StringIO, (const byte*)"\x76\x76\x08" "StringIO")
QDEF(MP_QSTR_Switch, (const byte*)"\x97\x00\x06" "Switch")
QDEF(MP_QSTR_TASK_PRIO, (const byte*)"\xd3\xac\x09" "TASK_PRIO")
QDEF(MP_QSTR_TA_CURSOR, (const byte*)"\x45\x74\x09" "TA_CURSOR")
QDEF(MP_QSTR_TEXT, (const byte*)"\x58\xd0\x04" "TEXT")
QDEF(MP_QSTR_TEXT_UPPER, (const byte*)"\xc5\x12\x0a" "TEXT_UPPER")
QDEF(MP_QSTR_TGL_ENABLE, (const byte*)"\x44\x41\x0a" "TGL_ENABLE")
QDEF(MP_QSTR_TGL_PR, (const byte*)"\x87\xa9\x06" "TGL_PR")
QDEF(MP_QSTR_TGL_REL, (const byte*)"\xde\xf4\x07" "TGL_REL")
QDEF(MP_QSTR_TGL_STATE, (const byte*)"\x72\xdd\x09" "TGL_STATE")
QDEF(MP_QSTR_TIGHT, (const byte*)"\xc3\x39\x05" "TIGHT")
QDEF(MP_QSTR_TODAY_BOX, (const byte*)"\xa8\x6d\x09" "TODAY_BOX")
QDEF(MP_QSTR_TOP, (const byte*)"\x4e\x00\x03" "TOP")
QDEF(MP_QSTR_TOUT, (const byte*)"\xff\x09\x04" "TOUT")
QDEF(MP_QSTR_TRACE, (const byte*)"\xc4\xc5\x05" "TRACE")
QDEF(MP_QSTR_TRANSP, (const byte*)"\xcf\x9e\x06" "TRANSP")
QDEF(MP_QSTR_TRASH, (const byte*)"\xd9\xc7\x05" "TRASH")
QDEF(MP_QSTR_TRUE_COLOR, (const byte*)"\x91\xb3\x0a" "TRUE_COLOR")
QDEF(MP_QSTR_TRUE_COLOR_ALPHA, (const byte*)"\xfa\xd3\x10" "TRUE_COLOR_ALPHA")
QDEF(MP_QSTR_TRUE_COLOR_CHROMA_KEYED, (const byte*)"\x9d\x81\x17" "TRUE_COLOR_CHROMA_KEYED")
QDEF(MP_QSTR_TXT_CMD_STATE, (const byte*)"\xc0\x9f\x0d" "TXT_CMD_STATE")
QDEF(MP_QSTR_TXT_FLAG, (const byte*)"\x6e\x2f\x08" "TXT_FLAG")
QDEF(MP_QSTR_TYPE, (const byte*)"\x5d\xa0\x04" "TYPE")
QDEF(MP_QSTR_TextIOWrapper, (const byte*)"\xad\x8d\x0d" "TextIOWrapper")
QDEF(MP_QSTR_Timer, (const byte*)"\xa2\x1f\x05" "Timer")
QDEF(MP_QSTR_TimerChannel, (const byte*)"\x41\x99\x0c" "TimerChannel")
QDEF(MP_QSTR_UART, (const byte*)"\xb7\x19\x04" "UART")
QDEF(MP_QSTR_UINT, (const byte*)"\x23\x3d\x04" "UINT")
QDEF(MP_QSTR_UINT16, (const byte*)"\xc4\x17\x06" "UINT16")
QDEF(MP_QSTR_UINT32, (const byte*)"\x82\x17\x06" "UINT32")
QDEF(MP_QSTR_UINT64, (const byte*)"\x61\x18\x06" "UINT64")
QDEF(MP_QSTR_UINT8, (const byte*)"\xbb\xe1\x05" "UINT8")
QDEF(MP_QSTR_ULONG, (const byte*)"\x7a\x8d\x05" "ULONG")
QDEF(MP_QSTR_ULONGLONG, (const byte*)"\x70\xc6\x09" "ULONGLONG")
QDEF(MP_QSTR_UNDERLINE, (const byte*)"\xc3\x61\x09" "UNDERLINE")
QDEF(MP_QSTR_UNHIDE, (const byte*)"\x7e\xc5\x06" "UNHIDE")
QDEF(MP_QSTR_UNKNOWN, (const byte*)"\x8d\x87\x07" "UNKNOWN")
QDEF(MP_QSTR_UP, (const byte*)"\xa0\x73\x02" "UP")
QDEF(MP_QSTR_UPDATE_MODE, (const byte*)"\x08\xe6\x0b" "UPDATE_MODE")
QDEF(MP_QSTR_UPLOAD, (const byte*)"\x46\xc2\x06" "UPLOAD")
QDEF(MP_QSTR_USB_HID, (const byte*)"\x5b\xb6\x07" "USB_HID")
QDEF(MP_QSTR_USB_VCP, (const byte*)"\x1b\x8a\x07" "USB_VCP")
QDEF(MP_QSTR_USER_ENCODED_0, (const byte*)"\x26\x17\x0e" "USER_ENCODED_0")
QDEF(MP_QSTR_USER_ENCODED_1, (const byte*)"\x27\x17\x0e" "USER_ENCODED_1")
QDEF(MP_QSTR_USER_ENCODED_2, (const byte*)"\x24\x17\x0e" "USER_ENCODED_2")
QDEF(MP_QSTR_USER_ENCODED_3, (const byte*)"\x25\x17\x0e" "USER_ENCODED_3")
QDEF(MP_QSTR_USER_ENCODED_4, (const byte*)"\x22\x17\x0e" "USER_ENCODED_4")
QDEF(MP_QSTR_USER_ENCODED_5, (const byte*)"\x23\x17\x0e" "USER_ENCODED_5")
QDEF(MP_QSTR_USER_ENCODED_6, (const byte*)"\x20\x17\x0e" "USER_ENCODED_6")
QDEF(MP_QSTR_USER_ENCODED_7, (const byte*)"\x21\x17\x0e" "USER_ENCODED_7")
QDEF(MP_QSTR_USHORT, (const byte*)"\xa2\xf4\x06" "USHORT")
QDEF(MP_QSTR_UnicodeError, (const byte*)"\x22\xd1\x0c" "UnicodeError")
QDEF(MP_QSTR_VALUE, (const byte*)"\xae\xea\x05" "VALUE")
QDEF(MP_QSTR_VALUE_CHANGED, (const byte*)"\x33\x99\x0d" "VALUE_CHANGED")
QDEF(MP_QSTR_VARIABLE, (const byte*)"\xe3\x2e\x08" "VARIABLE")
QDEF(MP_QSTR_VCP, (const byte*)"\x40\xf6\x03" "VCP")
QDEF(MP_QSTR_VER, (const byte*)"\x84\xf6\x03" "VER")
QDEF(MP_QSTR_VERTICAL_LINE, (const byte*)"\xa6\xcc\x0d" "VERTICAL_LINE")
QDEF(MP_QSTR_VIDEO, (const byte*)"\xb4\x2d\x05" "VIDEO")
QDEF(MP_QSTR_VOID, (const byte*)"\x31\xf2\x04" "VOID")
QDEF(MP_QSTR_VOLUME_MAX, (const byte*)"\xa6\x01\x0a" "VOLUME_MAX")
QDEF(MP_QSTR_VOLUME_MID, (const byte*)"\xb2\x00\x0a" "VOLUME_MID")
QDEF(MP_QSTR_VREF, (const byte*)"\xa2\x80\x04" "VREF")
QDEF(MP_QSTR_VfsFat, (const byte*)"\x15\x9b\x06" "VfsFat")
QDEF(MP_QSTR_ViperTypeError, (const byte*)"\xdd\x05\x0e" "ViperTypeError")
QDEF(MP_QSTR_WAIT, (const byte*)"\x8e\x55\x04" "WAIT")
QDEF(MP_QSTR_WARN, (const byte*)"\xef\x52\x04" "WARN")
QDEF(MP_QSTR_WARNING, (const byte*)"\x4f\xe2\x07" "WARNING")
QDEF(MP_QSTR_WDT, (const byte*)"\x62\x03\x03" "WDT")
QDEF(MP_QSTR_WDT_RESET, (const byte*)"\x08\x72\x09" "WDT_RESET")
QDEF(MP_QSTR_WEAK, (const byte*)"\x9d\x65\x04" "WEAK")
QDEF(MP_QSTR_WEEK_BOX, (const byte*)"\x53\xf7\x08" "WEEK_BOX")
QDEF(MP_QSTR_WIFI, (const byte*)"\x74\x77\x04" "WIFI")
QDEF(MP_QSTR_WR, (const byte*)"\x60\x74\x02" "WR")
QDEF(MP_QSTR__0, (const byte*)"\x0a\x75\x02" "_0")
QDEF(MP_QSTR__10, (const byte*)"\x5b\x16\x03" "_10")
QDEF(MP_QSTR__100, (const byte*)"\x8b\xe1\x04" "_100")
QDEF(MP_QSTR__20, (const byte*)"\x38\x16\x03" "_20")
QDEF(MP_QSTR__30, (const byte*)"\x19\x16\x03" "_30")
QDEF(MP_QSTR__40, (const byte*)"\xfe\x16\x03" "_40")
QDEF(MP_QSTR__50, (const byte*)"\xdf\x16\x03" "_50")
QDEF(MP_QSTR__60, (const byte*)"\xbc\x16\x03" "_60")
QDEF(MP_QSTR__70, (const byte*)"\x9d\x16\x03" "_70")
QDEF(MP_QSTR__80, (const byte*)"\x72\x15\x03" "_80")
QDEF(MP_QSTR__90, (const byte*)"\x53\x15\x03" "_90")
QDEF(MP_QSTR__onewire, (const byte*)"\xf7\x79\x08" "_onewire")
QDEF(MP_QSTR_a2b_base64, (const byte*)"\x3c\x0b\x0a" "a2b_base64")
QDEF(MP_QSTR_abs_tol, (const byte*)"\x7d\x6d\x07" "abs_tol")
QDEF(MP_QSTR_accept, (const byte*)"\x85\x89\x06" "accept")
QDEF(MP_QSTR_acos, (const byte*)"\x1b\xa0\x04" "acos")
QDEF(MP_QSTR_acosh, (const byte*)"\x13\xa3\x05" "acosh")
QDEF(MP_QSTR_act_obj, (const byte*)"\xab\x33\x07" "act_obj")
QDEF(MP_QSTR_act_point, (const byte*)"\x40\x1e\x09" "act_point")
QDEF(MP_QSTR_act_scr, (const byte*)"\xce\xaa\x07" "act_scr")
QDEF(MP_QSTR_act_time, (const byte*)"\xb9\x0f\x08" "act_time")
QDEF(MP_QSTR_activate, (const byte*)"\xfc\x47\x08" "activate")
QDEF(MP_QSTR_add, (const byte*)"\x44\x32\x03" "add")
QDEF(MP_QSTR_add_btn, (const byte*)"\x03\x9a\x07" "add_btn")
QDEF(MP_QSTR_add_btns, (const byte*)"\x10\xda\x08" "add_btns")
QDEF(MP_QSTR_add_char, (const byte*)"\xc3\x70\x08" "add_char")
QDEF(MP_QSTR_add_element, (const byte*)"\x65\xf3\x0b" "add_element")
QDEF(MP_QSTR_add_itext, (const byte*)"\x0f\x77\x09" "add_itext")
QDEF(MP_QSTR_add_series, (const byte*)"\x00\xf5\x0a" "add_series")
QDEF(MP_QSTR_add_tab, (const byte*)"\xac\x60\x07" "add_tab")
QDEF(MP_QSTR_add_text, (const byte*)"\x06\x66\x08" "add_text")
QDEF(MP_QSTR_addr, (const byte*)"\xb6\x7a\x04" "addr")
QDEF(MP_QSTR_addr_size, (const byte*)"\x4c\x40\x09" "addr_size")
QDEF(MP_QSTR_addressof, (const byte*)"\x5a\xf9\x09" "addressof")
QDEF(MP_QSTR_addrsize, (const byte*)"\x93\x91\x08" "addrsize")
QDEF(MP_QSTR_adv_w, (const byte*)"\x1e\x26\x05" "adv_w")
QDEF(MP_QSTR_af, (const byte*)"\x22\x6e\x02" "af")
QDEF(MP_QSTR_af_list, (const byte*)"\x5f\x80\x07" "af_list")
QDEF(MP_QSTR_align, (const byte*)"\xa8\xfb\x05" "align")
QDEF(MP_QSTR_align_origo, (const byte*)"\x4b\x01\x0b" "align_origo")
QDEF(MP_QSTR_alloc_emergency_exception_buf, (const byte*)"\x78\x2a\x1d" "alloc_emergency_exception_buf")
QDEF(MP_QSTR_allocate_ext_attr, (const byte*)"\x62\xc3\x11" "allocate_ext_attr")
QDEF(MP_QSTR_alpha, (const byte*)"\x51\x64\x05" "alpha")
QDEF(MP_QSTR_alt, (const byte*)"\x5c\x33\x03" "alt")
QDEF(MP_QSTR_always_zero, (const byte*)"\xe9\xc1\x0b" "always_zero")
QDEF(MP_QSTR_and_, (const byte*)"\x91\x94\x04" "and_")
QDEF(MP_QSTR_anim_clear_playback, (const byte*)"\x38\x71\x13" "anim_clear_playback")
QDEF(MP_QSTR_anim_clear_repeat, (const byte*)"\x80\x24\x11" "anim_clear_repeat")
QDEF(MP_QSTR_anim_core_init, (const byte*)"\x2f\x6c\x0e" "anim_core_init")
QDEF(MP_QSTR_anim_count_running, (const byte*)"\xca\xbe\x12" "anim_count_running")
QDEF(MP_QSTR_anim_create, (const byte*)"\x55\xac\x0b" "anim_create")
QDEF(MP_QSTR_anim_custom_del, (const byte*)"\x10\x9e\x0f" "anim_custom_del")
QDEF(MP_QSTR_anim_del, (const byte*)"\x7c\x83\x08" "anim_del")
QDEF(MP_QSTR_anim_init, (const byte*)"\x8b\x9b\x09" "anim_init")
QDEF(MP_QSTR_anim_path_bounce, (const byte*)"\x53\xe8\x10" "anim_path_bounce")
QDEF(MP_QSTR_anim_path_ease_in, (const byte*)"\x89\x75\x11" "anim_path_ease_in")
QDEF(MP_QSTR_anim_path_ease_in_out, (const byte*)"\x78\xd2\x15" "anim_path_ease_in_out")
QDEF(MP_QSTR_anim_path_ease_out, (const byte*)"\xa0\x1f\x12" "anim_path_ease_out")
QDEF(MP_QSTR_anim_path_linear, (const byte*)"\x3e\x64\x10" "anim_path_linear")
QDEF(MP_QSTR_anim_path_overshoot, (const byte*)"\x22\x27\x13" "anim_path_overshoot")
QDEF(MP_QSTR_anim_path_step, (const byte*)"\x91\x4f\x0e" "anim_path_step")
QDEF(MP_QSTR_anim_set_custom_exec_cb, (const byte*)"\x45\x35\x17" "anim_set_custom_exec_cb")
QDEF(MP_QSTR_anim_set_exec_cb, (const byte*)"\x89\x46\x10" "anim_set_exec_cb")
QDEF(MP_QSTR_anim_set_path_cb, (const byte*)"\x5f\x13\x10" "anim_set_path_cb")
QDEF(MP_QSTR_anim_set_playback, (const byte*)"\xc3\xb4\x11" "anim_set_playback")
QDEF(MP_QSTR_anim_set_ready_cb, (const byte*)"\x59\xa4\x11" "anim_set_ready_cb")
QDEF(MP_QSTR_anim_set_repeat, (const byte*)"\x7b\x0f\x0f" "anim_set_repeat")
QDEF(MP_QSTR_anim_set_time, (const byte*)"\xf9\xc0\x0d" "anim_set_time")
QDEF(MP_QSTR_anim_set_values, (const byte*)"\xf4\xfd\x0f" "anim_set_values")
QDEF(MP_QSTR_anim_speed_to_time, (const byte*)"\x58\xed\x12" "anim_speed_to_time")
QDEF(MP_QSTR_anim_t, (const byte*)"\xc5\x86\x06" "anim_t")
QDEF(MP_QSTR_antialiasing, (const byte*)"\x01\x8a\x0c" "antialiasing")
QDEF(MP_QSTR_arc, (const byte*)"\x95\x34\x03" "arc")
QDEF(MP_QSTR_area, (const byte*)"\x92\xc6\x04" "area")
QDEF(MP_QSTR_area_copy, (const byte*)"\x68\x9f\x09" "area_copy")
QDEF(MP_QSTR_area_get_height, (const byte*)"\x7b\xa3\x0f" "area_get_height")
QDEF(MP_QSTR_area_get_size, (const byte*)"\x21\x41\x0d" "area_get_size")
QDEF(MP_QSTR_area_get_width, (const byte*)"\x42\x91\x0e" "area_get_width")
QDEF(MP_QSTR_area_increment, (const byte*)"\x6c\x68\x0e" "area_increment")
QDEF(MP_QSTR_area_intersect, (const byte*)"\x28\x87\x0e" "area_intersect")
QDEF(MP_QSTR_area_is_in, (const byte*)"\xaf\xd6\x0a" "area_is_in")
QDEF(MP_QSTR_area_is_on, (const byte*)"\xe9\xd7\x0a" "area_is_on")
QDEF(MP_QSTR_area_is_point_on, (const byte*)"\x3a\xe5\x10" "area_is_point_on")
QDEF(MP_QSTR_area_join, (const byte*)"\x2f\xe0\x09" "area_join")
QDEF(MP_QSTR_area_set, (const byte*)"\xaf\xc5\x08" "area_set")
QDEF(MP_QSTR_area_set_height, (const byte*)"\xef\xd0\x0f" "area_set_height")
QDEF(MP_QSTR_area_set_pos, (const byte*)"\xdc\xe3\x0c" "area_set_pos")
QDEF(MP_QSTR_area_set_width, (const byte*)"\x56\x72\x0e" "area_set_width")
QDEF(MP_QSTR_area_t, (const byte*)"\x59\xaa\x06" "area_t")
QDEF(MP_QSTR_arg, (const byte*)"\x91\x34\x03" "arg")
QDEF(MP_QSTR_argv, (const byte*)"\xc7\xc6\x04" "argv")
QDEF(MP_QSTR_array, (const byte*)"\x7c\x72\x05" "array")
QDEF(MP_QSTR_asin, (const byte*)"\x50\xe5\x04" "asin")
QDEF(MP_QSTR_asinh, (const byte*)"\x38\x8f\x05" "asinh")
QDEF(MP_QSTR_asm_thumb, (const byte*)"\x43\x6d\x09" "asm_thumb")
QDEF(MP_QSTR_asr, (const byte*)"\x65\x35\x03" "asr")
QDEF(MP_QSTR_async_call, (const byte*)"\xfe\xed\x0a" "async_call")
QDEF(MP_QSTR_async_xcb, (const byte*)"\xc5\x08\x09" "async_xcb")
QDEF(MP_QSTR_atan, (const byte*)"\x1f\xbe\x04" "atan")
QDEF(MP_QSTR_atan2, (const byte*)"\xcd\x81\x05" "atan2")
QDEF(MP_QSTR_atanh, (const byte*)"\x97\x81\x05" "atanh")
QDEF(MP_QSTR_b, (const byte*)"\xc7\xb5\x01" "b")
QDEF(MP_QSTR_b2a_base64, (const byte*)"\x3c\x8f\x0a" "b2a_base64")
QDEF(MP_QSTR_background_b, (const byte*)"\xb6\x0b\x0c" "background_b")
QDEF(MP_QSTR_background_defined, (const byte*)"\x95\x21\x12" "background_defined")
QDEF(MP_QSTR_background_g, (const byte*)"\xb3\x0b\x0c" "background_g")
QDEF(MP_QSTR_background_r, (const byte*)"\xa6\x0b\x0c" "background_r")
QDEF(MP_QSTR_bar, (const byte*)"\xf4\x47\x03" "bar")
QDEF(MP_QSTR_base_line, (const byte*)"\xe1\x7c\x09" "base_line")
QDEF(MP_QSTR_baudrate, (const byte*)"\xf5\xd8\x08" "baudrate")
QDEF(MP_QSTR_bezier3, (const byte*)"\x55\x57\x07" "bezier3")
QDEF(MP_QSTR_bg, (const byte*)"\xc0\x6e\x02" "bg")
QDEF(MP_QSTR_bidi_detect_base_dir, (const byte*)"\xf1\x46\x14" "bidi_detect_base_dir")
QDEF(MP_QSTR_bidi_get_letter_dir, (const byte*)"\xab\xc2\x13" "bidi_get_letter_dir")
QDEF(MP_QSTR_bidi_get_logical_pos, (const byte*)"\xe5\xa3\x14" "bidi_get_logical_pos")
QDEF(MP_QSTR_bidi_get_next_paragraph, (const byte*)"\x23\x39\x17" "bidi_get_next_paragraph")
QDEF(MP_QSTR_bidi_get_visual_pos, (const byte*)"\x12\x0b\x13" "bidi_get_visual_pos")
QDEF(MP_QSTR_bidi_letter_is_neutral, (const byte*)"\x6d\x62\x16" "bidi_letter_is_neutral")
QDEF(MP_QSTR_bidi_letter_is_rtl, (const byte*)"\x32\xef\x12" "bidi_letter_is_rtl")
QDEF(MP_QSTR_bidi_letter_is_weak, (const byte*)"\xc0\x63\x13" "bidi_letter_is_weak")
QDEF(MP_QSTR_bidi_process, (const byte*)"\x17\xcf\x0c" "bidi_process")
QDEF(MP_QSTR_bidi_process_paragraph, (const byte*)"\x86\x91\x16" "bidi_process_paragraph")
QDEF(MP_QSTR_bin, (const byte*)"\xe0\x48\x03" "bin")
QDEF(MP_QSTR_bind, (const byte*)"\x84\x64\x04" "bind")
QDEF(MP_QSTR_bitdepth, (const byte*)"\x37\xa9\x08" "bitdepth")
QDEF(MP_QSTR_bits, (const byte*)"\x49\x68\x04" "bits")
QDEF(MP_QSTR_bl, (const byte*)"\xcb\x6e\x02" "bl")
QDEF(MP_QSTR_blit, (const byte*)"\xf6\x50\x04" "blit")
QDEF(MP_QSTR_blue, (const byte*)"\x7b\x54\x04" "blue")
QDEF(MP_QSTR_board, (const byte*)"\x7f\xd4\x05" "board")
QDEF(MP_QSTR_body, (const byte*)"\x55\x3d\x04" "body")
QDEF(MP_QSTR_bootloader, (const byte*)"\xe2\xef\x0a" "bootloader")
QDEF(MP_QSTR_border, (const byte*)"\xe9\x59\x06" "border")
QDEF(MP_QSTR_bottom, (const byte*)"\x6a\x2d\x06" "bottom")
QDEF(MP_QSTR_bound_method, (const byte*)"\x97\xa2\x0c" "bound_method")
QDEF(MP_QSTR_box, (const byte*)"\xb0\x47\x03" "box")
QDEF(MP_QSTR_box_h, (const byte*)"\xa7\xfb\x05" "box_h")
QDEF(MP_QSTR_box_w, (const byte*)"\xb8\xfb\x05" "box_w")
QDEF(MP_QSTR_bpp, (const byte*)"\xc7\x49\x03" "bpp")
QDEF(MP_QSTR_brk, (const byte*)"\x1e\x49\x03" "brk")
QDEF(MP_QSTR_btn, (const byte*)"\x5d\x49\x03" "btn")
QDEF(MP_QSTR_btn_id, (const byte*)"\x8f\x19\x06" "btn_id")
QDEF(MP_QSTR_btn_points, (const byte*)"\x5d\x62\x0a" "btn_points")
QDEF(MP_QSTR_btnm, (const byte*)"\x90\x74\x04" "btnm")
QDEF(MP_QSTR_buf1, (const byte*)"\xc5\x77\x04" "buf1")
QDEF(MP_QSTR_buf2, (const byte*)"\xc6\x77\x04" "buf2")
QDEF(MP_QSTR_buf_act, (const byte*)"\x9d\x73\x07" "buf_act")
QDEF(MP_QSTR_buf_alloc, (const byte*)"\x86\x19\x09" "buf_alloc")
QDEF(MP_QSTR_buf_free, (const byte*)"\x1f\xf2\x08" "buf_free")
QDEF(MP_QSTR_buf_get_img_size, (const byte*)"\x7b\xda\x10" "buf_get_img_size")
QDEF(MP_QSTR_buf_get_px_alpha, (const byte*)"\x21\x47\x10" "buf_get_px_alpha")
QDEF(MP_QSTR_buf_get_px_color, (const byte*)"\xa8\xef\x10" "buf_get_px_color")
QDEF(MP_QSTR_buf_set_palette, (const byte*)"\x0b\xb0\x0f" "buf_set_palette")
QDEF(MP_QSTR_buf_set_px_alpha, (const byte*)"\xb5\xda\x10" "buf_set_px_alpha")
QDEF(MP_QSTR_buf_set_px_color, (const byte*)"\x3c\xda\x10" "buf_set_px_color")
QDEF(MP_QSTR_buffer, (const byte*)"\xe5\xa0\x06" "buffer")
QDEF(MP_QSTR_buffering, (const byte*)"\x25\xdb\x09" "buffering")
QDEF(MP_QSTR_bx, (const byte*)"\xdf\x6e\x02" "bx")
QDEF(MP_QSTR_bytearray_at, (const byte*)"\x9c\x5c\x0c" "bytearray_at")
QDEF(MP_QSTR_byteorder, (const byte*)"\x61\x99\x09" "byteorder")
QDEF(MP_QSTR_bytes_at, (const byte*)"\xb6\x5d\x08" "bytes_at")
QDEF(MP_QSTR_cache_invalidate_src, (const byte*)"\x6a\x67\x14" "cache_invalidate_src")
QDEF(MP_QSTR_cache_open, (const byte*)"\xc2\xa2\x0a" "cache_open")
QDEF(MP_QSTR_cache_set_size, (const byte*)"\x2e\xf4\x0e" "cache_set_size")
QDEF(MP_QSTR_calcsize, (const byte*)"\x4d\x38\x08" "calcsize")
QDEF(MP_QSTR_calendar, (const byte*)"\x17\x34\x08" "calendar")
QDEF(MP_QSTR_calendar_date_t, (const byte*)"\xb7\x65\x0f" "calendar_date_t")
QDEF(MP_QSTR_calibration, (const byte*)"\xaf\x33\x0b" "calibration")
QDEF(MP_QSTR_callback, (const byte*)"\x4c\xf0\x08" "callback")
QDEF(MP_QSTR_can_have_alpha, (const byte*)"\x07\x6a\x0e" "can_have_alpha")
QDEF(MP_QSTR_canvas, (const byte*)"\xcd\xf8\x06" "canvas")
QDEF(MP_QSTR_capture, (const byte*)"\x61\xb6\x07" "capture")
QDEF(MP_QSTR_cast, (const byte*)"\x40\xc2\x04" "cast")
QDEF(MP_QSTR_cast_instance, (const byte*)"\x96\x98\x0d" "cast_instance")
QDEF(MP_QSTR_cb, (const byte*)"\xe4\x6e\x02" "cb")
QDEF(MP_QSTR_ceil, (const byte*)"\x06\xb0\x04" "ceil")
QDEF(MP_QSTR_cell, (const byte*)"\x63\xb1\x04" "cell")
QDEF(MP_QSTR_center, (const byte*)"\x4e\xbf\x06" "center")
QDEF(MP_QSTR_cf, (const byte*)"\xe0\x6e\x02" "cf")
QDEF(MP_QSTR_ch, (const byte*)"\xee\x6e\x02" "ch")
QDEF(MP_QSTR_channel, (const byte*)"\x26\x91\x07" "channel")
QDEF(MP_QSTR_char_val, (const byte*)"\xf9\xe7\x08" "char_val")
QDEF(MP_QSTR_chart, (const byte*)"\x09\xc2\x05" "chart")
QDEF(MP_QSTR_chart_series_t, (const byte*)"\x66\x29\x0e" "chart_series_t")
QDEF(MP_QSTR_chdir, (const byte*)"\xb1\xb2\x05" "chdir")
QDEF(MP_QSTR_choice, (const byte*)"\x2e\x33\x06" "choice")
QDEF(MP_QSTR_chrm_blue_x, (const byte*)"\xb7\xa7\x0b" "chrm_blue_x")
QDEF(MP_QSTR_chrm_blue_y, (const byte*)"\xb6\xa7\x0b" "chrm_blue_y")
QDEF(MP_QSTR_chrm_defined, (const byte*)"\x8f\x55\x0c" "chrm_defined")
QDEF(MP_QSTR_chrm_green_x, (const byte*)"\x12\x97\x0c" "chrm_green_x")
QDEF(MP_QSTR_chrm_green_y, (const byte*)"\x13\x97\x0c" "chrm_green_y")
QDEF(MP_QSTR_chrm_red_x, (const byte*)"\x5a\x92\x0a" "chrm_red_x")
QDEF(MP_QSTR_chrm_red_y, (const byte*)"\x5b\x92\x0a" "chrm_red_y")
QDEF(MP_QSTR_chrm_white_x, (const byte*)"\xae\x74\x0c" "chrm_white_x")
QDEF(MP_QSTR_chrm_white_y, (const byte*)"\xaf\x74\x0c" "chrm_white_y")
QDEF(MP_QSTR_chunk_ancillary, (const byte*)"\xee\x16\x0f" "chunk_ancillary")
QDEF(MP_QSTR_chunk_append, (const byte*)"\x6f\xb6\x0c" "chunk_append")
QDEF(MP_QSTR_chunk_check_crc, (const byte*)"\xea\x74\x0f" "chunk_check_crc")
QDEF(MP_QSTR_chunk_create, (const byte*)"\xc5\x5d\x0c" "chunk_create")
QDEF(MP_QSTR_chunk_data, (const byte*)"\x11\x8d\x0a" "chunk_data")
QDEF(MP_QSTR_chunk_data_const, (const byte*)"\x4b\xf8\x10" "chunk_data_const")
QDEF(MP_QSTR_chunk_find, (const byte*)"\x04\xe5\x0a" "chunk_find")
QDEF(MP_QSTR_chunk_find_const, (const byte*)"\x5e\xc0\x10" "chunk_find_const")
QDEF(MP_QSTR_chunk_generate_crc, (const byte*)"\x27\xeb\x12" "chunk_generate_crc")
QDEF(MP_QSTR_chunk_length, (const byte*)"\x5d\x48\x0c" "chunk_length")
QDEF(MP_QSTR_chunk_next, (const byte*)"\x46\x18\x0a" "chunk_next")
QDEF(MP_QSTR_chunk_next_const, (const byte*)"\x1c\x1a\x10" "chunk_next_const")
QDEF(MP_QSTR_chunk_private, (const byte*)"\x4c\x95\x0d" "chunk_private")
QDEF(MP_QSTR_chunk_safetocopy, (const byte*)"\x8e\x79\x10" "chunk_safetocopy")
QDEF(MP_QSTR_chunk_type, (const byte*)"\x99\x31\x0a" "chunk_type")
QDEF(MP_QSTR_chunk_type_equals, (const byte*)"\x39\x17\x11" "chunk_type_equals")
QDEF(MP_QSTR_clean, (const byte*)"\x60\xa0\x05" "clean")
QDEF(MP_QSTR_clear_btn_ctrl, (const byte*)"\xed\x2f\x0e" "clear_btn_ctrl")
QDEF(MP_QSTR_clear_btn_ctrl_all, (const byte*)"\xf3\xce\x12" "clear_btn_ctrl_all")
QDEF(MP_QSTR_clear_icc, (const byte*)"\x8a\x6a\x09" "clear_icc")
QDEF(MP_QSTR_clear_itext, (const byte*)"\xf7\xd1\x0b" "clear_itext")
QDEF(MP_QSTR_clear_protect, (const byte*)"\x88\xb6\x0d" "clear_protect")
QDEF(MP_QSTR_clear_selection, (const byte*)"\x83\x9e\x0f" "clear_selection")
QDEF(MP_QSTR_clear_serie, (const byte*)"\xeb\xc7\x0b" "clear_serie")
QDEF(MP_QSTR_clear_text, (const byte*)"\x3e\xba\x0a" "clear_text")
QDEF(MP_QSTR_click_focus, (const byte*)"\xb8\x4f\x0b" "click_focus")
QDEF(MP_QSTR_close_cb, (const byte*)"\x6d\xed\x08" "close_cb")
QDEF(MP_QSTR_close_event_cb, (const byte*)"\xde\xd9\x0e" "close_event_cb")
QDEF(MP_QSTR_closure, (const byte*)"\x74\xca\x07" "closure")
QDEF(MP_QSTR_clz, (const byte*)"\x50\x4c\x03" "clz")
QDEF(MP_QSTR_cmath, (const byte*)"\xb6\xf4\x05" "cmath")
QDEF(MP_QSTR_cmp, (const byte*)"\x3b\x4c\x03" "cmp")
QDEF(MP_QSTR_code, (const byte*)"\x68\xda\x04" "code")
QDEF(MP_QSTR_collect, (const byte*)"\x9b\x65\x07" "collect")
QDEF(MP_QSTR_color, (const byte*)"\xd8\x06\x05" "color")
QDEF(MP_QSTR_color32_t, (const byte*)"\xf2\xe7\x09" "color32_t")
QDEF(MP_QSTR_color_brightness, (const byte*)"\x4e\xab\x10" "color_brightness")
QDEF(MP_QSTR_color_chroma_key, (const byte*)"\x35\x6b\x10" "color_chroma_key")
QDEF(MP_QSTR_color_convert, (const byte*)"\xb0\x02\x0d" "color_convert")
QDEF(MP_QSTR_color_format_get_px_size, (const byte*)"\x80\x76\x18" "color_format_get_px_size")
QDEF(MP_QSTR_color_format_has_alpha, (const byte*)"\x8a\xa6\x16" "color_format_has_alpha")
QDEF(MP_QSTR_color_format_is_chroma_keyed, (const byte*)"\xed\x39\x1c" "color_format_is_chroma_keyed")
QDEF(MP_QSTR_color_hex, (const byte*)"\xb2\xc4\x09" "color_hex")
QDEF(MP_QSTR_color_hex3, (const byte*)"\xc1\x5a\x0a" "color_hex3")
QDEF(MP_QSTR_color_hsv_t, (const byte*)"\xe1\x53\x0b" "color_hsv_t")
QDEF(MP_QSTR_color_hsv_to_rgb, (const byte*)"\xc6\x6d\x10" "color_hsv_to_rgb")
QDEF(MP_QSTR_color_make, (const byte*)"\x85\xd4\x0a" "color_make")
QDEF(MP_QSTR_color_mix, (const byte*)"\xfb\xb7\x09" "color_mix")
QDEF(MP_QSTR_color_mode_cleanup, (const byte*)"\xbb\xe6\x12" "color_mode_cleanup")
QDEF(MP_QSTR_color_mode_copy, (const byte*)"\xde\x3a\x0f" "color_mode_copy")
QDEF(MP_QSTR_color_mode_init, (const byte*)"\x61\x08\x0f" "color_mode_init")
QDEF(MP_QSTR_color_mode_make, (const byte*)"\x79\xfc\x0f" "color_mode_make")
QDEF(MP_QSTR_color_rgb_to_hsv, (const byte*)"\x06\xb9\x10" "color_rgb_to_hsv")
QDEF(MP_QSTR_color_t, (const byte*)"\x13\x12\x07" "color_t")
QDEF(MP_QSTR_color_to1, (const byte*)"\xad\xd7\x09" "color_to1")
QDEF(MP_QSTR_color_to16, (const byte*)"\x7b\xcd\x0a" "color_to16")
QDEF(MP_QSTR_color_to32, (const byte*)"\xbd\xcd\x0a" "color_to32")
QDEF(MP_QSTR_color_to8, (const byte*)"\xa4\xd7\x09" "color_to8")
QDEF(MP_QSTR_color_to_hsv, (const byte*)"\xae\x14\x0c" "color_to_hsv")
QDEF(MP_QSTR_colortype, (const byte*)"\x40\x32\x09" "colortype")
QDEF(MP_QSTR_compare, (const byte*)"\x22\xa7\x07" "compare")
QDEF(MP_QSTR_compile, (const byte*)"\xf4\xc9\x07" "compile")
QDEF(MP_QSTR_complex, (const byte*)"\xc5\x9d\x07" "complex")
QDEF(MP_QSTR_compression_method, (const byte*)"\x2b\xc6\x12" "compression_method")
QDEF(MP_QSTR_connect, (const byte*)"\xdb\x3d\x07" "connect")
QDEF(MP_QSTR_cont, (const byte*)"\x33\xd9\x04" "cont")
QDEF(MP_QSTR_content, (const byte*)"\xac\xd9\x07" "content")
QDEF(MP_QSTR_convert, (const byte*)"\xf2\x9e\x07" "convert")
QDEF(MP_QSTR_coord_y, (const byte*)"\xb6\xb7\x07" "coord_y")
QDEF(MP_QSTR_copy_buf, (const byte*)"\x8e\x4c\x08" "copy_buf")
QDEF(MP_QSTR_copysign, (const byte*)"\x33\x14\x08" "copysign")
QDEF(MP_QSTR_cos, (const byte*)"\x7a\x4c\x03" "cos")
QDEF(MP_QSTR_cosh, (const byte*)"\xd2\xdb\x04" "cosh")
QDEF(MP_QSTR_count_children, (const byte*)"\x0a\x78\x0e" "count_children")
QDEF(MP_QSTR_count_children_recursive, (const byte*)"\x6f\x70\x18" "count_children_recursive")
QDEF(MP_QSTR_counter, (const byte*)"\x11\x42\x07" "counter")
QDEF(MP_QSTR_country, (const byte*)"\xed\x44\x07" "country")
QDEF(MP_QSTR_cpicker, (const byte*)"\xc0\x7a\x07" "cpicker")
QDEF(MP_QSTR_cpsid, (const byte*)"\xe8\xc7\x05" "cpsid")
QDEF(MP_QSTR_cpsie, (const byte*)"\xe9\xc7\x05" "cpsie")
QDEF(MP_QSTR_cpu, (const byte*)"\xc3\x4d\x03" "cpu")
QDEF(MP_QSTR_crc, (const byte*)"\x17\x4d\x03" "crc")
QDEF(MP_QSTR_crc32, (const byte*)"\x76\xe8\x05" "crc32")
QDEF(MP_QSTR_crc8, (const byte*)"\xcf\xef\x04" "crc8")
QDEF(MP_QSTR_cursor, (const byte*)"\xcf\xfa\x06" "cursor")
QDEF(MP_QSTR_cursor_down, (const byte*)"\x42\x8a\x0b" "cursor_down")
QDEF(MP_QSTR_cursor_left, (const byte*)"\xab\xd5\x0b" "cursor_left")
QDEF(MP_QSTR_cursor_right, (const byte*)"\x70\x56\x0c" "cursor_right")
QDEF(MP_QSTR_cursor_up, (const byte*)"\x55\x43\x09" "cursor_up")
QDEF(MP_QSTR_custom_context, (const byte*)"\x16\x61\x0e" "custom_context")
QDEF(MP_QSTR_custom_inflate, (const byte*)"\x34\xe5\x0e" "custom_inflate")
QDEF(MP_QSTR_custom_zlib, (const byte*)"\x54\xe5\x0b" "custom_zlib")
QDEF(MP_QSTR_cut_text, (const byte*)"\xc5\xad\x08" "cut_text")
QDEF(MP_QSTR_dark, (const byte*)"\x59\xdc\x04" "dark")
QDEF(MP_QSTR_data, (const byte*)"\x15\xdc\x04" "data")
QDEF(MP_QSTR_data_size, (const byte*)"\xcf\xd6\x09" "data_size")
QDEF(MP_QSTR_datetime, (const byte*)"\xe4\x04\x08" "datetime")
QDEF(MP_QSTR_day, (const byte*)"\xf9\x1d\x03" "day")
QDEF(MP_QSTR_day_names, (const byte*)"\xb2\xd0\x09" "day_names")
QDEF(MP_QSTR_ddlist, (const byte*)"\xa7\xb5\x06" "ddlist")
QDEF(MP_QSTR_deadtime, (const byte*)"\x54\xf8\x08" "deadtime")
QDEF(MP_QSTR_debug, (const byte*)"\xd4\x55\x05" "debug")
QDEF(MP_QSTR_debug_check_null, (const byte*)"\x09\xe9\x10" "debug_check_null")
QDEF(MP_QSTR_debug_check_obj_type, (const byte*)"\x12\x92\x14" "debug_check_obj_type")
QDEF(MP_QSTR_debug_check_obj_valid, (const byte*)"\xbc\x97\x15" "debug_check_obj_valid")
QDEF(MP_QSTR_debug_check_str, (const byte*)"\xe7\x7b\x0f" "debug_check_str")
QDEF(MP_QSTR_debug_check_style, (const byte*)"\x65\x19\x11" "debug_check_style")
QDEF(MP_QSTR_debug_log_error, (const byte*)"\x08\xec\x0f" "debug_log_error")
QDEF(MP_QSTR_debug_sentinel, (const byte*)"\x29\x12\x0e" "debug_sentinel")
QDEF(MP_QSTR_dec_dsc, (const byte*)"\x0c\xcf\x07" "dec_dsc")
QDEF(MP_QSTR_decode, (const byte*)"\xa9\x59\x06" "decode")
QDEF(MP_QSTR_decode24, (const byte*)"\x6f\x6e\x08" "decode24")
QDEF(MP_QSTR_decode32, (const byte*)"\x08\x6e\x08" "decode32")
QDEF(MP_QSTR_decode_memory, (const byte*)"\x17\x04\x0d" "decode_memory")
QDEF(MP_QSTR_decoder, (const byte*)"\xbb\x8e\x07" "decoder")
QDEF(MP_QSTR_decoder_built_in_close, (const byte*)"\x93\x98\x16" "decoder_built_in_close")
QDEF(MP_QSTR_decoder_built_in_info, (const byte*)"\x8b\x92\x15" "decoder_built_in_info")
QDEF(MP_QSTR_decoder_built_in_open, (const byte*)"\x71\xb8\x15" "decoder_built_in_open")
QDEF(MP_QSTR_decoder_built_in_read_line, (const byte*)"\x26\x2b\x1a" "decoder_built_in_read_line")
QDEF(MP_QSTR_decoder_close, (const byte*)"\xd2\x60\x0d" "decoder_close")
QDEF(MP_QSTR_decoder_create, (const byte*)"\x00\x4b\x0e" "decoder_create")
QDEF(MP_QSTR_decoder_delete, (const byte*)"\xdd\xfc\x0e" "decoder_delete")
QDEF(MP_QSTR_decoder_get_info, (const byte*)"\xa3\x3b\x10" "decoder_get_info")
QDEF(MP_QSTR_decoder_init, (const byte*)"\x5e\xa6\x0c" "decoder_init")
QDEF(MP_QSTR_decoder_open, (const byte*)"\x10\x0b\x0c" "decoder_open")
QDEF(MP_QSTR_decoder_read_line, (const byte*)"\x67\x37\x11" "decoder_read_line")
QDEF(MP_QSTR_decoder_set_close_cb, (const byte*)"\xb1\x4c\x14" "decoder_set_close_cb")
QDEF(MP_QSTR_decoder_set_info_cb, (const byte*)"\xe9\x6a\x13" "decoder_set_info_cb")
QDEF(MP_QSTR_decoder_set_open_cb, (const byte*)"\x13\x19\x13" "decoder_set_open_cb")
QDEF(MP_QSTR_decoder_set_read_line_cb, (const byte*)"\x24\xb2\x18" "decoder_set_read_line_cb")
QDEF(MP_QSTR_decoder_settings_init, (const byte*)"\x84\xef\x15" "decoder_settings_init")
QDEF(MP_QSTR_decompress, (const byte*)"\x62\xfb\x0a" "decompress")
QDEF(MP_QSTR_decompress_settings_init, (const byte*)"\xdd\x3e\x18" "decompress_settings_init")
QDEF(MP_QSTR_decor, (const byte*)"\x5a\x50\x05" "decor")
QDEF(MP_QSTR_decrement, (const byte*)"\x42\xb5\x09" "decrement")
QDEF(MP_QSTR_deepsleep, (const byte*)"\x9e\xd2\x09" "deepsleep")
QDEF(MP_QSTR_def_event_cb, (const byte*)"\x6f\x74\x0c" "def_event_cb")
QDEF(MP_QSTR_default, (const byte*)"\xce\x7d\x07" "default")
QDEF(MP_QSTR_default_decompress_settings, (const byte*)"\x4c\x67\x1b" "default_decompress_settings")
QDEF(MP_QSTR_degrees, (const byte*)"\x02\x41\x07" "degrees")
QDEF(MP_QSTR_deinit, (const byte*)"\x9e\x8d\x06" "deinit")
QDEF(MP_QSTR_del_async, (const byte*)"\xd1\xab\x09" "del_async")
QDEF(MP_QSTR_del_char, (const byte*)"\x6f\x44\x08" "del_char")
QDEF(MP_QSTR_del_char_forward, (const byte*)"\xab\x70\x10" "del_char_forward")
QDEF(MP_QSTR_delattr, (const byte*)"\xdb\xc8\x07" "delattr")
QDEF(MP_QSTR_delay, (const byte*)"\x50\x4c\x05" "delay")
QDEF(MP_QSTR_delete, (const byte*)"\x9c\xe7\x06" "delete")
QDEF(MP_QSTR_deleter, (const byte*)"\x6e\xdb\x07" "deleter")
QDEF(MP_QSTR_deque, (const byte*)"\x05\x99\x05" "deque")
QDEF(MP_QSTR_dht_readinto, (const byte*)"\xec\x62\x0c" "dht_readinto")
QDEF(MP_QSTR_dict_view, (const byte*)"\x2d\xa9\x09" "dict_view")
QDEF(MP_QSTR_difference, (const byte*)"\x72\x24\x0a" "difference")
QDEF(MP_QSTR_difference_update, (const byte*)"\x9c\xfa\x11" "difference_update")
QDEF(MP_QSTR_digest, (const byte*)"\xcd\xc4\x06" "digest")
QDEF(MP_QSTR_dir_close_cb, (const byte*)"\x0d\xd7\x0c" "dir_close_cb")
QDEF(MP_QSTR_dir_d, (const byte*)"\x61\xcb\x05" "dir_d")
QDEF(MP_QSTR_dir_open_cb, (const byte*)"\x2f\x21\x0b" "dir_open_cb")
QDEF(MP_QSTR_dir_read_cb, (const byte*)"\x49\x93\x0b" "dir_read_cb")
QDEF(MP_QSTR_disable, (const byte*)"\x91\x76\x07" "disable")
QDEF(MP_QSTR_disable_irq, (const byte*)"\x04\x3a\x0b" "disable_irq")
QDEF(MP_QSTR_disabled, (const byte*)"\xd5\x48\x08" "disabled")
QDEF(MP_QSTR_discard, (const byte*)"\x0f\x71\x07" "discard")
QDEF(MP_QSTR_disp, (const byte*)"\x2b\xfe\x04" "disp")
QDEF(MP_QSTR_disp_assign_screen, (const byte*)"\xc6\xc9\x12" "disp_assign_screen")
QDEF(MP_QSTR_disp_buf_init, (const byte*)"\x60\xad\x0d" "disp_buf_init")
QDEF(MP_QSTR_disp_buf_t, (const byte*)"\xce\xd4\x0a" "disp_buf_t")
QDEF(MP_QSTR_disp_drv_init, (const byte*)"\x31\x2b\x0d" "disp_drv_init")
QDEF(MP_QSTR_disp_drv_register, (const byte*)"\x42\x95\x11" "disp_drv_register")
QDEF(MP_QSTR_disp_drv_t, (const byte*)"\xff\x90\x0a" "disp_drv_t")
QDEF(MP_QSTR_disp_drv_update, (const byte*)"\xda\x6d\x0f" "disp_drv_update")
QDEF(MP_QSTR_disp_flush_ready, (const byte*)"\x64\xa6\x10" "disp_flush_ready")
QDEF(MP_QSTR_disp_get_antialiasing, (const byte*)"\x59\x36\x15" "disp_get_antialiasing")
QDEF(MP_QSTR_disp_get_buf, (const byte*)"\x2c\xfc\x0c" "disp_get_buf")
QDEF(MP_QSTR_disp_get_default, (const byte*)"\x96\x95\x10" "disp_get_default")
QDEF(MP_QSTR_disp_get_hor_res, (const byte*)"\x93\x12\x10" "disp_get_hor_res")
QDEF(MP_QSTR_disp_get_inactive_time, (const byte*)"\x7c\x41\x16" "disp_get_inactive_time")
QDEF(MP_QSTR_disp_get_inv_buf_size, (const byte*)"\xd8\x14\x15" "disp_get_inv_buf_size")
QDEF(MP_QSTR_disp_get_layer_sys, (const byte*)"\xf8\x39\x12" "disp_get_layer_sys")
QDEF(MP_QSTR_disp_get_layer_top, (const byte*)"\x6a\x50\x12" "disp_get_layer_top")
QDEF(MP_QSTR_disp_get_next, (const byte*)"\x9a\x51\x0d" "disp_get_next")
QDEF(MP_QSTR_disp_get_refr_task, (const byte*)"\xec\xc5\x12" "disp_get_refr_task")
QDEF(MP_QSTR_disp_get_scr_act, (const byte*)"\x96\x96\x10" "disp_get_scr_act")
QDEF(MP_QSTR_disp_get_ver_res, (const byte*)"\xc7\x7a\x10" "disp_get_ver_res")
QDEF(MP_QSTR_disp_is_double_buf, (const byte*)"\x6a\x92\x12" "disp_is_double_buf")
QDEF(MP_QSTR_disp_is_true_double_buf, (const byte*)"\xa3\x43\x17" "disp_is_true_double_buf")
QDEF(MP_QSTR_disp_load_scr, (const byte*)"\x0f\x63\x0d" "disp_load_scr")
QDEF(MP_QSTR_disp_pop_from_inv_buf, (const byte*)"\x32\x1e\x15" "disp_pop_from_inv_buf")
QDEF(MP_QSTR_disp_refr_task, (const byte*)"\xc5\xfc\x0e" "disp_refr_task")
QDEF(MP_QSTR_disp_remove, (const byte*)"\x72\x2f\x0b" "disp_remove")
QDEF(MP_QSTR_disp_set_default, (const byte*)"\x82\xbe\x10" "disp_set_default")
QDEF(MP_QSTR_disp_t, (const byte*)"\x20\x3e\x06" "disp_t")
QDEF(MP_QSTR_disp_trig_activity, (const byte*)"\x4e\x23\x12" "disp_trig_activity")
QDEF(MP_QSTR_display, (const byte*)"\x1f\x55\x07" "display")
QDEF(MP_QSTR_div, (const byte*)"\xfe\x1e\x03" "div")
QDEF(MP_QSTR_dma, (const byte*)"\x6d\x1f\x03" "dma")
QDEF(MP_QSTR_doc, (const byte*)"\x2d\x1f\x03" "doc")
QDEF(MP_QSTR_down, (const byte*)"\x37\x06\x04" "down")
QDEF(MP_QSTR_drag_in_prog, (const byte*)"\xf8\x64\x0c" "drag_in_prog")
QDEF(MP_QSTR_drag_limit, (const byte*)"\xff\xe4\x0a" "drag_limit")
QDEF(MP_QSTR_drag_limit_out, (const byte*)"\x8e\x09\x0e" "drag_limit_out")
QDEF(MP_QSTR_drag_sum, (const byte*)"\xc1\x75\x08" "drag_sum")
QDEF(MP_QSTR_drag_throw, (const byte*)"\x5c\xe1\x0a" "drag_throw")
QDEF(MP_QSTR_drag_throw_vect, (const byte*)"\xe7\x3f\x0f" "drag_throw_vect")
QDEF(MP_QSTR_draw_aa_get_opa, (const byte*)"\x92\xec\x0f" "draw_aa_get_opa")
QDEF(MP_QSTR_draw_aa_hor_seg, (const byte*)"\x7e\xe6\x0f" "draw_aa_hor_seg")
QDEF(MP_QSTR_draw_aa_ver_seg, (const byte*)"\xaa\xcc\x0f" "draw_aa_ver_seg")
QDEF(MP_QSTR_draw_arc, (const byte*)"\x6a\x4e\x08" "draw_arc")
QDEF(MP_QSTR_draw_fill, (const byte*)"\x55\xae\x09" "draw_fill")
QDEF(MP_QSTR_draw_free_buf, (const byte*)"\x40\x27\x0d" "draw_free_buf")
QDEF(MP_QSTR_draw_get_buf, (const byte*)"\xa2\x6d\x0c" "draw_get_buf")
QDEF(MP_QSTR_draw_img, (const byte*)"\xd9\x2f\x08" "draw_img")
QDEF(MP_QSTR_draw_label, (const byte*)"\xbc\xfe\x0a" "draw_label")
QDEF(MP_QSTR_draw_label_hint_t, (const byte*)"\x33\x12\x11" "draw_label_hint_t")
QDEF(MP_QSTR_draw_label_txt_sel_t, (const byte*)"\x15\xc1\x14" "draw_label_txt_sel_t")
QDEF(MP_QSTR_draw_letter, (const byte*)"\xa4\x16\x0b" "draw_letter")
QDEF(MP_QSTR_draw_line, (const byte*)"\x54\x85\x09" "draw_line")
QDEF(MP_QSTR_draw_map, (const byte*)"\x46\x3f\x08" "draw_map")
QDEF(MP_QSTR_draw_polygon, (const byte*)"\xd6\x0f\x0c" "draw_polygon")
QDEF(MP_QSTR_draw_px, (const byte*)"\x12\x2e\x07" "draw_px")
QDEF(MP_QSTR_draw_rect, (const byte*)"\x3a\xe9\x09" "draw_rect")
QDEF(MP_QSTR_draw_text, (const byte*)"\x87\xf1\x09" "draw_text")
QDEF(MP_QSTR_draw_triangle, (const byte*)"\x34\x10\x0d" "draw_triangle")
QDEF(MP_QSTR_driver, (const byte*)"\x1b\x71\x06" "driver")
QDEF(MP_QSTR_drv, (const byte*)"\x85\x1f\x03" "drv")
QDEF(MP_QSTR_dsc, (const byte*)"\xb1\x1f\x03" "dsc")
QDEF(MP_QSTR_dump, (const byte*)"\xe9\x2f\x04" "dump")
QDEF(MP_QSTR_dumps, (const byte*)"\x7a\x2d\x05" "dumps")
QDEF(MP_QSTR_dupterm, (const byte*)"\xaa\x5a\x07" "dupterm")
QDEF(MP_QSTR_e, (const byte*)"\xc0\xb5\x01" "e")
QDEF(MP_QSTR_editing, (const byte*)"\x19\xd0\x07" "editing")
QDEF(MP_QSTR_elapsed_micros, (const byte*)"\x39\xfa\x0e" "elapsed_micros")
QDEF(MP_QSTR_elapsed_millis, (const byte*)"\x8e\xc2\x0e" "elapsed_millis")
QDEF(MP_QSTR_enable, (const byte*)"\x04\xde\x06" "enable")
QDEF(MP_QSTR_enable_irq, (const byte*)"\x91\x60\x0a" "enable_irq")
QDEF(MP_QSTR_enc_diff, (const byte*)"\x3f\x25\x08" "enc_diff")
QDEF(MP_QSTR_encode, (const byte*)"\x43\xca\x06" "encode")
QDEF(MP_QSTR_encoding, (const byte*)"\x06\x9c\x08" "encoding")
QDEF(MP_QSTR_enumerate, (const byte*)"\x71\xba\x09" "enumerate")
QDEF(MP_QSTR_erf, (const byte*)"\x94\x23\x03" "erf")
QDEF(MP_QSTR_erfc, (const byte*)"\x77\x96\x04" "erfc")
QDEF(MP_QSTR_errno, (const byte*)"\xc1\x11\x05" "errno")
QDEF(MP_QSTR_error, (const byte*)"\xbd\x11\x05" "error")
QDEF(MP_QSTR_error_msg, (const byte*)"\x9b\x7e\x09" "error_msg")
QDEF(MP_QSTR_error_text, (const byte*)"\x9f\xb2\x0a" "error_text")
QDEF(MP_QSTR_errorcode, (const byte*)"\x10\xdd\x09" "errorcode")
QDEF(MP_QSTR_event_get_data, (const byte*)"\xef\xfa\x0e" "event_get_data")
QDEF(MP_QSTR_event_send, (const byte*)"\x0a\x87\x0a" "event_send")
QDEF(MP_QSTR_event_send_func, (const byte*)"\x0b\x3b\x0f" "event_send_func")
QDEF(MP_QSTR_exec_cb, (const byte*)"\x60\xac\x07" "exec_cb")
QDEF(MP_QSTR_execfile, (const byte*)"\x58\x28\x08" "execfile")
QDEF(MP_QSTR_exit, (const byte*)"\x85\xbe\x04" "exit")
QDEF(MP_QSTR_exp, (const byte*)"\xc8\x24\x03" "exp")
QDEF(MP_QSTR_expm1, (const byte*)"\x74\x72\x05" "expm1")
QDEF(MP_QSTR_fabs, (const byte*)"\x93\x12\x04" "fabs")
QDEF(MP_QSTR_factorial, (const byte*)"\xcc\x32\x09" "factorial")
QDEF(MP_QSTR_fault_debug, (const byte*)"\x61\xc1\x0b" "fault_debug")
QDEF(MP_QSTR_feed, (const byte*)"\xa7\x23\x04" "feed")
QDEF(MP_QSTR_feedback_cb, (const byte*)"\xb2\x68\x0b" "feedback_cb")
QDEF(MP_QSTR_file, (const byte*)"\xc3\x34\x04" "file")
QDEF(MP_QSTR_file_d, (const byte*)"\x98\x7c\x06" "file_d")
QDEF(MP_QSTR_file_size, (const byte*)"\x59\xa6\x09" "file_size")
QDEF(MP_QSTR_fill, (const byte*)"\xca\x34\x04" "fill")
QDEF(MP_QSTR_fill_bg, (const byte*)"\x10\xab\x07" "fill_bg")
QDEF(MP_QSTR_fill_rect, (const byte*)"\x35\xed\x09" "fill_rect")
QDEF(MP_QSTR_filter, (const byte*)"\x25\xbe\x06" "filter")
QDEF(MP_QSTR_filter_method, (const byte*)"\x05\x6a\x0d" "filter_method")
QDEF(MP_QSTR_firstbit, (const byte*)"\x20\x39\x08" "firstbit")
QDEF(MP_QSTR_flags, (const byte*)"\xfa\x8f\x05" "flags")
QDEF(MP_QSTR_float, (const byte*)"\x35\x44\x05" "float")
QDEF(MP_QSTR_floor, (const byte*)"\x7d\x46\x05" "floor")
QDEF(MP_QSTR_flow, (const byte*)"\x37\x40\x04" "flow")
QDEF(MP_QSTR_flush, (const byte*)"\x61\xc1\x05" "flush")
QDEF(MP_QSTR_flush_cb, (const byte*)"\xff\xe9\x08" "flush_cb")
QDEF(MP_QSTR_flushing, (const byte*)"\x21\xfb\x08" "flushing")
QDEF(MP_QSTR_fmod, (const byte*)"\xe5\x44\x04" "fmod")
QDEF(MP_QSTR_focus, (const byte*)"\x49\xed\x05" "focus")
QDEF(MP_QSTR_focus_cb, (const byte*)"\x57\xef\x08" "focus_cb")
QDEF(MP_QSTR_font, (const byte*)"\x96\x2b\x04" "font")
QDEF(MP_QSTR_font_get_bitmap_fmt_txt, (const byte*)"\x04\x89\x17" "font_get_bitmap_fmt_txt")
QDEF(MP_QSTR_font_get_glyph_bitmap, (const byte*)"\x96\x2c\x15" "font_get_glyph_bitmap")
QDEF(MP_QSTR_font_get_glyph_dsc, (const byte*)"\x81\x54\x12" "font_get_glyph_dsc")
QDEF(MP_QSTR_font_get_glyph_dsc_fmt_txt, (const byte*)"\xa6\x24\x1a" "font_get_glyph_dsc_fmt_txt")
QDEF(MP_QSTR_font_get_glyph_width, (const byte*)"\x13\x24\x14" "font_get_glyph_width")
QDEF(MP_QSTR_font_get_line_height, (const byte*)"\xee\xe0\x14" "font_get_line_height")
QDEF(MP_QSTR_font_glyph_dsc_t, (const byte*)"\x23\xa7\x10" "font_glyph_dsc_t")
QDEF(MP_QSTR_font_roboto_16, (const byte*)"\x3a\x0d\x0e" "font_roboto_16")
QDEF(MP_QSTR_font_roboto_28, (const byte*)"\x57\x0d\x0e" "font_roboto_28")
QDEF(MP_QSTR_font_t, (const byte*)"\x5d\x5f\x06" "font_t")
QDEF(MP_QSTR_frag_pct, (const byte*)"\x0f\x1c\x08" "frag_pct")
QDEF(MP_QSTR_framebuf, (const byte*)"\x69\x82\x08" "framebuf")
QDEF(MP_QSTR_free_biggest_size, (const byte*)"\x1d\x1d\x11" "free_biggest_size")
QDEF(MP_QSTR_free_cnt, (const byte*)"\xb7\x5d\x08" "free_cnt")
QDEF(MP_QSTR_free_size, (const byte*)"\x2b\xd3\x09" "free_size")
QDEF(MP_QSTR_free_space_cb, (const byte*)"\xf4\x3e\x0d" "free_space_cb")
QDEF(MP_QSTR_freq, (const byte*)"\xe5\x3a\x04" "freq")
QDEF(MP_QSTR_frexp, (const byte*)"\x1c\x98\x05" "frexp")
QDEF(MP_QSTR_fromkeys, (const byte*)"\x37\xbd\x08" "fromkeys")
QDEF(MP_QSTR_frozen, (const byte*)"\x0f\xb8\x06" "frozen")
QDEF(MP_QSTR_frozenset, (const byte*)"\xed\x9c\x09" "frozenset")
QDEF(MP_QSTR_fs_close, (const byte*)"\x79\xcc\x08" "fs_close")
QDEF(MP_QSTR_fs_dir_close, (const byte*)"\x99\x61\x0c" "fs_dir_close")
QDEF(MP_QSTR_fs_dir_open, (const byte*)"\x3b\xf3\x0b" "fs_dir_open")
QDEF(MP_QSTR_fs_dir_read, (const byte*)"\x1d\x78\x0b" "fs_dir_read")
QDEF(MP_QSTR_fs_dir_t, (const byte*)"\xbb\x2e\x08" "fs_dir_t")
QDEF(MP_QSTR_fs_drv_init, (const byte*)"\xea\xbf\x0b" "fs_drv_init")
QDEF(MP_QSTR_fs_drv_register, (const byte*)"\xd9\x9a\x0f" "fs_drv_register")
QDEF(MP_QSTR_fs_drv_t, (const byte*)"\x84\x75\x08" "fs_drv_t")
QDEF(MP_QSTR_fs_file_t, (const byte*)"\x82\x47\x09" "fs_file_t")
QDEF(MP_QSTR_fs_free_space, (const byte*)"\x80\xbb\x0d" "fs_free_space")
QDEF(MP_QSTR_fs_get_drv, (const byte*)"\xa6\xd7\x0a" "fs_get_drv")
QDEF(MP_QSTR_fs_get_ext, (const byte*)"\x6f\xd5\x0a" "fs_get_ext")
QDEF(MP_QSTR_fs_get_last, (const byte*)"\x2c\x03\x0b" "fs_get_last")
QDEF(MP_QSTR_fs_get_letters, (const byte*)"\x8b\x66\x0e" "fs_get_letters")
QDEF(MP_QSTR_fs_init, (const byte*)"\x15\x97\x07" "fs_init")
QDEF(MP_QSTR_fs_is_ready, (const byte*)"\x81\x96\x0b" "fs_is_ready")
QDEF(MP_QSTR_fs_open, (const byte*)"\x5b\x9a\x07" "fs_open")
QDEF(MP_QSTR_fs_read, (const byte*)"\x3d\x1f\x07" "fs_read")
QDEF(MP_QSTR_fs_remove, (const byte*)"\x69\xa7\x09" "fs_remove")
QDEF(MP_QSTR_fs_rename, (const byte*)"\x3f\x14\x09" "fs_rename")
QDEF(MP_QSTR_fs_seek, (const byte*)"\x17\xbc\x07" "fs_seek")
QDEF(MP_QSTR_fs_size, (const byte*)"\x2a\xaa\x07" "fs_size")
QDEF(MP_QSTR_fs_tell, (const byte*)"\x1e\x06\x07" "fs_tell")
QDEF(MP_QSTR_fs_trunc, (const byte*)"\x11\xdf\x08" "fs_trunc")
QDEF(MP_QSTR_fs_up, (const byte*)"\xaa\x6c\x05" "fs_up")
QDEF(MP_QSTR_fs_write, (const byte*)"\xd2\xad\x08" "fs_write")
QDEF(MP_QSTR_full, (const byte*)"\xd6\x68\x04" "full")
QDEF(MP_QSTR_function, (const byte*)"\x27\x02\x08" "function")
QDEF(MP_QSTR_gama_defined, (const byte*)"\xb1\x0f\x0c" "gama_defined")
QDEF(MP_QSTR_gama_gamma, (const byte*)"\x97\x83\x0a" "gama_gamma")
QDEF(MP_QSTR_gamma, (const byte*)"\x02\x90\x05" "gamma")
QDEF(MP_QSTR_gauge, (const byte*)"\x54\xb3\x05" "gauge")
QDEF(MP_QSTR_gc, (const byte*)"\x61\x6e\x02" "gc")
QDEF(MP_QSTR_gencall, (const byte*)"\x8b\x06\x07" "gencall")
QDEF(MP_QSTR_generator, (const byte*)"\x96\xc3\x09" "generator")
QDEF(MP_QSTR_get_accepted_chars, (const byte*)"\x79\x3b\x12" "get_accepted_chars")
QDEF(MP_QSTR_get_active_btn, (const byte*)"\x67\x2e\x0e" "get_active_btn")
QDEF(MP_QSTR_get_active_btn_text, (const byte*)"\x85\x36\x13" "get_active_btn_text")
QDEF(MP_QSTR_get_align, (const byte*)"\xc1\x23\x09" "get_align")
QDEF(MP_QSTR_get_angle_end, (const byte*)"\x3d\x61\x0d" "get_angle_end")
QDEF(MP_QSTR_get_angle_offset, (const byte*)"\x9f\x18\x10" "get_angle_offset")
QDEF(MP_QSTR_get_angle_start, (const byte*)"\xb2\x95\x0f" "get_angle_start")
QDEF(MP_QSTR_get_anim_speed, (const byte*)"\xff\xb9\x0e" "get_anim_speed")
QDEF(MP_QSTR_get_anim_time, (const byte*)"\x0d\xe6\x0d" "get_anim_time")
QDEF(MP_QSTR_get_arc_length, (const byte*)"\xff\x03\x0e" "get_arc_length")
QDEF(MP_QSTR_get_auto_realign, (const byte*)"\xe6\x9f\x10" "get_auto_realign")
QDEF(MP_QSTR_get_auto_size, (const byte*)"\xb9\xcf\x0d" "get_auto_size")
QDEF(MP_QSTR_get_base_dir, (const byte*)"\x59\x24\x0c" "get_base_dir")
QDEF(MP_QSTR_get_body_draw, (const byte*)"\x63\xab\x0d" "get_body_draw")
QDEF(MP_QSTR_get_bpp, (const byte*)"\x2e\x54\x07" "get_bpp")
QDEF(MP_QSTR_get_bright, (const byte*)"\x6e\x8d\x0a" "get_bright")
QDEF(MP_QSTR_get_btn_ctrl, (const byte*)"\x82\xad\x0c" "get_btn_ctrl")
QDEF(MP_QSTR_get_btn_img, (const byte*)"\x08\x7d\x0b" "get_btn_img")
QDEF(MP_QSTR_get_btn_index, (const byte*)"\xd5\x6b\x0d" "get_btn_index")
QDEF(MP_QSTR_get_btn_label, (const byte*)"\x2d\x26\x0d" "get_btn_label")
QDEF(MP_QSTR_get_btn_selected, (const byte*)"\x82\x8e\x10" "get_btn_selected")
QDEF(MP_QSTR_get_btn_size, (const byte*)"\x8e\xf9\x0c" "get_btn_size")
QDEF(MP_QSTR_get_btn_text, (const byte*)"\xf6\xf7\x0c" "get_btn_text")
QDEF(MP_QSTR_get_btnm, (const byte*)"\x59\xca\x08" "get_btnm")
QDEF(MP_QSTR_get_btns_hidden, (const byte*)"\x92\xc2\x0f" "get_btns_hidden")
QDEF(MP_QSTR_get_btns_pos, (const byte*)"\x34\x30\x0c" "get_btns_pos")
QDEF(MP_QSTR_get_cell_align, (const byte*)"\x58\x23\x0e" "get_cell_align")
QDEF(MP_QSTR_get_cell_crop, (const byte*)"\x7b\x61\x0d" "get_cell_crop")
QDEF(MP_QSTR_get_cell_merge_right, (const byte*)"\x12\x74\x14" "get_cell_merge_right")
QDEF(MP_QSTR_get_cell_type, (const byte*)"\xed\x90\x0d" "get_cell_type")
QDEF(MP_QSTR_get_cell_value, (const byte*)"\xfe\xed\x0e" "get_cell_value")
QDEF(MP_QSTR_get_channels, (const byte*)"\x5c\x43\x0c" "get_channels")
QDEF(MP_QSTR_get_child, (const byte*)"\xa6\xa3\x09" "get_child")
QDEF(MP_QSTR_get_child_back, (const byte*)"\x12\xb1\x0e" "get_child_back")
QDEF(MP_QSTR_get_click, (const byte*)"\xc2\x73\x09" "get_click")
QDEF(MP_QSTR_get_col_cnt, (const byte*)"\x8a\x7a\x0b" "get_col_cnt")
QDEF(MP_QSTR_get_col_width, (const byte*)"\xb5\xb3\x0d" "get_col_width")
QDEF(MP_QSTR_get_color, (const byte*)"\x31\xeb\x09" "get_color")
QDEF(MP_QSTR_get_color_mode, (const byte*)"\xed\x45\x0e" "get_color_mode")
QDEF(MP_QSTR_get_color_mode_fixed, (const byte*)"\xe4\xf8\x14" "get_color_mode_fixed")
QDEF(MP_QSTR_get_content, (const byte*)"\x45\xbb\x0b" "get_content")
QDEF(MP_QSTR_get_coords, (const byte*)"\x0a\x2d\x0a" "get_coords")
QDEF(MP_QSTR_get_critical_value, (const byte*)"\x93\x86\x12" "get_critical_value")
QDEF(MP_QSTR_get_cursor_blink_time, (const byte*)"\xd1\x02\x15" "get_cursor_blink_time")
QDEF(MP_QSTR_get_cursor_click_pos, (const byte*)"\x44\x87\x14" "get_cursor_click_pos")
QDEF(MP_QSTR_get_cursor_manage, (const byte*)"\x98\x76\x11" "get_cursor_manage")
QDEF(MP_QSTR_get_cursor_pos, (const byte*)"\xb5\xcc\x0e" "get_cursor_pos")
QDEF(MP_QSTR_get_cursor_type, (const byte*)"\x81\xcb\x0f" "get_cursor_type")
QDEF(MP_QSTR_get_day_names, (const byte*)"\x1b\x38\x0d" "get_day_names")
QDEF(MP_QSTR_get_design_cb, (const byte*)"\x60\x5e\x0d" "get_design_cb")
QDEF(MP_QSTR_get_dir, (const byte*)"\x13\x48\x07" "get_dir")
QDEF(MP_QSTR_get_disp, (const byte*)"\x22\x4a\x08" "get_disp")
QDEF(MP_QSTR_get_drag, (const byte*)"\x3c\xcb\x08" "get_drag")
QDEF(MP_QSTR_get_drag_dir, (const byte*)"\x5c\x02\x0c" "get_drag_dir")
QDEF(MP_QSTR_get_drag_parent, (const byte*)"\x7f\x56\x0f" "get_drag_parent")
QDEF(MP_QSTR_get_drag_throw, (const byte*)"\x95\x7f\x0e" "get_drag_throw")
QDEF(MP_QSTR_get_draw_arrow, (const byte*)"\x0a\xff\x0e" "get_draw_arrow")
QDEF(MP_QSTR_get_edge_flash, (const byte*)"\x20\x71\x0e" "get_edge_flash")
QDEF(MP_QSTR_get_event_cb, (const byte*)"\xde\x2d\x0c" "get_event_cb")
QDEF(MP_QSTR_get_ext_attr, (const byte*)"\xe9\x2a\x0c" "get_ext_attr")
QDEF(MP_QSTR_get_ext_click_pad_bottom, (const byte*)"\x0e\x5e\x18" "get_ext_click_pad_bottom")
QDEF(MP_QSTR_get_ext_click_pad_left, (const byte*)"\x7a\xb0\x16" "get_ext_click_pad_left")
QDEF(MP_QSTR_get_ext_click_pad_right, (const byte*)"\xc1\xef\x17" "get_ext_click_pad_right")
QDEF(MP_QSTR_get_ext_click_pad_top, (const byte*)"\x0a\x09\x15" "get_ext_click_pad_top")
QDEF(MP_QSTR_get_ext_draw_pad, (const byte*)"\x90\xfe\x10" "get_ext_draw_pad")
QDEF(MP_QSTR_get_file_name, (const byte*)"\x32\x1b\x0d" "get_file_name")
QDEF(MP_QSTR_get_fit_bottom, (const byte*)"\x47\x67\x0e" "get_fit_bottom")
QDEF(MP_QSTR_get_fit_height, (const byte*)"\xd7\xab\x0e" "get_fit_height")
QDEF(MP_QSTR_get_fit_left, (const byte*)"\x73\x19\x0c" "get_fit_left")
QDEF(MP_QSTR_get_fit_right, (const byte*)"\xa8\x43\x0d" "get_fit_right")
QDEF(MP_QSTR_get_fit_top, (const byte*)"\xe3\xf9\x0b" "get_fit_top")
QDEF(MP_QSTR_get_fit_width, (const byte*)"\x6e\x96\x0d" "get_fit_width")
QDEF(MP_QSTR_get_fix_height, (const byte*)"\x5b\x3d\x0e" "get_fix_height")
QDEF(MP_QSTR_get_from_btn, (const byte*)"\x3d\x31\x0c" "get_from_btn")
QDEF(MP_QSTR_get_glyph_bitmap, (const byte*)"\x9a\x83\x10" "get_glyph_bitmap")
QDEF(MP_QSTR_get_glyph_dsc, (const byte*)"\x0d\x6f\x0d" "get_glyph_dsc")
QDEF(MP_QSTR_get_group, (const byte*)"\xd3\x57\x09" "get_group")
QDEF(MP_QSTR_get_height, (const byte*)"\xf3\x1b\x0a" "get_height")
QDEF(MP_QSTR_get_height_fit, (const byte*)"\xd7\x81\x0e" "get_height_fit")
QDEF(MP_QSTR_get_hidden, (const byte*)"\xe6\x14\x0a" "get_hidden")
QDEF(MP_QSTR_get_highlighted_dates, (const byte*)"\x05\xfe\x15" "get_highlighted_dates")
QDEF(MP_QSTR_get_highlighted_dates_num, (const byte*)"\xac\x7c\x19" "get_highlighted_dates_num")
QDEF(MP_QSTR_get_hor_fit, (const byte*)"\x7d\x16\x0b" "get_hor_fit")
QDEF(MP_QSTR_get_hsv, (const byte*)"\xc1\x3a\x07" "get_hsv")
QDEF(MP_QSTR_get_hue, (const byte*)"\x94\x39\x07" "get_hue")
QDEF(MP_QSTR_get_img, (const byte*)"\xcf\x34\x07" "get_img")
QDEF(MP_QSTR_get_indic_colored, (const byte*)"\x66\x90\x11" "get_indic_colored")
QDEF(MP_QSTR_get_ink_in_time, (const byte*)"\xf2\xdf\x0f" "get_ink_in_time")
QDEF(MP_QSTR_get_ink_out_time, (const byte*)"\xdb\x90\x10" "get_ink_out_time")
QDEF(MP_QSTR_get_ink_wait_time, (const byte*)"\xde\xa5\x11" "get_ink_wait_time")
QDEF(MP_QSTR_get_inner_coords, (const byte*)"\xcb\xb8\x10" "get_inner_coords")
QDEF(MP_QSTR_get_knob_in, (const byte*)"\x3c\x88\x0b" "get_knob_in")
QDEF(MP_QSTR_get_label, (const byte*)"\xaa\xe7\x09" "get_label")
QDEF(MP_QSTR_get_label_count, (const byte*)"\x16\x6a\x0f" "get_label_count")
QDEF(MP_QSTR_get_layout, (const byte*)"\x16\x7d\x0a" "get_layout")
QDEF(MP_QSTR_get_letter_on, (const byte*)"\x4c\xdb\x0d" "get_letter_on")
QDEF(MP_QSTR_get_letter_pos, (const byte*)"\x41\xbd\x0e" "get_letter_pos")
QDEF(MP_QSTR_get_line_count, (const byte*)"\x3e\x24\x0e" "get_line_count")
QDEF(MP_QSTR_get_long_mode, (const byte*)"\xba\x06\x0d" "get_long_mode")
QDEF(MP_QSTR_get_map_array, (const byte*)"\xb6\x3f\x0d" "get_map_array")
QDEF(MP_QSTR_get_margin, (const byte*)"\x12\xec\x0a" "get_margin")
QDEF(MP_QSTR_get_max_length, (const byte*)"\xdb\xa8\x0e" "get_max_length")
QDEF(MP_QSTR_get_max_value, (const byte*)"\x0c\xdb\x0d" "get_max_value")
QDEF(MP_QSTR_get_min_value, (const byte*)"\x92\xd1\x0d" "get_min_value")
QDEF(MP_QSTR_get_mode, (const byte*)"\xaf\xb5\x08" "get_mode")
QDEF(MP_QSTR_get_month_names, (const byte*)"\x17\xb3\x0f" "get_month_names")
QDEF(MP_QSTR_get_needle_count, (const byte*)"\x53\xa5\x10" "get_needle_count")
QDEF(MP_QSTR_get_next_btn, (const byte*)"\x4c\x12\x0c" "get_next_btn")
QDEF(MP_QSTR_get_offset_x, (const byte*)"\xc6\x59\x0c" "get_offset_x")
QDEF(MP_QSTR_get_offset_y, (const byte*)"\xc7\x59\x0c" "get_offset_y")
QDEF(MP_QSTR_get_one_line, (const byte*)"\xf9\x9a\x0c" "get_one_line")
QDEF(MP_QSTR_get_one_toggle, (const byte*)"\xc5\x4a\x0e" "get_one_toggle")
QDEF(MP_QSTR_get_opa_scale, (const byte*)"\x55\x86\x0d" "get_opa_scale")
QDEF(MP_QSTR_get_opa_scale_enable, (const byte*)"\xab\x24\x14" "get_opa_scale_enable")
QDEF(MP_QSTR_get_options, (const byte*)"\x9c\xba\x0b" "get_options")
QDEF(MP_QSTR_get_parent, (const byte*)"\x50\x65\x0a" "get_parent")
QDEF(MP_QSTR_get_parent_event, (const byte*)"\x83\xe6\x10" "get_parent_event")
QDEF(MP_QSTR_get_placeholder_text, (const byte*)"\x8d\x4a\x14" "get_placeholder_text")
QDEF(MP_QSTR_get_point_cnt, (const byte*)"\x86\x74\x0d" "get_point_cnt")
QDEF(MP_QSTR_get_pressed_btn, (const byte*)"\xed\x24\x0f" "get_pressed_btn")
QDEF(MP_QSTR_get_pressed_date, (const byte*)"\x61\xce\x10" "get_pressed_date")
QDEF(MP_QSTR_get_prev_btn, (const byte*)"\x3a\xa0\x0c" "get_prev_btn")
QDEF(MP_QSTR_get_preview, (const byte*)"\x06\xc2\x0b" "get_preview")
QDEF(MP_QSTR_get_protect, (const byte*)"\x07\x38\x0b" "get_protect")
QDEF(MP_QSTR_get_pwd_mode, (const byte*)"\x53\xc1\x0c" "get_pwd_mode")
QDEF(MP_QSTR_get_pwd_show_time, (const byte*)"\x39\x02\x11" "get_pwd_show_time")
QDEF(MP_QSTR_get_px, (const byte*)"\xc4\x42\x06" "get_px")
QDEF(MP_QSTR_get_raw_size, (const byte*)"\x72\xe7\x0c" "get_raw_size")
QDEF(MP_QSTR_get_recolor, (const byte*)"\x86\x4d\x0b" "get_recolor")
QDEF(MP_QSTR_get_row_cnt, (const byte*)"\x40\x72\x0b" "get_row_cnt")
QDEF(MP_QSTR_get_saturation, (const byte*)"\x10\x00\x0e" "get_saturation")
QDEF(MP_QSTR_get_sb_mode, (const byte*)"\x21\x86\x0b" "get_sb_mode")
QDEF(MP_QSTR_get_scale_angle, (const byte*)"\x8a\xf3\x0f" "get_scale_angle")
QDEF(MP_QSTR_get_screen, (const byte*)"\xc0\xc7\x0a" "get_screen")
QDEF(MP_QSTR_get_scrl, (const byte*)"\x22\x04\x08" "get_scrl")
QDEF(MP_QSTR_get_scrl_fit_bottom, (const byte*)"\x36\xdd\x13" "get_scrl_fit_bottom")
QDEF(MP_QSTR_get_scrl_fit_left, (const byte*)"\x82\x8c\x11" "get_scrl_fit_left")
QDEF(MP_QSTR_get_scrl_fit_right, (const byte*)"\xb9\xc4\x12" "get_scrl_fit_right")
QDEF(MP_QSTR_get_scrl_fit_top, (const byte*)"\xf2\xa3\x10" "get_scrl_fit_top")
QDEF(MP_QSTR_get_scrl_height, (const byte*)"\x02\x11\x0f" "get_scrl_height")
QDEF(MP_QSTR_get_scrl_layout, (const byte*)"\xe7\xeb\x0f" "get_scrl_layout")
QDEF(MP_QSTR_get_scrl_width, (const byte*)"\x1b\x47\x0e" "get_scrl_width")
QDEF(MP_QSTR_get_scroll_propagation, (const byte*)"\xf8\xe2\x16" "get_scroll_propagation")
QDEF(MP_QSTR_get_selected, (const byte*)"\xa5\xee\x0c" "get_selected")
QDEF(MP_QSTR_get_selected_str, (const byte*)"\xaf\x52\x10" "get_selected_str")
QDEF(MP_QSTR_get_series_darking, (const byte*)"\x94\x1f\x12" "get_series_darking")
QDEF(MP_QSTR_get_series_opa, (const byte*)"\x16\xff\x0e" "get_series_opa")
QDEF(MP_QSTR_get_series_width, (const byte*)"\xae\xa8\x10" "get_series_width")
QDEF(MP_QSTR_get_showed_date, (const byte*)"\xe5\x96\x0f" "get_showed_date")
QDEF(MP_QSTR_get_signal_cb, (const byte*)"\x0c\xd4\x0d" "get_signal_cb")
QDEF(MP_QSTR_get_single_mode, (const byte*)"\x4a\x17\x0f" "get_single_mode")
QDEF(MP_QSTR_get_size, (const byte*)"\xa9\xfb\x08" "get_size")
QDEF(MP_QSTR_get_sliding, (const byte*)"\xfe\xf2\x0b" "get_sliding")
QDEF(MP_QSTR_get_spin_time, (const byte*)"\xa2\x60\x0d" "get_spin_time")
QDEF(MP_QSTR_get_src, (const byte*)"\x6e\xb1\x07" "get_src")
QDEF(MP_QSTR_get_state, (const byte*)"\x3b\x79\x09" "get_state")
QDEF(MP_QSTR_get_stay_open, (const byte*)"\x78\xdb\x0d" "get_stay_open")
QDEF(MP_QSTR_get_style, (const byte*)"\x3b\x9a\x09" "get_style")
QDEF(MP_QSTR_get_sym, (const byte*)"\x4b\xb0\x07" "get_sym")
QDEF(MP_QSTR_get_ta, (const byte*)"\x59\x42\x06" "get_ta")
QDEF(MP_QSTR_get_tab, (const byte*)"\x1b\x8d\x07" "get_tab")
QDEF(MP_QSTR_get_tab_act, (const byte*)"\xb2\x6d\x0b" "get_tab_act")
QDEF(MP_QSTR_get_tab_count, (const byte*)"\xe7\x24\x0d" "get_tab_count")
QDEF(MP_QSTR_get_text, (const byte*)"\x51\x3e\x08" "get_text")
QDEF(MP_QSTR_get_text_sel_en, (const byte*)"\x80\xd5\x0f" "get_text_sel_en")
QDEF(MP_QSTR_get_text_sel_end, (const byte*)"\xe4\x85\x10" "get_text_sel_end")
QDEF(MP_QSTR_get_text_sel_start, (const byte*)"\x6b\x9e\x12" "get_text_sel_start")
QDEF(MP_QSTR_get_title, (const byte*)"\x8c\xa5\x09" "get_title")
QDEF(MP_QSTR_get_today_date, (const byte*)"\x80\x0a\x0e" "get_today_date")
QDEF(MP_QSTR_get_toggle, (const byte*)"\xbe\xed\x0a" "get_toggle")
QDEF(MP_QSTR_get_top, (const byte*)"\x47\x8d\x07" "get_top")
QDEF(MP_QSTR_get_type, (const byte*)"\x54\xcc\x08" "get_type")
QDEF(MP_QSTR_get_user_data, (const byte*)"\x72\x35\x0d" "get_user_data")
QDEF(MP_QSTR_get_user_data_ptr, (const byte*)"\x7b\xdf\x11" "get_user_data_ptr")
QDEF(MP_QSTR_get_value, (const byte*)"\xa7\x17\x09" "get_value")
QDEF(MP_QSTR_get_width, (const byte*)"\xca\x58\x09" "get_width")
QDEF(MP_QSTR_get_width_fit, (const byte*)"\xae\x21\x0d" "get_width_fit")
QDEF(MP_QSTR_get_x, (const byte*)"\x34\xdb\x05" "get_x")
QDEF(MP_QSTR_get_y, (const byte*)"\x35\xdb\x05" "get_y")
QDEF(MP_QSTR_get_y_invert, (const byte*)"\xf8\x7d\x0c" "get_y_invert")
QDEF(MP_QSTR_getaddrinfo, (const byte*)"\x6e\x18\x0b" "getaddrinfo")
QDEF(MP_QSTR_getcwd, (const byte*)"\x03\xd0\x06" "getcwd")
QDEF(MP_QSTR_getrandbits, (const byte*)"\x66\x7d\x0b" "getrandbits")
QDEF(MP_QSTR_getter, (const byte*)"\x90\xb2\x06" "getter")
QDEF(MP_QSTR_getvalue, (const byte*)"\x78\xac\x08" "getvalue")
QDEF(MP_QSTR_glass, (const byte*)"\xaf\x91\x05" "glass")
QDEF(MP_QSTR_glue_obj, (const byte*)"\xc6\x52\x08" "glue_obj")
QDEF(MP_QSTR_gpio, (const byte*)"\x54\xd8\x04" "gpio")
QDEF(MP_QSTR_gpu_blend_cb, (const byte*)"\xc7\x93\x0c" "gpu_blend_cb")
QDEF(MP_QSTR_gpu_fill_cb, (const byte*)"\x69\x84\x0b" "gpu_fill_cb")
QDEF(MP_QSTR_grad_color, (const byte*)"\x97\xcd\x0a" "grad_color")
QDEF(MP_QSTR_green, (const byte*)"\xbe\x98\x05" "green")
QDEF(MP_QSTR_group, (const byte*)"\xba\xb0\x05" "group")
QDEF(MP_QSTR_group_add_obj, (const byte*)"\x7c\x1e\x0d" "group_add_obj")
QDEF(MP_QSTR_group_create, (const byte*)"\x61\xf0\x0c" "group_create")
QDEF(MP_QSTR_group_del, (const byte*)"\xc8\x44\x09" "group_del")
QDEF(MP_QSTR_group_focus_freeze, (const byte*)"\xfd\xac\x12" "group_focus_freeze")
QDEF(MP_QSTR_group_focus_next, (const byte*)"\x51\x5d\x10" "group_focus_next")
QDEF(MP_QSTR_group_focus_obj, (const byte*)"\xf1\xc8\x0f" "group_focus_obj")
QDEF(MP_QSTR_group_focus_prev, (const byte*)"\xe7\x9f\x10" "group_focus_prev")
QDEF(MP_QSTR_group_get_click_focus, (const byte*)"\xf1\xe7\x15" "group_get_click_focus")
QDEF(MP_QSTR_group_get_editing, (const byte*)"\x90\x3e\x11" "group_get_editing")
QDEF(MP_QSTR_group_get_focus_cb, (const byte*)"\x7e\x05\x12" "group_get_focus_cb")
QDEF(MP_QSTR_group_get_focused, (const byte*)"\xa1\xd2\x11" "group_get_focused")
QDEF(MP_QSTR_group_get_style_mod_cb, (const byte*)"\xdc\xc6\x16" "group_get_style_mod_cb")
QDEF(MP_QSTR_group_get_style_mod_edit_cb, (const byte*)"\xff\x70\x1b" "group_get_style_mod_edit_cb")
QDEF(MP_QSTR_group_get_user_data, (const byte*)"\x52\xa3\x13" "group_get_user_data")
QDEF(MP_QSTR_group_get_wrap, (const byte*)"\xf8\xbd\x0e" "group_get_wrap")
QDEF(MP_QSTR_group_init, (const byte*)"\xbf\xc7\x0a" "group_init")
QDEF(MP_QSTR_group_mod_style, (const byte*)"\x0b\x6c\x0f" "group_mod_style")
QDEF(MP_QSTR_group_remove_all_objs, (const byte*)"\x96\xa4\x15" "group_remove_all_objs")
QDEF(MP_QSTR_group_remove_obj, (const byte*)"\x1b\xe8\x10" "group_remove_obj")
QDEF(MP_QSTR_group_report_style_mod, (const byte*)"\x9a\x2e\x16" "group_report_style_mod")
QDEF(MP_QSTR_group_send_data, (const byte*)"\x36\x0b\x0f" "group_send_data")
QDEF(MP_QSTR_group_set_click_focus, (const byte*)"\xe5\x20\x15" "group_set_click_focus")
QDEF(MP_QSTR_group_set_editing, (const byte*)"\x84\xb2\x11" "group_set_editing")
QDEF(MP_QSTR_group_set_focus_cb, (const byte*)"\xea\xfa\x12" "group_set_focus_cb")
QDEF(MP_QSTR_group_set_refocus_policy, (const byte*)"\xfc\xe5\x18" "group_set_refocus_policy")
QDEF(MP_QSTR_group_set_style_mod_cb, (const byte*)"\x48\x58\x16" "group_set_style_mod_cb")
QDEF(MP_QSTR_group_set_style_mod_edit_cb, (const byte*)"\xeb\xab\x1b" "group_set_style_mod_edit_cb")
QDEF(MP_QSTR_group_set_wrap, (const byte*)"\x6c\x55\x0e" "group_set_wrap")
QDEF(MP_QSTR_group_t, (const byte*)"\x31\xbc\x07" "group_t")
QDEF(MP_QSTR_h, (const byte*)"\xcd\xb5\x01" "h")
QDEF(MP_QSTR_handle_get_type_signal, (const byte*)"\x60\x95\x16" "handle_get_type_signal")
QDEF(MP_QSTR_handler, (const byte*)"\xdd\x5d\x07" "handler")
QDEF(MP_QSTR_hard, (const byte*)"\xda\x70\x04" "hard")
QDEF(MP_QSTR_hard_reset, (const byte*)"\xd0\x51\x0a" "hard_reset")
QDEF(MP_QSTR_has_palette_alpha, (const byte*)"\xf6\xe1\x11" "has_palette_alpha")
QDEF(MP_QSTR_has_run, (const byte*)"\x49\x88\x07" "has_run")
QDEF(MP_QSTR_have_cdc, (const byte*)"\x84\x08\x08" "have_cdc")
QDEF(MP_QSTR_head, (const byte*)"\xed\x5d\x04" "head")
QDEF(MP_QSTR_header, (const byte*)"\x9a\x98\x06" "header")
QDEF(MP_QSTR_header_pr, (const byte*)"\x87\xa6\x09" "header_pr")
QDEF(MP_QSTR_heap_lock, (const byte*)"\xad\x8c\x09" "heap_lock")
QDEF(MP_QSTR_heap_unlock, (const byte*)"\x56\x2d\x0b" "heap_unlock")
QDEF(MP_QSTR_heapify, (const byte*)"\xaf\x2d\x07" "heapify")
QDEF(MP_QSTR_heappop, (const byte*)"\xd6\x27\x07" "heappop")
QDEF(MP_QSTR_heappush, (const byte*)"\x87\x6b\x08" "heappush")
QDEF(MP_QSTR_help, (const byte*)"\x94\x5c\x04" "help")
QDEF(MP_QSTR_hex, (const byte*)"\x70\x50\x03" "hex")
QDEF(MP_QSTR_hexlify, (const byte*)"\x2a\x7f\x07" "hexlify")
QDEF(MP_QSTR_hid, (const byte*)"\xe0\x4f\x03" "hid")
QDEF(MP_QSTR_hid_keyboard, (const byte*)"\x92\xb1\x0c" "hid_keyboard")
QDEF(MP_QSTR_hid_mouse, (const byte*)"\x3e\x1e\x09" "hid_mouse")
QDEF(MP_QSTR_high, (const byte*)"\x2b\x4c\x04" "high")
QDEF(MP_QSTR_highlighted_days, (const byte*)"\xc4\x5c\x10" "highlighted_days")
QDEF(MP_QSTR_hint, (const byte*)"\x5e\x4d\x04" "hint")
QDEF(MP_QSTR_hline, (const byte*)"\x83\x3c\x05" "hline")
QDEF(MP_QSTR_hor_res, (const byte*)"\xcb\xa1\x07" "hor_res")
QDEF(MP_QSTR_hour, (const byte*)"\x65\x36\x04" "hour")
QDEF(MP_QSTR_iccp_defined, (const byte*)"\xe2\x2f\x0c" "iccp_defined")
QDEF(MP_QSTR_iccp_name, (const byte*)"\x64\x36\x09" "iccp_name")
QDEF(MP_QSTR_iccp_profile, (const byte*)"\x48\x81\x0c" "iccp_profile")
QDEF(MP_QSTR_iccp_profile_size, (const byte*)"\x32\x9a\x11" "iccp_profile_size")
QDEF(MP_QSTR_idle, (const byte*)"\xa1\xdc\x04" "idle")
QDEF(MP_QSTR_ignore_adler32, (const byte*)"\x7d\x40\x0e" "ignore_adler32")
QDEF(MP_QSTR_ignore_crc, (const byte*)"\x70\x7c\x0a" "ignore_crc")
QDEF(MP_QSTR_ignore_critical, (const byte*)"\x89\x7f\x0f" "ignore_critical")
QDEF(MP_QSTR_ignore_end, (const byte*)"\x6d\xa4\x0a" "ignore_end")
QDEF(MP_QSTR_ignore_nlen, (const byte*)"\xab\x93\x0b" "ignore_nlen")
QDEF(MP_QSTR_ilistdir, (const byte*)"\x71\x6a\x08" "ilistdir")
QDEF(MP_QSTR_imag, (const byte*)"\x47\xb7\x04" "imag")
QDEF(MP_QSTR_image, (const byte*)"\x42\xa0\x05" "image")
QDEF(MP_QSTR_img, (const byte*)"\x26\x53\x03" "img")
QDEF(MP_QSTR_img_cache_entry_t, (const byte*)"\x15\xcb\x11" "img_cache_entry_t")
QDEF(MP_QSTR_img_data, (const byte*)"\xa9\x06\x08" "img_data")
QDEF(MP_QSTR_img_decoder_dsc_t, (const byte*)"\xe7\xc0\x11" "img_decoder_dsc_t")
QDEF(MP_QSTR_img_decoder_t, (const byte*)"\x4c\x9b\x0d" "img_decoder_t")
QDEF(MP_QSTR_img_dsc_t, (const byte*)"\xc6\x6b\x09" "img_dsc_t")
QDEF(MP_QSTR_img_header_t, (const byte*)"\xad\x4d\x0c" "img_header_t")
QDEF(MP_QSTR_imgbtn, (const byte*)"\x1e\xb6\x06" "imgbtn")
QDEF(MP_QSTR_implementation, (const byte*)"\x17\x2d\x0e" "implementation")
QDEF(MP_QSTR_ina, (const byte*)"\x03\x53\x03" "ina")
QDEF(MP_QSTR_inactive_days, (const byte*)"\x3e\x45\x0d" "inactive_days")
QDEF(MP_QSTR_increment, (const byte*)"\xe4\xf1\x09" "increment")
QDEF(MP_QSTR_indev, (const byte*)"\x75\x28\x05" "indev")
QDEF(MP_QSTR_indev_data_t, (const byte*)"\x11\xb8\x0c" "indev_data_t")
QDEF(MP_QSTR_indev_drv_init, (const byte*)"\x2f\xa7\x0e" "indev_drv_init")
QDEF(MP_QSTR_indev_drv_register, (const byte*)"\xdc\x64\x12" "indev_drv_register")
QDEF(MP_QSTR_indev_drv_t, (const byte*)"\xa1\x45\x0b" "indev_drv_t")
QDEF(MP_QSTR_indev_drv_update, (const byte*)"\xc4\x84\x10" "indev_drv_update")
QDEF(MP_QSTR_indev_enable, (const byte*)"\x4b\x2d\x0c" "indev_enable")
QDEF(MP_QSTR_indev_get_act, (const byte*)"\xf5\x7c\x0d" "indev_get_act")
QDEF(MP_QSTR_indev_get_key, (const byte*)"\x34\x86\x0d" "indev_get_key")
QDEF(MP_QSTR_indev_get_next, (const byte*)"\x04\xe0\x0e" "indev_get_next")
QDEF(MP_QSTR_indev_get_obj_act, (const byte*)"\xed\x7d\x11" "indev_get_obj_act")
QDEF(MP_QSTR_indev_get_point, (const byte*)"\xef\xfb\x0f" "indev_get_point")
QDEF(MP_QSTR_indev_get_read_task, (const byte*)"\xa3\x9f\x13" "indev_get_read_task")
QDEF(MP_QSTR_indev_get_type, (const byte*)"\xdb\x6c\x0e" "indev_get_type")
QDEF(MP_QSTR_indev_get_vect, (const byte*)"\xa7\x42\x0e" "indev_get_vect")
QDEF(MP_QSTR_indev_init, (const byte*)"\x50\x37\x0a" "indev_init")
QDEF(MP_QSTR_indev_is_dragging, (const byte*)"\x38\xaa\x11" "indev_is_dragging")
QDEF(MP_QSTR_indev_proc_t, (const byte*)"\x6f\x92\x0c" "indev_proc_t")
QDEF(MP_QSTR_indev_read, (const byte*)"\xb8\x9e\x0a" "indev_read")
QDEF(MP_QSTR_indev_read_task, (const byte*)"\x8a\xaf\x0f" "indev_read_task")
QDEF(MP_QSTR_indev_reset, (const byte*)"\xbf\x4a\x0b" "indev_reset")
QDEF(MP_QSTR_indev_reset_long_press, (const byte*)"\xb2\xf6\x16" "indev_reset_long_press")
QDEF(MP_QSTR_indev_set_button_points, (const byte*)"\x21\x9f\x17" "indev_set_button_points")
QDEF(MP_QSTR_indev_set_cursor, (const byte*)"\x1d\x8e\x10" "indev_set_cursor")
QDEF(MP_QSTR_indev_set_group, (const byte*)"\x28\x26\x0f" "indev_set_group")
QDEF(MP_QSTR_indev_t, (const byte*)"\xfe\x20\x07" "indev_t")
QDEF(MP_QSTR_indev_wait_release, (const byte*)"\xf7\x54\x12" "indev_wait_release")
QDEF(MP_QSTR_indic, (const byte*)"\xec\x29\x05" "indic")
QDEF(MP_QSTR_inflate, (const byte*)"\x18\x7d\x07" "inflate")
QDEF(MP_QSTR_info, (const byte*)"\xeb\xb3\x04" "info")
QDEF(MP_QSTR_info_cb, (const byte*)"\xb5\xd2\x07" "info_cb")
QDEF(MP_QSTR_info_cleanup, (const byte*)"\xf4\x90\x0c" "info_cleanup")
QDEF(MP_QSTR_info_copy, (const byte*)"\xb1\x62\x09" "info_copy")
QDEF(MP_QSTR_info_init, (const byte*)"\x0e\x99\x09" "info_init")
QDEF(MP_QSTR_info_png, (const byte*)"\x2d\xd1\x08" "info_png")
QDEF(MP_QSTR_info_raw, (const byte*)"\xd0\xe9\x08" "info_raw")
QDEF(MP_QSTR_init, (const byte*)"\x1f\xb4\x04" "init")
QDEF(MP_QSTR_init_points, (const byte*)"\x5f\xad\x0b" "init_points")
QDEF(MP_QSTR_inner, (const byte*)"\x7b\x52\x05" "inner")
QDEF(MP_QSTR_input, (const byte*)"\x73\x5a\x05" "input")
QDEF(MP_QSTR_ins_text, (const byte*)"\xf3\x83\x08" "ins_text")
QDEF(MP_QSTR_inspect, (const byte*)"\xb3\xba\x07" "inspect")
QDEF(MP_QSTR_inspect_chunk, (const byte*)"\x77\xd7\x0d" "inspect_chunk")
QDEF(MP_QSTR_int_val, (const byte*)"\xf2\x9e\x07" "int_val")
QDEF(MP_QSTR_intense, (const byte*)"\x4b\x8a\x07" "intense")
QDEF(MP_QSTR_intensity, (const byte*)"\xca\x3d\x09" "intensity")
QDEF(MP_QSTR_interlace_method, (const byte*)"\x0a\xca\x10" "interlace_method")
QDEF(MP_QSTR_intersection, (const byte*)"\x28\x2a\x0c" "intersection")
QDEF(MP_QSTR_intersection_update, (const byte*)"\x06\xdd\x13" "intersection_update")
QDEF(MP_QSTR_inv_area, (const byte*)"\x5c\x6b\x08" "inv_area")
QDEF(MP_QSTR_inv_area_joined, (const byte*)"\x40\xb7\x0f" "inv_area_joined")
QDEF(MP_QSTR_inv_areas, (const byte*)"\xaf\xd6\x09" "inv_areas")
QDEF(MP_QSTR_inv_p, (const byte*)"\x5b\x6f\x05" "inv_p")
QDEF(MP_QSTR_invalidate, (const byte*)"\x64\x00\x0a" "invalidate")
QDEF(MP_QSTR_invert, (const byte*)"\xb7\x00\x06" "invert")
QDEF(MP_QSTR_ioctl, (const byte*)"\x78\xc2\x05" "ioctl")
QDEF(MP_QSTR_ipoll, (const byte*)"\x53\x5d\x05" "ipoll")
QDEF(MP_QSTR_irq, (const byte*)"\x8f\x56\x03" "irq")
QDEF(MP_QSTR_is_alpha_type, (const byte*)"\xf3\xda\x0d" "is_alpha_type")
QDEF(MP_QSTR_is_char_under_pos, (const byte*)"\x9c\xec\x11" "is_char_under_pos")
QDEF(MP_QSTR_is_checked, (const byte*)"\xa7\xcd\x0a" "is_checked")
QDEF(MP_QSTR_is_dragged, (const byte*)"\x76\x89\x0a" "is_dragged")
QDEF(MP_QSTR_is_focused, (const byte*)"\x8d\x3c\x0a" "is_focused")
QDEF(MP_QSTR_is_greyscale_type, (const byte*)"\xd6\xb9\x11" "is_greyscale_type")
QDEF(MP_QSTR_is_inactive, (const byte*)"\x0b\x01\x0b" "is_inactive")
QDEF(MP_QSTR_is_palette_type, (const byte*)"\x1a\x91\x0f" "is_palette_type")
QDEF(MP_QSTR_is_protected, (const byte*)"\xaa\x70\x0c" "is_protected")
QDEF(MP_QSTR_is_ready, (const byte*)"\x0b\x00\x08" "is_ready")
QDEF(MP_QSTR_isclose, (const byte*)"\x49\x4e\x07" "isclose")
QDEF(MP_QSTR_isconnected, (const byte*)"\x80\x99\x0b" "isconnected")
QDEF(MP_QSTR_isdisjoint, (const byte*)"\xf7\x68\x0a" "isdisjoint")
QDEF(MP_QSTR_isenabled, (const byte*)"\x9a\xe5\x09" "isenabled")
QDEF(MP_QSTR_isfinite, (const byte*)"\xa6\xab\x08" "isfinite")
QDEF(MP_QSTR_isinf, (const byte*)"\x3e\x11\x05" "isinf")
QDEF(MP_QSTR_isnan, (const byte*)"\x9e\x03\x05" "isnan")
QDEF(MP_QSTR_issubset, (const byte*)"\xb9\xc1\x08" "issubset")
QDEF(MP_QSTR_issuperset, (const byte*)"\xfc\xec\x0a" "issuperset")
QDEF(MP_QSTR_iterable, (const byte*)"\x25\x92\x08" "iterable")
QDEF(MP_QSTR_iterator, (const byte*)"\x47\xbe\x08" "iterator")
QDEF(MP_QSTR_itext_keys, (const byte*)"\x2a\xe1\x0a" "itext_keys")
QDEF(MP_QSTR_itext_langtags, (const byte*)"\xcb\x94\x0e" "itext_langtags")
QDEF(MP_QSTR_itext_num, (const byte*)"\xf8\x90\x09" "itext_num")
QDEF(MP_QSTR_itext_strings, (const byte*)"\x48\xa6\x0d" "itext_strings")
QDEF(MP_QSTR_itext_transkeys, (const byte*)"\x90\xdc\x0f" "itext_transkeys")
QDEF(MP_QSTR_kb, (const byte*)"\xec\x6f\x02" "kb")
QDEF(MP_QSTR_kbd_intr, (const byte*)"\xf6\x13\x08" "kbd_intr")
QDEF(MP_QSTR_keepends, (const byte*)"\x62\x8b\x08" "keepends")
QDEF(MP_QSTR_key_b, (const byte*)"\xaf\x78\x05" "key_b")
QDEF(MP_QSTR_key_defined, (const byte*)"\xcc\x43\x0b" "key_defined")
QDEF(MP_QSTR_key_g, (const byte*)"\xaa\x78\x05" "key_g")
QDEF(MP_QSTR_key_r, (const byte*)"\xbf\x78\x05" "key_r")
QDEF(MP_QSTR_keypad, (const byte*)"\xe7\xd7\x06" "keypad")
QDEF(MP_QSTR_knob, (const byte*)"\x0d\xdd\x04" "knob")
QDEF(MP_QSTR_knob_off, (const byte*)"\x9d\x1b\x08" "knob_off")
QDEF(MP_QSTR_knob_on, (const byte*)"\x93\x08\x07" "knob_on")
QDEF(MP_QSTR_label, (const byte*)"\x43\xe7\x05" "label")
QDEF(MP_QSTR_last_activity_time, (const byte*)"\xf7\xdd\x12" "last_activity_time")
QDEF(MP_QSTR_last_key, (const byte*)"\xc7\x96\x08" "last_key")
QDEF(MP_QSTR_last_obj, (const byte*)"\x77\xa7\x08" "last_obj")
QDEF(MP_QSTR_last_point, (const byte*)"\x1c\x93\x0a" "last_point")
QDEF(MP_QSTR_last_pressed, (const byte*)"\xf6\x26\x0c" "last_pressed")
QDEF(MP_QSTR_last_run, (const byte*)"\x99\x15\x08" "last_run")
QDEF(MP_QSTR_last_state, (const byte*)"\x27\xa9\x0a" "last_state")
QDEF(MP_QSTR_layer_sys, (const byte*)"\x20\x88\x09" "layer_sys")
QDEF(MP_QSTR_layer_top, (const byte*)"\xb2\x79\x09" "layer_top")
QDEF(MP_QSTR_ldexp, (const byte*)"\x40\x6f\x05" "ldexp")
QDEF(MP_QSTR_ldr, (const byte*)"\x5f\x40\x03" "ldr")
QDEF(MP_QSTR_ldrb, (const byte*)"\x5d\x4c\x04" "ldrb")
QDEF(MP_QSTR_ldrex, (const byte*)"\xe2\xd7\x05" "ldrex")
QDEF(MP_QSTR_ldrh, (const byte*)"\x57\x4c\x04" "ldrh")
QDEF(MP_QSTR_led, (const byte*)"\x68\x40\x03" "led")
QDEF(MP_QSTR_left, (const byte*)"\xde\x4d\x04" "left")
QDEF(MP_QSTR_letter, (const byte*)"\x7b\x4e\x06" "letter")
QDEF(MP_QSTR_letter_space, (const byte*)"\x80\x77\x0c" "letter_space")
QDEF(MP_QSTR_lgamma, (const byte*)"\xce\x6c\x06" "lgamma")
QDEF(MP_QSTR_life, (const byte*)"\xc3\x1b\x04" "life")
QDEF(MP_QSTR_light, (const byte*)"\xfb\x91\x05" "light")
QDEF(MP_QSTR_lightsleep, (const byte*)"\x54\xe7\x0a" "lightsleep")
QDEF(MP_QSTR_line, (const byte*)"\xcb\x1c\x04" "line")
QDEF(MP_QSTR_line_height, (const byte*)"\x8b\xdb\x0b" "line_height")
QDEF(MP_QSTR_line_space, (const byte*)"\xb0\xf0\x0a" "line_space")
QDEF(MP_QSTR_line_start, (const byte*)"\x54\xbd\x0a" "line_start")
QDEF(MP_QSTR_listdir, (const byte*)"\x98\xe3\x07" "listdir")
QDEF(MP_QSTR_listen, (const byte*)"\xcc\x0e\x06" "listen")
QDEF(MP_QSTR_ll_chg_list, (const byte*)"\xeb\xc1\x0b" "ll_chg_list")
QDEF(MP_QSTR_ll_clear, (const byte*)"\x23\x8c\x08" "ll_clear")
QDEF(MP_QSTR_ll_get_head, (const byte*)"\x9b\x9b\x0b" "ll_get_head")
QDEF(MP_QSTR_ll_get_len, (const byte*)"\x14\xa8\x0a" "ll_get_len")
QDEF(MP_QSTR_ll_get_next, (const byte*)"\x74\xb0\x0b" "ll_get_next")
QDEF(MP_QSTR_ll_get_prev, (const byte*)"\x42\xaa\x0b" "ll_get_prev")
QDEF(MP_QSTR_ll_get_tail, (const byte*)"\x03\x94\x0b" "ll_get_tail")
QDEF(MP_QSTR_ll_init, (const byte*)"\x60\xc7\x07" "ll_init")
QDEF(MP_QSTR_ll_ins_head, (const byte*)"\xf9\xd6\x0b" "ll_ins_head")
QDEF(MP_QSTR_ll_ins_prev, (const byte*)"\xa0\xd4\x0b" "ll_ins_prev")
QDEF(MP_QSTR_ll_ins_tail, (const byte*)"\x61\xcf\x0b" "ll_ins_tail")
QDEF(MP_QSTR_ll_is_empty, (const byte*)"\x6a\x32\x0b" "ll_is_empty")
QDEF(MP_QSTR_ll_move_before, (const byte*)"\xed\x09\x0e" "ll_move_before")
QDEF(MP_QSTR_ll_rem, (const byte*)"\x20\xfd\x06" "ll_rem")
QDEF(MP_QSTR_ll_t, (const byte*)"\xce\x2e\x04" "ll_t")
QDEF(MP_QSTR_lmeter, (const byte*)"\x82\x08\x06" "lmeter")
QDEF(MP_QSTR_load, (const byte*)"\x63\x24\x04" "load")
QDEF(MP_QSTR_loads, (const byte*)"\xb0\xb0\x05" "loads")
QDEF(MP_QSTR_localtime, (const byte*)"\x7d\x46\x09" "localtime")
QDEF(MP_QSTR_lodepng, (const byte*)"\x5e\xb9\x07" "lodepng")
QDEF(MP_QSTR_log, (const byte*)"\x21\x3f\x03" "log")
QDEF(MP_QSTR_log10, (const byte*)"\x40\x91\x05" "log10")
QDEF(MP_QSTR_log2, (const byte*)"\x73\x23\x04" "log2")
QDEF(MP_QSTR_log_add, (const byte*)"\x3f\x3e\x07" "log_add")
QDEF(MP_QSTR_log_register_print_cb, (const byte*)"\x67\xdf\x15" "log_register_print_cb")
QDEF(MP_QSTR_long_pr_sent, (const byte*)"\x81\xae\x0c" "long_pr_sent")
QDEF(MP_QSTR_long_press_rep_time, (const byte*)"\x45\xb2\x13" "long_press_rep_time")
QDEF(MP_QSTR_long_press_time, (const byte*)"\x7d\x93\x0f" "long_press_time")
QDEF(MP_QSTR_longpr_rep_timestamp, (const byte*)"\xc4\xb3\x14" "longpr_rep_timestamp")
QDEF(MP_QSTR_low, (const byte*)"\x31\x3f\x03" "low")
QDEF(MP_QSTR_lsl, (const byte*)"\xb6\x41\x03" "lsl")
QDEF(MP_QSTR_lsr, (const byte*)"\xa8\x41\x03" "lsr")
QDEF(MP_QSTR_lv_anim_t, (const byte*)"\x20\xc0\x09" "lv_anim_t")
QDEF(MP_QSTR_lv_anim_t_exec_cb, (const byte*)"\x1a\xd3\x11" "lv_anim_t_exec_cb")
QDEF(MP_QSTR_lv_anim_t_path_cb, (const byte*)"\x4c\x0e\x11" "lv_anim_t_path_cb")
QDEF(MP_QSTR_lv_anim_t_ready_cb, (const byte*)"\xea\x05\x12" "lv_anim_t_ready_cb")
QDEF(MP_QSTR_lv_area_t, (const byte*)"\xbc\xa2\x09" "lv_area_t")
QDEF(MP_QSTR_lv_calendar_date_t, (const byte*)"\xb2\xb7\x12" "lv_calendar_date_t")
QDEF(MP_QSTR_lv_chart_series_t, (const byte*)"\x03\x47\x11" "lv_chart_series_t")
QDEF(MP_QSTR_lv_color32_ch_t, (const byte*)"\x03\x9f\x0f" "lv_color32_ch_t")
QDEF(MP_QSTR_lv_color32_t, (const byte*)"\xb7\x9f\x0c" "lv_color32_t")
QDEF(MP_QSTR_lv_color_hsv_t, (const byte*)"\xa4\x6d\x0e" "lv_color_hsv_t")
QDEF(MP_QSTR_lv_disp_buf_t, (const byte*)"\xeb\x16\x0d" "lv_disp_buf_t")
QDEF(MP_QSTR_lv_disp_drv_t, (const byte*)"\x5a\xaa\x0d" "lv_disp_drv_t")
QDEF(MP_QSTR_lv_disp_drv_t_flush_cb, (const byte*)"\xbf\xc6\x16" "lv_disp_drv_t_flush_cb")
QDEF(MP_QSTR_lv_disp_drv_t_gpu_blend_cb, (const byte*)"\x87\x94\x1a" "lv_disp_drv_t_gpu_blend_cb")
QDEF(MP_QSTR_lv_disp_drv_t_gpu_fill_cb, (const byte*)"\xa9\xdb\x19" "lv_disp_drv_t_gpu_fill_cb")
QDEF(MP_QSTR_lv_disp_drv_t_monitor_cb, (const byte*)"\xf7\x2e\x18" "lv_disp_drv_t_monitor_cb")
QDEF(MP_QSTR_lv_disp_drv_t_rounder_cb, (const byte*)"\xee\xfc\x18" "lv_disp_drv_t_rounder_cb")
QDEF(MP_QSTR_lv_disp_drv_t_set_px_cb, (const byte*)"\xae\x39\x17" "lv_disp_drv_t_set_px_cb")
QDEF(MP_QSTR_lv_disp_t, (const byte*)"\x45\xbf\x09" "lv_disp_t")
QDEF(MP_QSTR_lv_draw_label_hint_t, (const byte*)"\x76\x15\x14" "lv_draw_label_hint_t")
QDEF(MP_QSTR_lv_draw_label_txt_sel_t, (const byte*)"\xb0\x9c\x17" "lv_draw_label_txt_sel_t")
QDEF(MP_QSTR_lv_font_glyph_dsc_t, (const byte*)"\xc6\xcd\x13" "lv_font_glyph_dsc_t")
QDEF(MP_QSTR_lv_font_t, (const byte*)"\xb8\x19\x09" "lv_font_t")
QDEF(MP_QSTR_lv_font_t_get_glyph_bitmap, (const byte*)"\xf8\x0b\x1a" "lv_font_t_get_glyph_bitmap")
QDEF(MP_QSTR_lv_font_t_get_glyph_dsc, (const byte*)"\x6f\xe5\x17" "lv_font_t_get_glyph_dsc")
QDEF(MP_QSTR_lv_fs_dir_t, (const byte*)"\x1e\xbe\x0b" "lv_fs_dir_t")
QDEF(MP_QSTR_lv_fs_drv_t, (const byte*)"\xa1\xac\x0b" "lv_fs_drv_t")
QDEF(MP_QSTR_lv_fs_drv_t_close_cb, (const byte*)"\xf6\x38\x14" "lv_fs_drv_t_close_cb")
QDEF(MP_QSTR_lv_fs_drv_t_dir_close_cb, (const byte*)"\x16\x77\x18" "lv_fs_drv_t_dir_close_cb")
QDEF(MP_QSTR_lv_fs_drv_t_dir_open_cb, (const byte*)"\x94\xf1\x17" "lv_fs_drv_t_dir_open_cb")
QDEF(MP_QSTR_lv_fs_drv_t_dir_read_cb, (const byte*)"\x72\x5e\x17" "lv_fs_drv_t_dir_read_cb")
QDEF(MP_QSTR_lv_fs_drv_t_free_space_cb, (const byte*)"\x0f\xc4\x19" "lv_fs_drv_t_free_space_cb")
QDEF(MP_QSTR_lv_fs_drv_t_open_cb, (const byte*)"\x34\x99\x13" "lv_fs_drv_t_open_cb")
QDEF(MP_QSTR_lv_fs_drv_t_read_cb, (const byte*)"\x92\x05\x13" "lv_fs_drv_t_read_cb")
QDEF(MP_QSTR_lv_fs_drv_t_ready_cb, (const byte*)"\x0b\xaa\x14" "lv_fs_drv_t_ready_cb")
QDEF(MP_QSTR_lv_fs_drv_t_remove_cb, (const byte*)"\xc6\x60\x15" "lv_fs_drv_t_remove_cb")
QDEF(MP_QSTR_lv_fs_drv_t_rename_cb, (const byte*)"\x50\x14\x15" "lv_fs_drv_t_rename_cb")
QDEF(MP_QSTR_lv_fs_drv_t_seek_cb, (const byte*)"\x78\x77\x13" "lv_fs_drv_t_seek_cb")
QDEF(MP_QSTR_lv_fs_drv_t_size_cb, (const byte*)"\x25\xa7\x13" "lv_fs_drv_t_size_cb")
QDEF(MP_QSTR_lv_fs_drv_t_tell_cb, (const byte*)"\xd1\x6c\x13" "lv_fs_drv_t_tell_cb")
QDEF(MP_QSTR_lv_fs_drv_t_trunc_cb, (const byte*)"\x5e\x62\x14" "lv_fs_drv_t_trunc_cb")
QDEF(MP_QSTR_lv_fs_drv_t_write_cb, (const byte*)"\x3d\xb8\x14" "lv_fs_drv_t_write_cb")
QDEF(MP_QSTR_lv_fs_file_t, (const byte*)"\xc7\x3a\x0c" "lv_fs_file_t")
QDEF(MP_QSTR_lv_group_t, (const byte*)"\xf4\xb2\x0a" "lv_group_t")
QDEF(MP_QSTR_lv_group_t_focus_cb, (const byte*)"\x39\x0b\x13" "lv_group_t_focus_cb")
QDEF(MP_QSTR_lv_group_t_style_mod_cb, (const byte*)"\x9b\x1a\x17" "lv_group_t_style_mod_cb")
QDEF(MP_QSTR_lv_group_t_style_mod_edit_cb, (const byte*)"\xd8\x6d\x1c" "lv_group_t_style_mod_edit_cb")
QDEF(MP_QSTR_lv_img_cache_entry_t, (const byte*)"\x90\xed\x14" "lv_img_cache_entry_t")
QDEF(MP_QSTR_lv_img_decoder_dsc_t, (const byte*)"\xa2\xb0\x14" "lv_img_decoder_dsc_t")
QDEF(MP_QSTR_lv_img_decoder_t, (const byte*)"\x49\x1d\x10" "lv_img_decoder_t")
QDEF(MP_QSTR_lv_img_decoder_t_close_cb, (const byte*)"\xde\x5c\x19" "lv_img_decoder_t_close_cb")
QDEF(MP_QSTR_lv_img_decoder_t_info_cb, (const byte*)"\x66\x29\x18" "lv_img_decoder_t_info_cb")
QDEF(MP_QSTR_lv_img_decoder_t_open_cb, (const byte*)"\xdc\x36\x18" "lv_img_decoder_t_open_cb")
QDEF(MP_QSTR_lv_img_decoder_t_read_line_cb, (const byte*)"\x8b\x4f\x1d" "lv_img_decoder_t_read_line_cb")
QDEF(MP_QSTR_lv_img_dsc_t, (const byte*)"\xc3\x8b\x0c" "lv_img_dsc_t")
QDEF(MP_QSTR_lv_img_header_t, (const byte*)"\x48\x82\x0f" "lv_img_header_t")
QDEF(MP_QSTR_lv_indev_data_t, (const byte*)"\x74\x63\x0f" "lv_indev_data_t")
QDEF(MP_QSTR_lv_indev_drv_t, (const byte*)"\x64\xb9\x0e" "lv_indev_drv_t")
QDEF(MP_QSTR_lv_indev_drv_t_feedback_cb, (const byte*)"\x8c\xa8\x1a" "lv_indev_drv_t_feedback_cb")
QDEF(MP_QSTR_lv_indev_drv_t_read_cb, (const byte*)"\xd7\x5b\x16" "lv_indev_drv_t_read_cb")
QDEF(MP_QSTR_lv_indev_proc_t, (const byte*)"\x0a\xf6\x0f" "lv_indev_proc_t")
QDEF(MP_QSTR_lv_indev_proc_types_keypad_t, (const byte*)"\xc3\x9e\x1c" "lv_indev_proc_types_keypad_t")
QDEF(MP_QSTR_lv_indev_proc_types_pointer_t, (const byte*)"\x5a\x4f\x1d" "lv_indev_proc_types_pointer_t")
QDEF(MP_QSTR_lv_indev_proc_types_t, (const byte*)"\xde\x9e\x15" "lv_indev_proc_types_t")
QDEF(MP_QSTR_lv_indev_t, (const byte*)"\x3b\xe4\x0a" "lv_indev_t")
QDEF(MP_QSTR_lv_ll_t, (const byte*)"\xab\xc3\x07" "lv_ll_t")
QDEF(MP_QSTR_lv_log_print_g_cb_t_print_cb, (const byte*)"\x57\xc0\x1c" "lv_log_print_g_cb_t_print_cb")
QDEF(MP_QSTR_lv_mem_monitor_t, (const byte*)"\xdd\x1f\x10" "lv_mem_monitor_t")
QDEF(MP_QSTR_lv_obj_t_design_cb, (const byte*)"\x5f\x57\x12" "lv_obj_t_design_cb")
QDEF(MP_QSTR_lv_obj_t_event_cb, (const byte*)"\xc1\xbc\x11" "lv_obj_t_event_cb")
QDEF(MP_QSTR_lv_obj_t_signal_cb, (const byte*)"\xb3\x01\x12" "lv_obj_t_signal_cb")
QDEF(MP_QSTR_lv_obj_type_t, (const byte*)"\xab\x69\x0d" "lv_obj_type_t")
QDEF(MP_QSTR_lv_point_t, (const byte*)"\x27\x96\x0a" "lv_point_t")
QDEF(MP_QSTR_lv_style_body_border_t, (const byte*)"\x80\xd0\x16" "lv_style_body_border_t")
QDEF(MP_QSTR_lv_style_body_padding_t, (const byte*)"\xdd\x12\x17" "lv_style_body_padding_t")
QDEF(MP_QSTR_lv_style_body_shadow_t, (const byte*)"\xca\x20\x16" "lv_style_body_shadow_t")
QDEF(MP_QSTR_lv_style_body_t, (const byte*)"\xb3\x89\x0f" "lv_style_body_t")
QDEF(MP_QSTR_lv_style_image_t, (const byte*)"\xc4\x37\x10" "lv_style_image_t")
QDEF(MP_QSTR_lv_style_line_t, (const byte*)"\xad\xb2\x0f" "lv_style_line_t")
QDEF(MP_QSTR_lv_style_t, (const byte*)"\x1c\xdc\x0a" "lv_style_t")
QDEF(MP_QSTR_lv_style_text_t, (const byte*)"\x7e\x24\x0f" "lv_style_text_t")
QDEF(MP_QSTR_lv_task_t, (const byte*)"\xc6\x6b\x09" "lv_task_t")
QDEF(MP_QSTR_lv_task_t_task_cb, (const byte*)"\x8a\x53\x11" "lv_task_t_task_cb")
QDEF(MP_QSTR_lv_theme_group_t, (const byte*)"\xda\xb9\x10" "lv_theme_group_t")
QDEF(MP_QSTR_lv_theme_group_t_style_mod_edit_xcb, (const byte*)"\xae\x77\x23" "lv_theme_group_t_style_mod_edit_xcb")
QDEF(MP_QSTR_lv_theme_group_t_style_mod_xcb, (const byte*)"\x0d\xaa\x1e" "lv_theme_group_t_style_mod_xcb")
QDEF(MP_QSTR_lv_theme_style_bar_t, (const byte*)"\x9c\xca\x14" "lv_theme_style_bar_t")
QDEF(MP_QSTR_lv_theme_style_btn_t, (const byte*)"\xf5\xd0\x14" "lv_theme_style_btn_t")
QDEF(MP_QSTR_lv_theme_style_btnm_btn_t, (const byte*)"\xdf\x60\x19" "lv_theme_style_btnm_btn_t")
QDEF(MP_QSTR_lv_theme_style_btnm_t, (const byte*)"\x18\xac\x15" "lv_theme_style_btnm_t")
QDEF(MP_QSTR_lv_theme_style_calendar_t, (const byte*)"\x1f\x58\x19" "lv_theme_style_calendar_t")
QDEF(MP_QSTR_lv_theme_style_cb_box_t, (const byte*)"\xc6\xcc\x17" "lv_theme_style_cb_box_t")
QDEF(MP_QSTR_lv_theme_style_cb_t, (const byte*)"\xec\xc2\x13" "lv_theme_style_cb_t")
QDEF(MP_QSTR_lv_theme_style_ddlist_t, (const byte*)"\x2f\xcf\x17" "lv_theme_style_ddlist_t")
QDEF(MP_QSTR_lv_theme_style_img_t, (const byte*)"\xce\xe7\x14" "lv_theme_style_img_t")
QDEF(MP_QSTR_lv_theme_style_imgbtn_t, (const byte*)"\x16\x6b\x17" "lv_theme_style_imgbtn_t")
QDEF(MP_QSTR_lv_theme_style_kb_btn_t, (const byte*)"\x63\x5f\x17" "lv_theme_style_kb_btn_t")
QDEF(MP_QSTR_lv_theme_style_kb_t, (const byte*)"\xe4\x23\x13" "lv_theme_style_kb_t")
QDEF(MP_QSTR_lv_theme_style_label_t, (const byte*)"\x6b\x7b\x16" "lv_theme_style_label_t")
QDEF(MP_QSTR_lv_theme_style_line_t, (const byte*)"\x43\xc1\x15" "lv_theme_style_line_t")
QDEF(MP_QSTR_lv_theme_style_list_btn_t, (const byte*)"\x28\xc6\x19" "lv_theme_style_list_btn_t")
QDEF(MP_QSTR_lv_theme_style_list_t, (const byte*)"\xaf\x59\x15" "lv_theme_style_list_t")
QDEF(MP_QSTR_lv_theme_style_mbox_btn_t, (const byte*)"\x12\xe3\x19" "lv_theme_style_mbox_btn_t")
QDEF(MP_QSTR_lv_theme_style_mbox_t, (const byte*)"\x55\x70\x15" "lv_theme_style_mbox_t")
QDEF(MP_QSTR_lv_theme_style_page_t, (const byte*)"\x3e\x41\x15" "lv_theme_style_page_t")
QDEF(MP_QSTR_lv_theme_style_roller_t, (const byte*)"\x27\x64\x17" "lv_theme_style_roller_t")
QDEF(MP_QSTR_lv_theme_style_slider_t, (const byte*)"\x68\xe3\x17" "lv_theme_style_slider_t")
QDEF(MP_QSTR_lv_theme_style_spinbox_t, (const byte*)"\x1c\x35\x18" "lv_theme_style_spinbox_t")
QDEF(MP_QSTR_lv_theme_style_sw_t, (const byte*)"\x69\x41\x13" "lv_theme_style_sw_t")
QDEF(MP_QSTR_lv_theme_style_t, (const byte*)"\xf2\xb5\x10" "lv_theme_style_t")
QDEF(MP_QSTR_lv_theme_style_ta_t, (const byte*)"\x18\xdc\x13" "lv_theme_style_ta_t")
QDEF(MP_QSTR_lv_theme_style_table_t, (const byte*)"\x93\x57\x16" "lv_theme_style_table_t")
QDEF(MP_QSTR_lv_theme_style_tabview_btn_t, (const byte*)"\xf0\xef\x1c" "lv_theme_style_tabview_btn_t")
QDEF(MP_QSTR_lv_theme_style_tabview_t, (const byte*)"\x77\x64\x18" "lv_theme_style_tabview_t")
QDEF(MP_QSTR_lv_theme_style_tileview_t, (const byte*)"\x34\xac\x19" "lv_theme_style_tileview_t")
QDEF(MP_QSTR_lv_theme_style_win_btn_t, (const byte*)"\x9a\x4b\x18" "lv_theme_style_win_btn_t")
QDEF(MP_QSTR_lv_theme_style_win_t, (const byte*)"\xdd\x16\x14" "lv_theme_style_win_t")
QDEF(MP_QSTR_lv_theme_t, (const byte*)"\x7a\x1e\x0a" "lv_theme_t")
QDEF(MP_QSTR_lvgl, (const byte*)"\x74\x85\x04" "lvgl")
QDEF(MP_QSTR_machine, (const byte*)"\x60\xab\x07" "machine")
QDEF(MP_QSTR_main_color, (const byte*)"\x8c\x22\x0a" "main_color")
QDEF(MP_QSTR_mapper, (const byte*)"\x5e\x05\x06" "mapper")
QDEF(MP_QSTR_match, (const byte*)"\x96\x22\x05" "match")
QDEF(MP_QSTR_math, (const byte*)"\x35\xbb\x04" "math")
QDEF(MP_QSTR_max, (const byte*)"\xb1\x43\x03" "max")
QDEF(MP_QSTR_maxsize, (const byte*)"\xd4\x70\x07" "maxsize")
QDEF(MP_QSTR_mbox, (const byte*)"\x5d\xb4\x04" "mbox")
QDEF(MP_QSTR_mem, (const byte*)"\x20\x44\x03" "mem")
QDEF(MP_QSTR_mem16, (const byte*)"\x07\xca\x05" "mem16")
QDEF(MP_QSTR_mem32, (const byte*)"\x41\xca\x05" "mem32")
QDEF(MP_QSTR_mem8, (const byte*)"\x18\xc8\x04" "mem8")
QDEF(MP_QSTR_mem_alloc, (const byte*)"\x52\x2b\x09" "mem_alloc")
QDEF(MP_QSTR_mem_defrag, (const byte*)"\x8c\x20\x0a" "mem_defrag")
QDEF(MP_QSTR_mem_free, (const byte*)"\xcb\x62\x08" "mem_free")
QDEF(MP_QSTR_mem_get_size, (const byte*)"\xd3\xf3\x0c" "mem_get_size")
QDEF(MP_QSTR_mem_info, (const byte*)"\xd1\xf1\x08" "mem_info")
QDEF(MP_QSTR_mem_init, (const byte*)"\x65\xf0\x08" "mem_init")
QDEF(MP_QSTR_mem_monitor, (const byte*)"\x93\x1d\x0b" "mem_monitor")
QDEF(MP_QSTR_mem_monitor_t, (const byte*)"\x58\xc5\x0d" "mem_monitor_t")
QDEF(MP_QSTR_mem_read, (const byte*)"\x8d\xeb\x08" "mem_read")
QDEF(MP_QSTR_mem_realloc, (const byte*)"\xa5\x85\x0b" "mem_realloc")
QDEF(MP_QSTR_mem_write, (const byte*)"\x62\x8c\x09" "mem_write")
QDEF(MP_QSTR_memaddr, (const byte*)"\x93\xe8\x07" "memaddr")
QDEF(MP_QSTR_memoryview, (const byte*)"\x69\x44\x0a" "memoryview")
QDEF(MP_QSTR_micros, (const byte*)"\xac\x88\x06" "micros")
QDEF(MP_QSTR_millis, (const byte*)"\x5b\x21\x06" "millis")
QDEF(MP_QSTR_min, (const byte*)"\xaf\x42\x03" "min")
QDEF(MP_QSTR_minute, (const byte*)"\x6b\xc2\x06" "minute")
QDEF(MP_QSTR_miso, (const byte*)"\x9d\x98\x04" "miso")
QDEF(MP_QSTR_mkdir, (const byte*)"\x9c\xb5\x05" "mkdir")
QDEF(MP_QSTR_mkfs, (const byte*)"\x76\xb0\x04" "mkfs")
QDEF(MP_QSTR_mktime, (const byte*)"\x96\x2b\x06" "mktime")
QDEF(MP_QSTR_mode, (const byte*)"\x26\xc0\x04" "mode")
QDEF(MP_QSTR_modf, (const byte*)"\x25\xc0\x04" "modf")
QDEF(MP_QSTR_modify, (const byte*)"\xf5\x66\x06" "modify")
QDEF(MP_QSTR_module, (const byte*)"\xbf\x99\x06" "module")
QDEF(MP_QSTR_modules, (const byte*)"\xec\xd1\x07" "modules")
QDEF(MP_QSTR_monitor_cb, (const byte*)"\x37\xcd\x0a" "monitor_cb")
QDEF(MP_QSTR_month, (const byte*)"\x75\xf1\x05" "month")
QDEF(MP_QSTR_mosi, (const byte*)"\x1d\xc2\x04" "mosi")
QDEF(MP_QSTR_mount, (const byte*)"\xa8\x0d\x05" "mount")
QDEF(MP_QSTR_mov, (const byte*)"\xf1\x43\x03" "mov")
QDEF(MP_QSTR_move_background, (const byte*)"\xc5\x9d\x0f" "move_background")
QDEF(MP_QSTR_move_foreground, (const byte*)"\xf0\x0e\x0f" "move_foreground")
QDEF(MP_QSTR_movt, (const byte*)"\x65\xc2\x04" "movt")
QDEF(MP_QSTR_movw, (const byte*)"\x66\xc2\x04" "movw")
QDEF(MP_QSTR_movwt, (const byte*)"\x52\x0f\x05" "movwt")
QDEF(MP_QSTR_mpy, (const byte*)"\xc1\x45\x03" "mpy")
QDEF(MP_QSTR_mrs, (const byte*)"\x89\x45\x03" "mrs")
QDEF(MP_QSTR_msc, (const byte*)"\x78\x46\x03" "msc")
QDEF(MP_QSTR_my_flush_cb, (const byte*)"\x74\x5c\x0b" "my_flush_cb")
QDEF(MP_QSTR_n_size, (const byte*)"\x51\xc6\x06" "n_size")
QDEF(MP_QSTR_name, (const byte*)"\xa2\x75\x04" "name")
QDEF(MP_QSTR_namedtuple, (const byte*)"\x1e\x16\x0a" "namedtuple")
QDEF(MP_QSTR_names, (const byte*)"\x91\x29\x05" "names")
QDEF(MP_QSTR_native, (const byte*)"\x84\x0b\x06" "native")
QDEF(MP_QSTR_network, (const byte*)"\x5b\x28\x07" "network")
QDEF(MP_QSTR_nodename, (const byte*)"\x62\xab\x08" "nodename")
QDEF(MP_QSTR_nop, (const byte*)"\xb4\x57\x03" "nop")
QDEF(MP_QSTR_nss, (const byte*)"\x2b\x5a\x03" "nss")
QDEF(MP_QSTR_obj, (const byte*)"\x02\x5c\x03" "obj")
QDEF(MP_QSTR_obj_focus, (const byte*)"\x51\x19\x09" "obj_focus")
QDEF(MP_QSTR_obj_ll, (const byte*)"\x9d\x59\x06" "obj_ll")
QDEF(MP_QSTR_obj_type_t, (const byte*)"\xce\x86\x0a" "obj_type_t")
QDEF(MP_QSTR_oct, (const byte*)"\xfd\x5c\x03" "oct")
QDEF(MP_QSTR_off, (const byte*)"\x8a\x5c\x03" "off")
QDEF(MP_QSTR_ofs_x, (const byte*)"\x58\xf4\x05" "ofs_x")
QDEF(MP_QSTR_ofs_y, (const byte*)"\x59\xf4\x05" "ofs_y")
QDEF(MP_QSTR_on, (const byte*)"\x64\x6f\x02" "on")
QDEF(MP_QSTR_on_edge, (const byte*)"\xf8\x8e\x07" "on_edge")
QDEF(MP_QSTR_once, (const byte*)"\x02\xcc\x04" "once")
QDEF(MP_QSTR_oneline, (const byte*)"\x4f\xa3\x07" "oneline")
QDEF(MP_QSTR_onewire, (const byte*)"\x28\xfc\x07" "onewire")
QDEF(MP_QSTR_opa, (const byte*)"\xdb\x5e\x03" "opa")
QDEF(MP_QSTR_open_cb, (const byte*)"\xcf\x6b\x07" "open_cb")
QDEF(MP_QSTR_opt, (const byte*)"\xce\x5e\x03" "opt")
QDEF(MP_QSTR_opt_level, (const byte*)"\x87\x67\x09" "opt_level")
QDEF(MP_QSTR_pack, (const byte*)"\xbc\xd1\x04" "pack")
QDEF(MP_QSTR_pack_into, (const byte*)"\x1f\xa9\x09" "pack_into")
QDEF(MP_QSTR_padding, (const byte*)"\xb4\xc1\x07" "padding")
QDEF(MP_QSTR_page, (const byte*)"\x36\xd1\x04" "page")
QDEF(MP_QSTR_palette, (const byte*)"\xd8\x71\x07" "palette")
QDEF(MP_QSTR_palette_add, (const byte*)"\x86\x91\x0b" "palette_add")
QDEF(MP_QSTR_palette_clear, (const byte*)"\xbe\x75\x0d" "palette_clear")
QDEF(MP_QSTR_palettesize, (const byte*)"\xbd\x69\x0b" "palettesize")
QDEF(MP_QSTR_panel, (const byte*)"\x53\x1e\x05" "panel")
QDEF(MP_QSTR_parity, (const byte*)"\x42\x05\x06" "parity")
QDEF(MP_QSTR_part, (const byte*)"\xd2\xcf\x04" "part")
QDEF(MP_QSTR_partition, (const byte*)"\x87\xe5\x09" "partition")
QDEF(MP_QSTR_path, (const byte*)"\x88\xce\x04" "path")
QDEF(MP_QSTR_path_cb, (const byte*)"\x36\xf5\x07" "path_cb")
QDEF(MP_QSTR_peektime, (const byte*)"\x8b\x5c\x08" "peektime")
QDEF(MP_QSTR_pend_throw, (const byte*)"\xf3\x74\x0a" "pend_throw")
QDEF(MP_QSTR_period, (const byte*)"\xa0\xa0\x06" "period")
QDEF(MP_QSTR_phase, (const byte*)"\x6a\xd5\x05" "phase")
QDEF(MP_QSTR_phys_defined, (const byte*)"\x09\x3b\x0c" "phys_defined")
QDEF(MP_QSTR_phys_unit, (const byte*)"\xce\x29\x09" "phys_unit")
QDEF(MP_QSTR_phys_x, (const byte*)"\x30\xdc\x06" "phys_x")
QDEF(MP_QSTR_phys_y, (const byte*)"\x31\xdc\x06" "phys_y")
QDEF(MP_QSTR_pi, (const byte*)"\x1c\x70\x02" "pi")
QDEF(MP_QSTR_pid, (const byte*)"\xf8\x73\x03" "pid")
QDEF(MP_QSTR_pin, (const byte*)"\xf2\x73\x03" "pin")
QDEF(MP_QSTR_pixel, (const byte*)"\x4d\xf0\x05" "pixel")
QDEF(MP_QSTR_platform, (const byte*)"\x3a\x19\x08" "platform")
QDEF(MP_QSTR_playback, (const byte*)"\x0a\x2b\x08" "playback")
QDEF(MP_QSTR_playback_now, (const byte*)"\xa3\x34\x0c" "playback_now")
QDEF(MP_QSTR_playback_pause, (const byte*)"\xc7\x92\x0e" "playback_pause")
QDEF(MP_QSTR_point, (const byte*)"\xe9\x19\x05" "point")
QDEF(MP_QSTR_point_t, (const byte*)"\x62\x42\x07" "point_t")
QDEF(MP_QSTR_pointer, (const byte*)"\x9e\x44\x07" "pointer")
QDEF(MP_QSTR_points, (const byte*)"\x7a\x57\x06" "points")
QDEF(MP_QSTR_polar, (const byte*)"\x05\x0c\x05" "polar")
QDEF(MP_QSTR_polarity, (const byte*)"\x41\xed\x08" "polarity")
QDEF(MP_QSTR_poll, (const byte*)"\x9a\xd9\x04" "poll")
QDEF(MP_QSTR_popleft, (const byte*)"\x71\x9a\x07" "popleft")
QDEF(MP_QSTR_port, (const byte*)"\x5c\xd8\x04" "port")
QDEF(MP_QSTR_pr, (const byte*)"\x07\x70\x02" "pr")
QDEF(MP_QSTR_pr_timestamp, (const byte*)"\x36\x6e\x0c" "pr_timestamp")
QDEF(MP_QSTR_preload, (const byte*)"\x24\x1e\x07" "preload")
QDEF(MP_QSTR_prescaler, (const byte*)"\x28\x15\x09" "prescaler")
QDEF(MP_QSTR_prim, (const byte*)"\x23\x82\x04" "prim")
QDEF(MP_QSTR_print_exception, (const byte*)"\x1c\x22\x0f" "print_exception")
QDEF(MP_QSTR_prio, (const byte*)"\x21\x82\x04" "prio")
QDEF(MP_QSTR_proc, (const byte*)"\xeb\x81\x04" "proc")
QDEF(MP_QSTR_property, (const byte*)"\xc2\x29\x08" "property")
QDEF(MP_QSTR_ptr, (const byte*)"\x53\x70\x03" "ptr")
QDEF(MP_QSTR_ptr16, (const byte*)"\xf4\xca\x05" "ptr16")
QDEF(MP_QSTR_ptr32, (const byte*)"\xb2\xca\x05" "ptr32")
QDEF(MP_QSTR_ptr8, (const byte*)"\x8b\x7a\x04" "ptr8")
QDEF(MP_QSTR_ptr_val, (const byte*)"\xf7\x42\x07" "ptr_val")
QDEF(MP_QSTR_pull, (const byte*)"\x80\x7d\x04" "pull")
QDEF(MP_QSTR_pulse_width, (const byte*)"\x23\x14\x0b" "pulse_width")
QDEF(MP_QSTR_pulse_width_percent, (const byte*)"\x27\xb7\x13" "pulse_width_percent")
QDEF(MP_QSTR_push, (const byte*)"\xbb\x7e\x04" "push")
QDEF(MP_QSTR_pyb, (const byte*)"\xee\x71\x03" "pyb")
QDEF(MP_QSTR_qstr_info, (const byte*)"\xb0\x81\x09" "qstr_info")
QDEF(MP_QSTR_r, (const byte*)"\xd7\xb5\x01" "r")
QDEF(MP_QSTR_radians, (const byte*)"\x87\x3f\x07" "radians")
QDEF(MP_QSTR_radius, (const byte*)"\xfd\x0f\x06" "radius")
QDEF(MP_QSTR_randint, (const byte*)"\xaf\xdc\x07" "randint")
QDEF(MP_QSTR_random, (const byte*)"\xbe\x2c\x06" "random")
QDEF(MP_QSTR_randrange, (const byte*)"\xa3\x3e\x09" "randrange")
QDEF(MP_QSTR_rbit, (const byte*)"\xe8\xee\x04" "rbit")
QDEF(MP_QSTR_rddir_size, (const byte*)"\xd6\x7d\x0a" "rddir_size")
QDEF(MP_QSTR_read_buf_len, (const byte*)"\xa1\x09\x0c" "read_buf_len")
QDEF(MP_QSTR_read_cb, (const byte*)"\x69\x7f\x07" "read_cb")
QDEF(MP_QSTR_read_channel, (const byte*)"\xcb\xb6\x0c" "read_channel")
QDEF(MP_QSTR_read_core_temp, (const byte*)"\xe0\xc2\x0e" "read_core_temp")
QDEF(MP_QSTR_read_core_vbat, (const byte*)"\xed\xb7\x0e" "read_core_vbat")
QDEF(MP_QSTR_read_core_vref, (const byte*)"\x6b\x74\x0e" "read_core_vref")
QDEF(MP_QSTR_read_line_cb, (const byte*)"\xf8\x96\x0c" "read_line_cb")
QDEF(MP_QSTR_read_task, (const byte*)"\x25\x3e\x09" "read_task")
QDEF(MP_QSTR_read_text_chunks, (const byte*)"\x82\xf0\x10" "read_text_chunks")
QDEF(MP_QSTR_read_timed, (const byte*)"\xf9\xfe\x0a" "read_timed")
QDEF(MP_QSTR_read_timed_multi, (const byte*)"\x8f\x72\x10" "read_timed_multi")
QDEF(MP_QSTR_read_u16, (const byte*)"\xda\xae\x08" "read_u16")
QDEF(MP_QSTR_read_vref, (const byte*)"\x6f\x00\x09" "read_vref")
QDEF(MP_QSTR_readbit, (const byte*)"\x08\x4f\x07" "readbit")
QDEF(MP_QSTR_readblocks, (const byte*)"\x2d\x1c\x0a" "readblocks")
QDEF(MP_QSTR_readbyte, (const byte*)"\x7d\xf0\x08" "readbyte")
QDEF(MP_QSTR_readchar, (const byte*)"\xef\x92\x08" "readchar")
QDEF(MP_QSTR_readfrom, (const byte*)"\x41\xb1\x08" "readfrom")
QDEF(MP_QSTR_readfrom_into, (const byte*)"\x82\x3f\x0d" "readfrom_into")
QDEF(MP_QSTR_readfrom_mem, (const byte*)"\x3b\x65\x0c" "readfrom_mem")
QDEF(MP_QSTR_readfrom_mem_into, (const byte*)"\x38\x8e\x11" "readfrom_mem_into")
QDEF(MP_QSTR_readlines, (const byte*)"\x6a\x59\x09" "readlines")
QDEF(MP_QSTR_readonly, (const byte*)"\x03\x89\x08" "readonly")
QDEF(MP_QSTR_ready_cb, (const byte*)"\xd0\xdb\x08" "ready_cb")
QDEF(MP_QSTR_real, (const byte*)"\xbf\xf9\x04" "real")
QDEF(MP_QSTR_realign, (const byte*)"\x9f\x8a\x07" "realign")
QDEF(MP_QSTR_rect, (const byte*)"\xe5\xf9\x04" "rect")
QDEF(MP_QSTR_recv, (const byte*)"\xe7\xf9\x04" "recv")
QDEF(MP_QSTR_recvfrom, (const byte*)"\x91\x90\x08" "recvfrom")
QDEF(MP_QSTR_red, (const byte*)"\x76\x8b\x03" "red")
QDEF(MP_QSTR_refocus_policy, (const byte*)"\xc1\x89\x0e" "refocus_policy")
QDEF(MP_QSTR_refr_get_disp_refreshing, (const byte*)"\xdc\x3b\x18" "refr_get_disp_refreshing")
QDEF(MP_QSTR_refr_init, (const byte*)"\x03\xd1\x09" "refr_init")
QDEF(MP_QSTR_refr_now, (const byte*)"\x2f\x23\x08" "refr_now")
QDEF(MP_QSTR_refr_set_disp_refreshing, (const byte*)"\xc8\x99\x18" "refr_set_disp_refreshing")
QDEF(MP_QSTR_refr_task, (const byte*)"\x34\xf8\x09" "refr_task")
QDEF(MP_QSTR_refresh, (const byte*)"\x98\x4c\x07" "refresh")
QDEF(MP_QSTR_refresh_ext_draw_pad, (const byte*)"\xdb\xbd\x14" "refresh_ext_draw_pad")
QDEF(MP_QSTR_refresh_style, (const byte*)"\xd0\x84\x0d" "refresh_style")
QDEF(MP_QSTR_reg, (const byte*)"\x75\x8b\x03" "reg")
QDEF(MP_QSTR_register, (const byte*)"\xac\xa1\x08" "register")
QDEF(MP_QSTR_regs, (const byte*)"\x66\xfa\x04" "regs")
QDEF(MP_QSTR_rel, (const byte*)"\x7e\x8b\x03" "rel")
QDEF(MP_QSTR_rel_tol, (const byte*)"\x56\x46\x07" "rel_tol")
QDEF(MP_QSTR_release, (const byte*)"\xec\x8f\x07" "release")
QDEF(MP_QSTR_remember_unknown_chunks, (const byte*)"\x82\xba\x17" "remember_unknown_chunks")
QDEF(MP_QSTR_remove_cb, (const byte*)"\x3d\xfa\x09" "remove_cb")
QDEF(MP_QSTR_rename, (const byte*)"\x35\x18\x06" "rename")
QDEF(MP_QSTR_rename_cb, (const byte*)"\xab\xe4\x09" "rename_cb")
QDEF(MP_QSTR_repeat, (const byte*)"\xf2\x09\x06" "repeat")
QDEF(MP_QSTR_repeat_pause, (const byte*)"\x7f\x82\x0c" "repeat_pause")
QDEF(MP_QSTR_repl_info, (const byte*)"\xbf\x37\x09" "repl_info")
QDEF(MP_QSTR_repl_uart, (const byte*)"\x23\x58\x09" "repl_uart")
QDEF(MP_QSTR_report_style_mod, (const byte*)"\x7a\x2c\x10" "report_style_mod")
QDEF(MP_QSTR_reserved, (const byte*)"\x01\xa3\x08" "reserved")
QDEF(MP_QSTR_reset, (const byte*)"\x10\xf4\x05" "reset")
QDEF(MP_QSTR_reset_cause, (const byte*)"\xce\x2f\x0b" "reset_cause")
QDEF(MP_QSTR_reset_query, (const byte*)"\xe5\xf2\x0b" "reset_query")
QDEF(MP_QSTR_reversed, (const byte*)"\xa1\x6e\x08" "reversed")
QDEF(MP_QSTR_right, (const byte*)"\xe5\xba\x05" "right")
QDEF(MP_QSTR_rmdir, (const byte*)"\x45\xa7\x05" "rmdir")
QDEF(MP_QSTR_rng, (const byte*)"\x9e\x8b\x03" "rng")
QDEF(MP_QSTR_roller, (const byte*)"\xaf\xf4\x06" "roller")
QDEF(MP_QSTR_rotate, (const byte*)"\xdc\x7d\x06" "rotate")
QDEF(MP_QSTR_rotated, (const byte*)"\x38\x39\x07" "rotated")
QDEF(MP_QSTR_rounded, (const byte*)"\x86\x36\x07" "rounded")
QDEF(MP_QSTR_rounder_cb, (const byte*)"\x2e\x7c\x0a" "rounder_cb")
QDEF(MP_QSTR_route, (const byte*)"\x3c\x28\x05" "route")
QDEF(MP_QSTR_rpartition, (const byte*)"\x15\xd0\x0a" "rpartition")
QDEF(MP_QSTR_rxbuf, (const byte*)"\x7e\x67\x05" "rxbuf")
QDEF(MP_QSTR_s, (const byte*)"\xd6\xb5\x01" "s")
QDEF(MP_QSTR_sb, (const byte*)"\xf4\x70\x02" "sb")
QDEF(MP_QSTR_scan, (const byte*)"\x1a\x8e\x04" "scan")
QDEF(MP_QSTR_schedule, (const byte*)"\xe0\xac\x08" "schedule")
QDEF(MP_QSTR_sck, (const byte*)"\xfe\x8f\x03" "sck")
QDEF(MP_QSTR_scl, (const byte*)"\xf9\x8f\x03" "scl")
QDEF(MP_QSTR_scr, (const byte*)"\xe7\x8f\x03" "scr")
QDEF(MP_QSTR_scr_act, (const byte*)"\xce\x0e\x07" "scr_act")
QDEF(MP_QSTR_scr_ll, (const byte*)"\x18\x1e\x06" "scr_ll")
QDEF(MP_QSTR_scr_load, (const byte*)"\x3e\x04\x08" "scr_load")
QDEF(MP_QSTR_scrl, (const byte*)"\xab\x8c\x04" "scrl")
QDEF(MP_QSTR_scroll, (const byte*)"\x28\x5a\x06" "scroll")
QDEF(MP_QSTR_scroll_hor, (const byte*)"\x02\x24\x0a" "scroll_hor")
QDEF(MP_QSTR_scroll_ver, (const byte*)"\xd6\x96\x0a" "scroll_ver")
QDEF(MP_QSTR_sda, (const byte*)"\x53\x8f\x03" "sda")
QDEF(MP_QSTR_sdiv, (const byte*)"\xcd\x7a\x04" "sdiv")
QDEF(MP_QSTR_search, (const byte*)"\xab\xc1\x06" "search")
QDEF(MP_QSTR_sec, (const byte*)"\x30\x8f\x03" "sec")
QDEF(MP_QSTR_second, (const byte*)"\x15\x4b\x06" "second")
QDEF(MP_QSTR_seed, (const byte*)"\x92\x75\x04" "seed")
QDEF(MP_QSTR_seek, (const byte*)"\x9d\x75\x04" "seek")
QDEF(MP_QSTR_seek_cb, (const byte*)"\x83\x0d\x07" "seek_cb")
QDEF(MP_QSTR_sel, (const byte*)"\x3f\x8f\x03" "sel")
QDEF(MP_QSTR_sel_color, (const byte*)"\x3d\x0f\x09" "sel_color")
QDEF(MP_QSTR_select, (const byte*)"\x8d\x41\x06" "select")
QDEF(MP_QSTR_send_recv, (const byte*)"\xa4\x30\x09" "send_recv")
QDEF(MP_QSTR_sendbreak, (const byte*)"\xc6\x11\x09" "sendbreak")
QDEF(MP_QSTR_sendto, (const byte*)"\x22\x03\x06" "sendto")
QDEF(MP_QSTR_set_accepted_chars, (const byte*)"\xed\xa6\x12" "set_accepted_chars")
QDEF(MP_QSTR_set_align, (const byte*)"\xd5\xcf\x09" "set_align")
QDEF(MP_QSTR_set_angle_offset, (const byte*)"\x0b\x12\x10" "set_angle_offset")
QDEF(MP_QSTR_set_angles, (const byte*)"\x6a\x9e\x0a" "set_angles")
QDEF(MP_QSTR_set_anim_speed, (const byte*)"\x6b\x61\x0e" "set_anim_speed")
QDEF(MP_QSTR_set_anim_time, (const byte*)"\x19\x96\x0d" "set_anim_time")
QDEF(MP_QSTR_set_arc_length, (const byte*)"\x6b\x0c\x0e" "set_arc_length")
QDEF(MP_QSTR_set_array_text, (const byte*)"\xe3\x28\x0e" "set_array_text")
QDEF(MP_QSTR_set_auto_realign, (const byte*)"\x72\x01\x10" "set_auto_realign")
QDEF(MP_QSTR_set_auto_size, (const byte*)"\xad\xf5\x0d" "set_auto_size")
QDEF(MP_QSTR_set_base_dir, (const byte*)"\xcd\xbd\x0c" "set_base_dir")
QDEF(MP_QSTR_set_body_draw, (const byte*)"\x77\xb1\x0d" "set_body_draw")
QDEF(MP_QSTR_set_bright, (const byte*)"\xfa\x2a\x0a" "set_bright")
QDEF(MP_QSTR_set_btn_ctrl, (const byte*)"\x16\x83\x0c" "set_btn_ctrl")
QDEF(MP_QSTR_set_btn_ctrl_all, (const byte*)"\x48\x64\x10" "set_btn_ctrl_all")
QDEF(MP_QSTR_set_btn_selected, (const byte*)"\x16\x5c\x10" "set_btn_selected")
QDEF(MP_QSTR_set_btn_size, (const byte*)"\x1a\xed\x0c" "set_btn_size")
QDEF(MP_QSTR_set_btn_width, (const byte*)"\x19\xe3\x0d" "set_btn_width")
QDEF(MP_QSTR_set_btns_hidden, (const byte*)"\x86\xea\x0f" "set_btns_hidden")
QDEF(MP_QSTR_set_btns_pos, (const byte*)"\xa0\x45\x0c" "set_btns_pos")
QDEF(MP_QSTR_set_buffer, (const byte*)"\x78\x0c\x0a" "set_buffer")
QDEF(MP_QSTR_set_cell_align, (const byte*)"\xcc\x64\x0e" "set_cell_align")
QDEF(MP_QSTR_set_cell_crop, (const byte*)"\x6f\x8c\x0d" "set_cell_crop")
QDEF(MP_QSTR_set_cell_merge_right, (const byte*)"\x86\x55\x14" "set_cell_merge_right")
QDEF(MP_QSTR_set_cell_type, (const byte*)"\xf9\x9d\x0d" "set_cell_type")
QDEF(MP_QSTR_set_cell_value, (const byte*)"\x6a\x7c\x0e" "set_cell_value")
QDEF(MP_QSTR_set_checked, (const byte*)"\xbf\xf9\x0b" "set_checked")
QDEF(MP_QSTR_set_click, (const byte*)"\xd6\x20\x09" "set_click")
QDEF(MP_QSTR_set_col_cnt, (const byte*)"\x9e\xce\x0b" "set_col_cnt")
QDEF(MP_QSTR_set_col_width, (const byte*)"\xa1\x7e\x0d" "set_col_width")
QDEF(MP_QSTR_set_color, (const byte*)"\x25\x77\x09" "set_color")
QDEF(MP_QSTR_set_color_mode, (const byte*)"\x79\xf8\x0e" "set_color_mode")
QDEF(MP_QSTR_set_color_mode_fixed, (const byte*)"\x70\x5a\x14" "set_color_mode_fixed")
QDEF(MP_QSTR_set_content_size, (const byte*)"\x0b\xb2\x10" "set_content_size")
QDEF(MP_QSTR_set_critical_value, (const byte*)"\x07\xb4\x12" "set_critical_value")
QDEF(MP_QSTR_set_ctrl_map, (const byte*)"\xd2\xa4\x0c" "set_ctrl_map")
QDEF(MP_QSTR_set_cursor_blink_time, (const byte*)"\xc5\x97\x15" "set_cursor_blink_time")
QDEF(MP_QSTR_set_cursor_click_pos, (const byte*)"\xd0\x8c\x14" "set_cursor_click_pos")
QDEF(MP_QSTR_set_cursor_manage, (const byte*)"\x8c\x4e\x11" "set_cursor_manage")
QDEF(MP_QSTR_set_cursor_pos, (const byte*)"\x21\xd3\x0e" "set_cursor_pos")
QDEF(MP_QSTR_set_cursor_type, (const byte*)"\x95\xde\x0f" "set_cursor_type")
QDEF(MP_QSTR_set_day_names, (const byte*)"\x0f\x0a\x0d" "set_day_names")
QDEF(MP_QSTR_set_design_cb, (const byte*)"\x74\x22\x0d" "set_design_cb")
QDEF(MP_QSTR_set_digit_format, (const byte*)"\x73\x5b\x10" "set_digit_format")
QDEF(MP_QSTR_set_dir, (const byte*)"\x07\xc1\x07" "set_dir")
QDEF(MP_QSTR_set_div_line_count, (const byte*)"\x4e\xf5\x12" "set_div_line_count")
QDEF(MP_QSTR_set_drag, (const byte*)"\xa8\xde\x08" "set_drag")
QDEF(MP_QSTR_set_drag_dir, (const byte*)"\xc8\xb8\x0c" "set_drag_dir")
QDEF(MP_QSTR_set_drag_parent, (const byte*)"\x6b\xad\x0f" "set_drag_parent")
QDEF(MP_QSTR_set_drag_throw, (const byte*)"\x01\x82\x0e" "set_drag_throw")
QDEF(MP_QSTR_set_draw_arrow, (const byte*)"\x9e\xbf\x0e" "set_draw_arrow")
QDEF(MP_QSTR_set_edge_flash, (const byte*)"\xb4\x78\x0e" "set_edge_flash")
QDEF(MP_QSTR_set_event_cb, (const byte*)"\x4a\xbb\x0c" "set_event_cb")
QDEF(MP_QSTR_set_ext_click_area, (const byte*)"\x08\xd8\x12" "set_ext_click_area")
QDEF(MP_QSTR_set_fit, (const byte*)"\x03\xb9\x07" "set_fit")
QDEF(MP_QSTR_set_fit2, (const byte*)"\x51\xd9\x08" "set_fit2")
QDEF(MP_QSTR_set_fit4, (const byte*)"\x57\xd9\x08" "set_fit4")
QDEF(MP_QSTR_set_fix_height, (const byte*)"\xcf\xef\x0e" "set_fix_height")
QDEF(MP_QSTR_set_fix_width, (const byte*)"\x76\x2d\x0d" "set_fix_width")
QDEF(MP_QSTR_set_height, (const byte*)"\x67\x49\x0a" "set_height")
QDEF(MP_QSTR_set_hidden, (const byte*)"\x72\xe2\x0a" "set_hidden")
QDEF(MP_QSTR_set_highlighted_dates, (const byte*)"\x11\xcd\x15" "set_highlighted_dates")
QDEF(MP_QSTR_set_hsv, (const byte*)"\xd5\x8d\x07" "set_hsv")
QDEF(MP_QSTR_set_hue, (const byte*)"\x80\x8d\x07" "set_hue")
QDEF(MP_QSTR_set_icc, (const byte*)"\x11\x8b\x07" "set_icc")
QDEF(MP_QSTR_set_inactive, (const byte*)"\x13\x68\x0c" "set_inactive")
QDEF(MP_QSTR_set_indic_colored, (const byte*)"\x72\x17\x11" "set_indic_colored")
QDEF(MP_QSTR_set_ink_in_time, (const byte*)"\xe6\x2f\x0f" "set_ink_in_time")
QDEF(MP_QSTR_set_ink_out_time, (const byte*)"\x4f\x43\x10" "set_ink_out_time")
QDEF(MP_QSTR_set_ink_wait_time, (const byte*)"\xca\xae\x11" "set_ink_wait_time")
QDEF(MP_QSTR_set_insert_replace, (const byte*)"\x1c\x85\x12" "set_insert_replace")
QDEF(MP_QSTR_set_knob_in, (const byte*)"\x28\xa0\x0b" "set_knob_in")
QDEF(MP_QSTR_set_layout, (const byte*)"\x82\xa4\x0a" "set_layout")
QDEF(MP_QSTR_set_long_mode, (const byte*)"\xae\x6a\x0d" "set_long_mode")
QDEF(MP_QSTR_set_map, (const byte*)"\x44\x9c\x07" "set_map")
QDEF(MP_QSTR_set_margin, (const byte*)"\x86\x0e\x0a" "set_margin")
QDEF(MP_QSTR_set_max_length, (const byte*)"\x4f\x78\x0e" "set_max_length")
QDEF(MP_QSTR_set_mode, (const byte*)"\x3b\x30\x08" "set_mode")
QDEF(MP_QSTR_set_month_names, (const byte*)"\x03\x72\x0f" "set_month_names")
QDEF(MP_QSTR_set_needle_count, (const byte*)"\xc7\x23\x10" "set_needle_count")
QDEF(MP_QSTR_set_next, (const byte*)"\x9f\x88\x08" "set_next")
QDEF(MP_QSTR_set_offset_x, (const byte*)"\x52\x30\x0c" "set_offset_x")
QDEF(MP_QSTR_set_offset_y, (const byte*)"\x53\x30\x0c" "set_offset_y")
QDEF(MP_QSTR_set_one_line, (const byte*)"\x6d\xcd\x0c" "set_one_line")
QDEF(MP_QSTR_set_one_toggle, (const byte*)"\x51\xbd\x0e" "set_one_toggle")
QDEF(MP_QSTR_set_opa_scale, (const byte*)"\x41\xa2\x0d" "set_opa_scale")
QDEF(MP_QSTR_set_opa_scale_enable, (const byte*)"\x3f\x1b\x14" "set_opa_scale_enable")
QDEF(MP_QSTR_set_options, (const byte*)"\x88\xf6\x0b" "set_options")
QDEF(MP_QSTR_set_padding_left, (const byte*)"\xed\x1f\x10" "set_padding_left")
QDEF(MP_QSTR_set_palette, (const byte*)"\x25\x04\x0b" "set_palette")
QDEF(MP_QSTR_set_parent, (const byte*)"\xc4\x89\x0a" "set_parent")
QDEF(MP_QSTR_set_parent_event, (const byte*)"\x17\x57\x10" "set_parent_event")
QDEF(MP_QSTR_set_placeholder_text, (const byte*)"\x19\x4d\x14" "set_placeholder_text")
QDEF(MP_QSTR_set_point_count, (const byte*)"\x28\x37\x0f" "set_point_count")
QDEF(MP_QSTR_set_points, (const byte*)"\xe7\x65\x0a" "set_points")
QDEF(MP_QSTR_set_pos, (const byte*)"\x54\x6d\x07" "set_pos")
QDEF(MP_QSTR_set_pressed, (const byte*)"\xfe\x3c\x0b" "set_pressed")
QDEF(MP_QSTR_set_preview, (const byte*)"\x12\x11\x0b" "set_preview")
QDEF(MP_QSTR_set_protect, (const byte*)"\x13\xa8\x0b" "set_protect")
QDEF(MP_QSTR_set_pwd_mode, (const byte*)"\xc7\x6e\x0c" "set_pwd_mode")
QDEF(MP_QSTR_set_pwd_show_time, (const byte*)"\x2d\x47\x11" "set_pwd_show_time")
QDEF(MP_QSTR_set_px, (const byte*)"\x50\xe4\x06" "set_px")
QDEF(MP_QSTR_set_px_cb, (const byte*)"\x6e\x21\x09" "set_px_cb")
QDEF(MP_QSTR_set_range, (const byte*)"\x67\xbe\x09" "set_range")
QDEF(MP_QSTR_set_recolor, (const byte*)"\x92\xb5\x0b" "set_recolor")
QDEF(MP_QSTR_set_row_cnt, (const byte*)"\x54\x3e\x0b" "set_row_cnt")
QDEF(MP_QSTR_set_saturation, (const byte*)"\x84\xfc\x0e" "set_saturation")
QDEF(MP_QSTR_set_sb_mode, (const byte*)"\x35\x7d\x0b" "set_sb_mode")
QDEF(MP_QSTR_set_scale, (const byte*)"\x00\x0b\x09" "set_scale")
QDEF(MP_QSTR_set_scrl_fit, (const byte*)"\x52\x83\x0c" "set_scrl_fit")
QDEF(MP_QSTR_set_scrl_fit2, (const byte*)"\xa0\xed\x0d" "set_scrl_fit2")
QDEF(MP_QSTR_set_scrl_fit4, (const byte*)"\xa6\xed\x0d" "set_scrl_fit4")
QDEF(MP_QSTR_set_scrl_height, (const byte*)"\x16\xf7\x0f" "set_scrl_height")
QDEF(MP_QSTR_set_scrl_layout, (const byte*)"\xf3\xdb\x0f" "set_scrl_layout")
QDEF(MP_QSTR_set_scrl_width, (const byte*)"\x8f\x6c\x0e" "set_scrl_width")
QDEF(MP_QSTR_set_scroll_propagation, (const byte*)"\x6c\x27\x16" "set_scroll_propagation")
QDEF(MP_QSTR_set_secondary_y_tick_length, (const byte*)"\x0d\x2e\x1b" "set_secondary_y_tick_length")
QDEF(MP_QSTR_set_secondary_y_tick_texts, (const byte*)"\xbf\xa7\x1a" "set_secondary_y_tick_texts")
QDEF(MP_QSTR_set_selected, (const byte*)"\x31\xbd\x0c" "set_selected")
QDEF(MP_QSTR_set_series_darking, (const byte*)"\x00\xe0\x12" "set_series_darking")
QDEF(MP_QSTR_set_series_opa, (const byte*)"\x82\xe4\x0e" "set_series_opa")
QDEF(MP_QSTR_set_series_width, (const byte*)"\x3a\x3a\x10" "set_series_width")
QDEF(MP_QSTR_set_showed_date, (const byte*)"\xf1\x05\x0f" "set_showed_date")
QDEF(MP_QSTR_set_signal_cb, (const byte*)"\x18\x8e\x0d" "set_signal_cb")
QDEF(MP_QSTR_set_single_mode, (const byte*)"\x5e\x26\x0f" "set_single_mode")
QDEF(MP_QSTR_set_size, (const byte*)"\x3d\xac\x08" "set_size")
QDEF(MP_QSTR_set_sliding, (const byte*)"\xea\x3a\x0b" "set_sliding")
QDEF(MP_QSTR_set_spin_time, (const byte*)"\xb6\xab\x0d" "set_spin_time")
QDEF(MP_QSTR_set_src, (const byte*)"\x7a\x84\x07" "set_src")
QDEF(MP_QSTR_set_state, (const byte*)"\x2f\x9d\x09" "set_state")
QDEF(MP_QSTR_set_static_text, (const byte*)"\x22\x6b\x0f" "set_static_text")
QDEF(MP_QSTR_set_stay_open, (const byte*)"\x6c\x80\x0d" "set_stay_open")
QDEF(MP_QSTR_set_step, (const byte*)"\x8a\x1b\x08" "set_step")
QDEF(MP_QSTR_set_style, (const byte*)"\x2f\x3a\x09" "set_style")
QDEF(MP_QSTR_set_sym, (const byte*)"\x5f\x83\x07" "set_sym")
QDEF(MP_QSTR_set_ta, (const byte*)"\xcd\xe4\x06" "set_ta")
QDEF(MP_QSTR_set_tab_act, (const byte*)"\xa6\xe1\x0b" "set_tab_act")
QDEF(MP_QSTR_set_text, (const byte*)"\xc5\x2f\x08" "set_text")
QDEF(MP_QSTR_set_text_align, (const byte*)"\x37\xef\x0e" "set_text_align")
QDEF(MP_QSTR_set_text_fmt, (const byte*)"\x65\x71\x0c" "set_text_fmt")
QDEF(MP_QSTR_set_text_sel, (const byte*)"\xa0\x19\x0c" "set_text_sel")
QDEF(MP_QSTR_set_text_sel_end, (const byte*)"\x70\x57\x10" "set_text_sel_end")
QDEF(MP_QSTR_set_text_sel_start, (const byte*)"\xff\x9a\x12" "set_text_sel_start")
QDEF(MP_QSTR_set_tile_act, (const byte*)"\xa5\x81\x0c" "set_tile_act")
QDEF(MP_QSTR_set_title, (const byte*)"\x98\x0a\x09" "set_title")
QDEF(MP_QSTR_set_today_date, (const byte*)"\x14\xa6\x0e" "set_today_date")
QDEF(MP_QSTR_set_toggle, (const byte*)"\x2a\x28\x0a" "set_toggle")
QDEF(MP_QSTR_set_top, (const byte*)"\x53\x7d\x07" "set_top")
QDEF(MP_QSTR_set_type, (const byte*)"\xc0\x5f\x08" "set_type")
QDEF(MP_QSTR_set_update_mode, (const byte*)"\x75\x23\x0f" "set_update_mode")
QDEF(MP_QSTR_set_user_data, (const byte*)"\x66\x1d\x0d" "set_user_data")
QDEF(MP_QSTR_set_valid_positions, (const byte*)"\xdb\xfc\x13" "set_valid_positions")
QDEF(MP_QSTR_set_value, (const byte*)"\xb3\xf8\x09" "set_value")
QDEF(MP_QSTR_set_visible_row_count, (const byte*)"\xbf\x48\x15" "set_visible_row_count")
QDEF(MP_QSTR_set_width, (const byte*)"\xde\x39\x09" "set_width")
QDEF(MP_QSTR_set_x, (const byte*)"\x20\xff\x05" "set_x")
QDEF(MP_QSTR_set_x_tick_length, (const byte*)"\x49\x18\x11" "set_x_tick_length")
QDEF(MP_QSTR_set_x_tick_texts, (const byte*)"\xfb\x49\x10" "set_x_tick_texts")
QDEF(MP_QSTR_set_y, (const byte*)"\x21\xff\x05" "set_y")
QDEF(MP_QSTR_set_y_invert, (const byte*)"\x6c\xf3\x0c" "set_y_invert")
QDEF(MP_QSTR_set_y_tick_length, (const byte*)"\x48\xb7\x11" "set_y_tick_length")
QDEF(MP_QSTR_set_y_tick_texts, (const byte*)"\xda\x84\x10" "set_y_tick_texts")
QDEF(MP_QSTR_setblocking, (const byte*)"\x6e\x18\x0b" "setblocking")
QDEF(MP_QSTR_setinterrupt, (const byte*)"\xc0\x8b\x0c" "setinterrupt")
QDEF(MP_QSTR_setsockopt, (const byte*)"\x38\xe8\x0a" "setsockopt")
QDEF(MP_QSTR_setter, (const byte*)"\x04\x59\x06" "setter")
QDEF(MP_QSTR_settimeout, (const byte*)"\xdc\x8a\x0a" "settimeout")
QDEF(MP_QSTR_sha256, (const byte*)"\x2e\x01\x06" "sha256")
QDEF(MP_QSTR_shadow, (const byte*)"\xa3\x52\x06" "shadow")
QDEF(MP_QSTR_short_val, (const byte*)"\x33\x0e\x09" "short_val")
QDEF(MP_QSTR_signal_send, (const byte*)"\xb8\xa2\x0b" "signal_send")
QDEF(MP_QSTR_sin, (const byte*)"\xb1\x90\x03" "sin")
QDEF(MP_QSTR_single, (const byte*)"\x3f\x20\x06" "single")
QDEF(MP_QSTR_sinh, (const byte*)"\xb9\xa6\x04" "sinh")
QDEF(MP_QSTR_size, (const byte*)"\x20\xa5\x04" "size")
QDEF(MP_QSTR_size_cb, (const byte*)"\xde\xa0\x07" "size_cb")
QDEF(MP_QSTR_sizeof, (const byte*)"\x49\x73\x06" "sizeof")
QDEF(MP_QSTR_sleep, (const byte*)"\xea\x27\x05" "sleep")
QDEF(MP_QSTR_sleep_ms, (const byte*)"\x0b\x63\x08" "sleep_ms")
QDEF(MP_QSTR_sleep_us, (const byte*)"\x13\x60\x08" "sleep_us")
QDEF(MP_QSTR_slice, (const byte*)"\xb5\xf4\x05" "slice")
QDEF(MP_QSTR_slider, (const byte*)"\x60\xb0\x06" "slider")
QDEF(MP_QSTR_socket, (const byte*)"\x60\xcc\x06" "socket")
QDEF(MP_QSTR_soft_reset, (const byte*)"\xe1\x65\x0a" "soft_reset")
QDEF(MP_QSTR_source_freq, (const byte*)"\x47\x26\x0b" "source_freq")
QDEF(MP_QSTR_spinbox, (const byte*)"\x74\x21\x07" "spinbox")
QDEF(MP_QSTR_spinner_anim, (const byte*)"\x6c\x58\x0c" "spinner_anim")
QDEF(MP_QSTR_splitlines, (const byte*)"\x6a\xd3\x0a" "splitlines")
QDEF(MP_QSTR_sqrt, (const byte*)"\x21\x44\x04" "sqrt")
QDEF(MP_QSTR_src, (const byte*)"\x07\x8d\x03" "src")
QDEF(MP_QSTR_src_get_type, (const byte*)"\xe9\xf6\x0c" "src_get_type")
QDEF(MP_QSTR_src_type, (const byte*)"\x20\xd9\x08" "src_type")
QDEF(MP_QSTR_srgb_defined, (const byte*)"\x3f\x51\x0c" "srgb_defined")
QDEF(MP_QSTR_srgb_intent, (const byte*)"\x12\xe2\x0b" "srgb_intent")
QDEF(MP_QSTR_stack_use, (const byte*)"\x97\xf7\x09" "stack_use")
QDEF(MP_QSTR_standby, (const byte*)"\xd2\xd9\x07" "standby")
QDEF(MP_QSTR_start_auto_close, (const byte*)"\xbc\x35\x10" "start_auto_close")
QDEF(MP_QSTR_start_edge_flash, (const byte*)"\x96\x84\x10" "start_edge_flash")
QDEF(MP_QSTR_start_point, (const byte*)"\xb6\x53\x0b" "start_point")
QDEF(MP_QSTR_stat, (const byte*)"\xd7\x35\x04" "stat")
QDEF(MP_QSTR_state, (const byte*)"\xd2\xf0\x05" "state")
QDEF(MP_QSTR_state_cleanup, (const byte*)"\x8d\xcb\x0d" "state_cleanup")
QDEF(MP_QSTR_state_copy, (const byte*)"\x28\x10\x0a" "state_copy")
QDEF(MP_QSTR_state_init, (const byte*)"\x57\x0b\x0a" "state_init")
QDEF(MP_QSTR_statvfs, (const byte*)"\x14\x19\x07" "statvfs")
QDEF(MP_QSTR_stderr, (const byte*)"\xa3\x58\x06" "stderr")
QDEF(MP_QSTR_stdin, (const byte*)"\x21\x04\x05" "stdin")
QDEF(MP_QSTR_stdout, (const byte*)"\x08\x83\x06" "stdout")
QDEF(MP_QSTR_step_next, (const byte*)"\xaf\x32\x09" "step_next")
QDEF(MP_QSTR_step_prev, (const byte*)"\xd9\xf8\x09" "step_prev")
QDEF(MP_QSTR_stm, (const byte*)"\x4f\x8d\x03" "stm")
QDEF(MP_QSTR_stop_auto_close, (const byte*)"\xa4\x39\x0f" "stop_auto_close")
QDEF(MP_QSTR_str_val, (const byte*)"\xb4\xa6\x07" "str_val")
QDEF(MP_QSTR_strb, (const byte*)"\x32\x37\x04" "strb")
QDEF(MP_QSTR_strex, (const byte*)"\xad\x1d\x05" "strex")
QDEF(MP_QSTR_strh, (const byte*)"\x38\x37\x04" "strh")
QDEF(MP_QSTR_struct, (const byte*)"\x12\x90\x06" "struct")
QDEF(MP_QSTR_style, (const byte*)"\xd2\x53\x05" "style")
QDEF(MP_QSTR_style_anim_clear_playback, (const byte*)"\xf0\x53\x19" "style_anim_clear_playback")
QDEF(MP_QSTR_style_anim_clear_repeat, (const byte*)"\x48\xe9\x17" "style_anim_clear_repeat")
QDEF(MP_QSTR_style_anim_create, (const byte*)"\x1d\x55\x11" "style_anim_create")
QDEF(MP_QSTR_style_anim_init, (const byte*)"\x43\x20\x0f" "style_anim_init")
QDEF(MP_QSTR_style_anim_set_playback, (const byte*)"\x8b\x57\x17" "style_anim_set_playback")
QDEF(MP_QSTR_style_anim_set_ready_cb, (const byte*)"\x11\xc7\x17" "style_anim_set_ready_cb")
QDEF(MP_QSTR_style_anim_set_repeat, (const byte*)"\x33\xf2\x15" "style_anim_set_repeat")
QDEF(MP_QSTR_style_anim_set_styles, (const byte*)"\xa0\xb6\x15" "style_anim_set_styles")
QDEF(MP_QSTR_style_anim_set_time, (const byte*)"\xb1\x85\x13" "style_anim_set_time")
QDEF(MP_QSTR_style_btn_ina, (const byte*)"\x0c\x2e\x0d" "style_btn_ina")
QDEF(MP_QSTR_style_btn_pr, (const byte*)"\xe8\x97\x0c" "style_btn_pr")
QDEF(MP_QSTR_style_btn_rel, (const byte*)"\xb1\x7e\x0d" "style_btn_rel")
QDEF(MP_QSTR_style_btn_tgl_pr, (const byte*)"\xc8\x8f\x10" "style_btn_tgl_pr")
QDEF(MP_QSTR_style_btn_tgl_rel, (const byte*)"\xd1\x72\x11" "style_btn_tgl_rel")
QDEF(MP_QSTR_style_copy, (const byte*)"\x28\x53\x0a" "style_copy")
QDEF(MP_QSTR_style_init, (const byte*)"\x57\x4e\x0a" "style_init")
QDEF(MP_QSTR_style_mix, (const byte*)"\x71\x85\x09" "style_mix")
QDEF(MP_QSTR_style_mod_cb, (const byte*)"\xf5\x5c\x0c" "style_mod_cb")
QDEF(MP_QSTR_style_mod_edit_cb, (const byte*)"\xf6\x47\x11" "style_mod_edit_cb")
QDEF(MP_QSTR_style_mod_edit_xcb, (const byte*)"\x6e\x18\x12" "style_mod_edit_xcb")
QDEF(MP_QSTR_style_mod_xcb, (const byte*)"\x4d\xc5\x0d" "style_mod_xcb")
QDEF(MP_QSTR_style_plain, (const byte*)"\xf7\x86\x0b" "style_plain")
QDEF(MP_QSTR_style_plain_color, (const byte*)"\xf5\xc6\x11" "style_plain_color")
QDEF(MP_QSTR_style_pretty, (const byte*)"\x73\x58\x0c" "style_pretty")
QDEF(MP_QSTR_style_pretty_color, (const byte*)"\x71\xc8\x12" "style_pretty_color")
QDEF(MP_QSTR_style_scr, (const byte*)"\xaf\xf2\x09" "style_scr")
QDEF(MP_QSTR_style_t, (const byte*)"\x99\x97\x07" "style_t")
QDEF(MP_QSTR_style_tmp, (const byte*)"\x24\xe5\x09" "style_tmp")
QDEF(MP_QSTR_style_transp, (const byte*)"\x87\x6c\x0c" "style_transp")
QDEF(MP_QSTR_style_transp_fit, (const byte*)"\x23\x3f\x10" "style_transp_fit")
QDEF(MP_QSTR_style_transp_tight, (const byte*)"\x3e\xe7\x12" "style_transp_tight")
QDEF(MP_QSTR_sub, (const byte*)"\x21\x8d\x03" "sub")
QDEF(MP_QSTR_subpx, (const byte*)"\x29\x57\x05" "subpx")
QDEF(MP_QSTR_sw, (const byte*)"\xe1\x70\x02" "sw")
QDEF(MP_QSTR_swint, (const byte*)"\xb2\x7a\x05" "swint")
QDEF(MP_QSTR_symmetric_difference, (const byte*)"\xce\x67\x14" "symmetric_difference")
QDEF(MP_QSTR_symmetric_difference_update, (const byte*)"\x60\xf8\x1b" "symmetric_difference_update")
QDEF(MP_QSTR_sync, (const byte*)"\xa2\x62\x04" "sync")
QDEF(MP_QSTR_sys, (const byte*)"\xbc\x8e\x03" "sys")
QDEF(MP_QSTR_sys_layer, (const byte*)"\x60\xbc\x09" "sys_layer")
QDEF(MP_QSTR_sysname, (const byte*)"\x9b\x36\x07" "sysname")
QDEF(MP_QSTR_ta, (const byte*)"\x90\x6f\x02" "ta")
QDEF(MP_QSTR_table, (const byte*)"\x7b\xac\x05" "table")
QDEF(MP_QSTR_tabview, (const byte*)"\x5f\x83\x07" "tabview")
QDEF(MP_QSTR_tail, (const byte*)"\x75\xa1\x04" "tail")
QDEF(MP_QSTR_tan, (const byte*)"\xfe\x61\x03" "tan")
QDEF(MP_QSTR_tanh, (const byte*)"\xd6\xa1\x04" "tanh")
QDEF(MP_QSTR_task_cb, (const byte*)"\xd6\x18\x07" "task_cb")
QDEF(MP_QSTR_task_core_init, (const byte*)"\xc9\x66\x0e" "task_core_init")
QDEF(MP_QSTR_task_create, (const byte*)"\xb3\x74\x0b" "task_create")
QDEF(MP_QSTR_task_create_basic, (const byte*)"\x76\xae\x11" "task_create_basic")
QDEF(MP_QSTR_task_del, (const byte*)"\xda\x37\x08" "task_del")
QDEF(MP_QSTR_task_enable, (const byte*)"\x76\x92\x0b" "task_enable")
QDEF(MP_QSTR_task_get_idle, (const byte*)"\x5a\xf4\x0d" "task_get_idle")
QDEF(MP_QSTR_task_handler, (const byte*)"\x2f\x4d\x0c" "task_handler")
QDEF(MP_QSTR_task_once, (const byte*)"\x70\xd3\x09" "task_once")
QDEF(MP_QSTR_task_ready, (const byte*)"\x5c\x93\x0a" "task_ready")
QDEF(MP_QSTR_task_reset, (const byte*)"\x62\xf0\x0a" "task_reset")
QDEF(MP_QSTR_task_set_cb, (const byte*)"\x8b\xc7\x0b" "task_set_cb")
QDEF(MP_QSTR_task_set_period, (const byte*)"\xcf\xdd\x0f" "task_set_period")
QDEF(MP_QSTR_task_set_prio, (const byte*)"\x4e\xf7\x0d" "task_set_prio")
QDEF(MP_QSTR_task_t, (const byte*)"\x23\xd2\x06" "task_t")
QDEF(MP_QSTR_task_xcb, (const byte*)"\x8e\x25\x08" "task_xcb")
QDEF(MP_QSTR_tell, (const byte*)"\x14\xb1\x04" "tell")
QDEF(MP_QSTR_tell_cb, (const byte*)"\x2a\xf6\x07" "tell_cb")
QDEF(MP_QSTR_text, (const byte*)"\x98\xaf\x04" "text")
QDEF(MP_QSTR_text_is_selected, (const byte*)"\xab\x25\x10" "text_is_selected")
QDEF(MP_QSTR_text_keys, (const byte*)"\x43\x60\x09" "text_keys")
QDEF(MP_QSTR_text_num, (const byte*)"\x71\x08\x08" "text_num")
QDEF(MP_QSTR_text_strings, (const byte*)"\x81\x00\x0c" "text_strings")
QDEF(MP_QSTR_tgl_pr, (const byte*)"\x27\x84\x06" "tgl_pr")
QDEF(MP_QSTR_tgl_rel, (const byte*)"\x5e\x23\x07" "tgl_rel")
QDEF(MP_QSTR_theme_alien_init, (const byte*)"\x81\xd0\x10" "theme_alien_init")
QDEF(MP_QSTR_theme_default_init, (const byte*)"\x65\x98\x12" "theme_default_init")
QDEF(MP_QSTR_theme_get_alien, (const byte*)"\xad\x7e\x0f" "theme_get_alien")
QDEF(MP_QSTR_theme_get_current, (const byte*)"\xeb\xd6\x11" "theme_get_current")
QDEF(MP_QSTR_theme_get_default, (const byte*)"\xc9\x42\x11" "theme_get_default")
QDEF(MP_QSTR_theme_get_material, (const byte*)"\x69\xad\x12" "theme_get_material")
QDEF(MP_QSTR_theme_get_mono, (const byte*)"\x01\x4e\x0e" "theme_get_mono")
QDEF(MP_QSTR_theme_get_nemo, (const byte*)"\xcb\xc9\x0e" "theme_get_nemo")
QDEF(MP_QSTR_theme_get_night, (const byte*)"\xbe\xc9\x0f" "theme_get_night")
QDEF(MP_QSTR_theme_get_templ, (const byte*)"\x22\x59\x0f" "theme_get_templ")
QDEF(MP_QSTR_theme_get_zen, (const byte*)"\x33\x59\x0d" "theme_get_zen")
QDEF(MP_QSTR_theme_material_init, (const byte*)"\x25\x65\x13" "theme_material_init")
QDEF(MP_QSTR_theme_mono_init, (const byte*)"\x8d\xf6\x0f" "theme_mono_init")
QDEF(MP_QSTR_theme_nemo_init, (const byte*)"\x07\x41\x0f" "theme_nemo_init")
QDEF(MP_QSTR_theme_night_init, (const byte*)"\x72\x0f\x10" "theme_night_init")
QDEF(MP_QSTR_theme_set_current, (const byte*)"\xff\xc5\x11" "theme_set_current")
QDEF(MP_QSTR_theme_t, (const byte*)"\x3f\x68\x07" "theme_t")
QDEF(MP_QSTR_theme_templ_init, (const byte*)"\x6e\x95\x10" "theme_templ_init")
QDEF(MP_QSTR_theme_zen_init, (const byte*)"\x5f\x10\x0e" "theme_zen_init")
QDEF(MP_QSTR_threshold, (const byte*)"\xf2\x2f\x09" "threshold")
QDEF(MP_QSTR_ti, (const byte*)"\x98\x6f\x02" "ti")
QDEF(MP_QSTR_tick_elaps, (const byte*)"\xa4\xcf\x0a" "tick_elaps")
QDEF(MP_QSTR_tick_get, (const byte*)"\x99\x44\x08" "tick_get")
QDEF(MP_QSTR_tick_hz, (const byte*)"\x7d\xdb\x07" "tick_hz")
QDEF(MP_QSTR_tick_inc, (const byte*)"\xeb\x2b\x08" "tick_inc")
QDEF(MP_QSTR_ticks_add, (const byte*)"\x9d\xae\x09" "ticks_add")
QDEF(MP_QSTR_ticks_cpu, (const byte*)"\x1a\xa5\x09" "ticks_cpu")
QDEF(MP_QSTR_ticks_diff, (const byte*)"\xb1\xe0\x0a" "ticks_diff")
QDEF(MP_QSTR_ticks_ms, (const byte*)"\x42\x32\x08" "ticks_ms")
QDEF(MP_QSTR_ticks_us, (const byte*)"\x5a\x31\x08" "ticks_us")
QDEF(MP_QSTR_tileview, (const byte*)"\xbc\xa3\x08" "tileview")
QDEF(MP_QSTR_time, (const byte*)"\xf0\xc1\x04" "time")
QDEF(MP_QSTR_time_defined, (const byte*)"\x0e\xb9\x0c" "time_defined")
QDEF(MP_QSTR_time_pulse_us, (const byte*)"\x89\x0c\x0d" "time_pulse_us")
QDEF(MP_QSTR_time_to_open, (const byte*)"\x3f\xbe\x0c" "time_to_open")
QDEF(MP_QSTR_timeout, (const byte*)"\x3e\x54\x07" "timeout")
QDEF(MP_QSTR_timeout_char, (const byte*)"\x79\x4a\x0c" "timeout_char")
QDEF(MP_QSTR_timingr, (const byte*)"\xa7\x89\x07" "timingr")
QDEF(MP_QSTR_today_box, (const byte*)"\xa8\x06\x09" "today_box")
QDEF(MP_QSTR_toggle, (const byte*)"\xb7\x43\x06" "toggle")
QDEF(MP_QSTR_top, (const byte*)"\x2e\x63\x03" "top")
QDEF(MP_QSTR_top_layer, (const byte*)"\x72\xf6\x09" "top_layer")
QDEF(MP_QSTR_total_size, (const byte*)"\x9d\xe1\x0a" "total_size")
QDEF(MP_QSTR_trigger, (const byte*)"\x9d\x8c\x07" "trigger")
QDEF(MP_QSTR_trigo_sin, (const byte*)"\x89\x87\x09" "trigo_sin")
QDEF(MP_QSTR_trunc, (const byte*)"\x5b\x99\x05" "trunc")
QDEF(MP_QSTR_trunc_cb, (const byte*)"\x85\x81\x08" "trunc_cb")
QDEF(MP_QSTR_txt_cut, (const byte*)"\xa0\x0a\x07" "txt_cut")
QDEF(MP_QSTR_txt_get_next_line, (const byte*)"\x3d\xc6\x11" "txt_get_next_line")
QDEF(MP_QSTR_txt_get_size, (const byte*)"\x8e\xde\x0c" "txt_get_size")
QDEF(MP_QSTR_txt_get_width, (const byte*)"\x0d\x29\x0d" "txt_get_width")
QDEF(MP_QSTR_txt_ins, (const byte*)"\xd6\x21\x07" "txt_ins")
QDEF(MP_QSTR_txt_is_cmd, (const byte*)"\xad\x0a\x0a" "txt_is_cmd")
QDEF(MP_QSTR_types, (const byte*)"\x4e\x73\x05" "types")
QDEF(MP_QSTR_uarray, (const byte*)"\x89\x86\x06" "uarray")
QDEF(MP_QSTR_ubinascii, (const byte*)"\xc4\x88\x09" "ubinascii")
QDEF(MP_QSTR_uchar_val, (const byte*)"\xec\x60\x09" "uchar_val")
QDEF(MP_QSTR_ucollections, (const byte*)"\x15\x9a\x0c" "ucollections")
QDEF(MP_QSTR_uctypes, (const byte*)"\xf8\x71\x07" "uctypes")
QDEF(MP_QSTR_udelay, (const byte*)"\x25\xaf\x06" "udelay")
QDEF(MP_QSTR_udiv, (const byte*)"\x8b\x31\x04" "udiv")
QDEF(MP_QSTR_uerrno, (const byte*)"\xb4\xe9\x06" "uerrno")
QDEF(MP_QSTR_uhashlib, (const byte*)"\x65\x9d\x08" "uhashlib")
QDEF(MP_QSTR_uheapq, (const byte*)"\x1d\x43\x06" "uheapq")
QDEF(MP_QSTR_uint, (const byte*)"\xe3\x3d\x04" "uint")
QDEF(MP_QSTR_uint_val, (const byte*)"\xc7\x64\x08" "uint_val")
QDEF(MP_QSTR_uio, (const byte*)"\xb6\x66\x03" "uio")
QDEF(MP_QSTR_ujson, (const byte*)"\xe8\x30\x05" "ujson")
QDEF(MP_QSTR_umachine, (const byte*)"\x95\x7f\x08" "umachine")
QDEF(MP_QSTR_umount, (const byte*)"\xdd\x9e\x06" "umount")
QDEF(MP_QSTR_uname, (const byte*)"\xb7\x9c\x05" "uname")
QDEF(MP_QSTR_unhexlify, (const byte*)"\xb1\xb9\x09" "unhexlify")
QDEF(MP_QSTR_uniform, (const byte*)"\x01\xf5\x07" "uniform")
QDEF(MP_QSTR_union, (const byte*)"\xf6\x7c\x05" "union")
QDEF(MP_QSTR_unique_id, (const byte*)"\x04\x89\x09" "unique_id")
QDEF(MP_QSTR_unknown_chunks_data, (const byte*)"\x35\x5b\x13" "unknown_chunks_data")
QDEF(MP_QSTR_unknown_chunks_size, (const byte*)"\x40\xe3\x13" "unknown_chunks_size")
QDEF(MP_QSTR_unlink, (const byte*)"\xfe\x8f\x06" "unlink")
QDEF(MP_QSTR_unpack, (const byte*)"\x07\x3c\x06" "unpack")
QDEF(MP_QSTR_unpack_from, (const byte*)"\x0e\x6d\x0b" "unpack_from")
QDEF(MP_QSTR_unregister, (const byte*)"\x17\xd4\x0a" "unregister")
QDEF(MP_QSTR_uos, (const byte*)"\xec\x67\x03" "uos")
QDEF(MP_QSTR_up, (const byte*)"\xa0\x6f\x02" "up")
QDEF(MP_QSTR_urandom, (const byte*)"\xab\xae\x07" "urandom")
QDEF(MP_QSTR_ure, (const byte*)"\x87\x63\x03" "ure")
QDEF(MP_QSTR_usb_mode, (const byte*)"\xbd\x6d\x08" "usb_mode")
QDEF(MP_QSTR_used_cnt, (const byte*)"\xc4\x0e\x08" "used_cnt")
QDEF(MP_QSTR_used_pct, (const byte*)"\xfa\xd0\x08" "used_pct")
QDEF(MP_QSTR_uselect, (const byte*)"\x58\x8e\x07" "uselect")
QDEF(MP_QSTR_user_data, (const byte*)"\x9b\xd6\x09" "user_data")
QDEF(MP_QSTR_ushort_val, (const byte*)"\x06\x00\x0a" "ushort_val")
QDEF(MP_QSTR_usocket, (const byte*)"\x75\x00\x07" "usocket")
QDEF(MP_QSTR_ustruct, (const byte*)"\x47\x08\x07" "ustruct")
QDEF(MP_QSTR_utime, (const byte*)"\xe5\x9d\x05" "utime")
QDEF(MP_QSTR_utimeq, (const byte*)"\xf4\x5a\x06" "utimeq")
QDEF(MP_QSTR_uzlib, (const byte*)"\x6d\x9b\x05" "uzlib")
QDEF(MP_QSTR_v, (const byte*)"\xd3\xb5\x01" "v")
QDEF(MP_QSTR_var, (const byte*)"\xe0\x7a\x03" "var")
QDEF(MP_QSTR_vcmp, (const byte*)"\xad\xc1\x04" "vcmp")
QDEF(MP_QSTR_vcvt_f32_s32, (const byte*)"\x47\xc9\x0c" "vcvt_f32_s32")
QDEF(MP_QSTR_vcvt_s32_f32, (const byte*)"\x07\x33\x0c" "vcvt_s32_f32")
QDEF(MP_QSTR_vect, (const byte*)"\x61\xea\x04" "vect")
QDEF(MP_QSTR_ver_res, (const byte*)"\x1f\x6a\x07" "ver_res")
QDEF(MP_QSTR_version, (const byte*)"\xbf\xd3\x07" "version")
QDEF(MP_QSTR_version_info, (const byte*)"\x6e\x0a\x0c" "version_info")
QDEF(MP_QSTR_vid, (const byte*)"\xfe\x7b\x03" "vid")
QDEF(MP_QSTR_viper, (const byte*)"\x5d\x23\x05" "viper")
QDEF(MP_QSTR_vldr, (const byte*)"\xc9\x07\x04" "vldr")
QDEF(MP_QSTR_vline, (const byte*)"\x1d\xf6\x05" "vline")
QDEF(MP_QSTR_vmov, (const byte*)"\xe7\x0a\x04" "vmov")
QDEF(MP_QSTR_vmrs, (const byte*)"\x9f\x09\x04" "vmrs")
QDEF(MP_QSTR_vneg, (const byte*)"\xff\xee\x04" "vneg")
QDEF(MP_QSTR_vsqrt, (const byte*)"\xf7\x42\x05" "vsqrt")
QDEF(MP_QSTR_vstr, (const byte*)"\xc6\x7e\x04" "vstr")
QDEF(MP_QSTR_w, (const byte*)"\xd2\xb5\x01" "w")
QDEF(MP_QSTR_wait_until_release, (const byte*)"\xcd\x96\x12" "wait_until_release")
QDEF(MP_QSTR_wakeup, (const byte*)"\x78\x32\x06" "wakeup")
QDEF(MP_QSTR_week_box, (const byte*)"\x73\x73\x08" "week_box")
QDEF(MP_QSTR_wfi, (const byte*)"\x9d\x7e\x03" "wfi")
QDEF(MP_QSTR_width, (const byte*)"\x23\x75\x05" "width")
QDEF(MP_QSTR_win, (const byte*)"\xb5\x7f\x03" "win")
QDEF(MP_QSTR_wrap, (const byte*)"\x51\xfc\x04" "wrap")
QDEF(MP_QSTR_write_cb, (const byte*)"\x26\xcd\x08" "write_cb")
QDEF(MP_QSTR_write_readinto, (const byte*)"\x89\x84\x0e" "write_readinto")
QDEF(MP_QSTR_writebit, (const byte*)"\xc7\xa5\x08" "writebit")
QDEF(MP_QSTR_writeblocks, (const byte*)"\x02\xdf\x0b" "writeblocks")
QDEF(MP_QSTR_writebyte, (const byte*)"\xd2\x1e\x09" "writebyte")
QDEF(MP_QSTR_writechar, (const byte*)"\x40\xe0\x09" "writechar")
QDEF(MP_QSTR_writeto, (const byte*)"\x03\x39\x07" "writeto")
QDEF(MP_QSTR_writeto_mem, (const byte*)"\x79\xed\x0b" "writeto_mem")
QDEF(MP_QSTR_writevto, (const byte*)"\x75\x75\x08" "writevto")
QDEF(MP_QSTR_x, (const byte*)"\xdd\xb5\x01" "x")
QDEF(MP_QSTR_x1, (const byte*)"\x4c\x71\x02" "x1")
QDEF(MP_QSTR_x2, (const byte*)"\x4f\x71\x02" "x2")
QDEF(MP_QSTR_y, (const byte*)"\xdc\xb5\x01" "y")
QDEF(MP_QSTR_y1, (const byte*)"\x6d\x71\x02" "y1")
QDEF(MP_QSTR_y2, (const byte*)"\x6e\x71\x02" "y2")
QDEF(MP_QSTR_year, (const byte*)"\x4a\x9f\x04" "year")
QDEF(MP_QSTR_zlib_decompress, (const byte*)"\x80\xe5\x0f" "zlib_decompress")
QDEF(MP_QSTR_zlibsettings, (const byte*)"\x5d\xc2\x0c" "zlibsettings")
