
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         pragmacomp_or_statement     : pppragma_directive statement\n                                        | statement\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n                                      | struct_or_union brace_open brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union ID brace_open brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON pragmacomp_or_statement  labeled_statement : CASE constant_expression COLON pragmacomp_or_statement  labeled_statement : DEFAULT COLON pragmacomp_or_statement  selection_statement : IF LPAREN expression RPAREN pragmacomp_or_statement  selection_statement : IF LPAREN expression RPAREN statement ELSE pragmacomp_or_statement  selection_statement : SWITCH LPAREN expression RPAREN pragmacomp_or_statement  iteration_statement : WHILE LPAREN expression RPAREN pragmacomp_or_statement  iteration_statement : DO pragmacomp_or_statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN pragmacomp_or_statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN pragmacomp_or_statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'ENUM':([0,2,3,7,9,10,11,12,13,17,18,24,25,26,28,29,31,33,36,38,40,42,44,48,49,53,55,58,61,69,70,72,74,75,76,79,80,85,97,101,102,103,104,108,125,126,127,129,130,131,132,133,134,138,139,142,147,149,150,151,157,164,186,212,214,216,218,227,228,229,230,231,233,236,240,242,245,256,268,271,282,295,296,301,324,333,350,351,359,360,362,363,365,366,368,373,393,419,431,439,440,446,449,450,484,500,501,502,503,521,524,527,528,],[5,-29,-52,-67,-65,-68,-100,-63,5,5,-309,-60,-309,-119,-118,-62,-95,-117,-66,-99,-64,5,-309,-98,-97,-96,5,-307,-69,-84,5,5,-10,-9,-86,5,-87,5,-166,-53,-61,-88,-83,5,5,-70,-85,5,5,-308,5,5,-145,-146,-142,5,-30,-167,-36,5,5,-35,5,-76,-78,-200,-75,5,-72,-198,-77,-74,-73,-199,5,5,-143,-71,5,5,5,5,-31,5,-34,5,-202,-217,-218,-201,-214,5,-215,-78,-80,-144,-33,5,-32,-205,-216,-203,-213,-79,-204,-206,-80,-208,-209,-207,-210,-212,-211,]),'VOLATILE':([0,1,2,3,4,6,7,8,9,10,11,12,14,16,17,18,19,21,22,24,25,26,27,28,29,31,33,34,35,36,37,38,39,40,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,61,63,69,72,73,77,78,79,84,85,86,88,91,97,100,101,102,104,111,115,117,125,126,127,129,130,131,132,133,134,135,136,137,138,139,142,143,147,149,150,151,157,164,186,206,212,214,216,218,227,228,229,230,231,233,236,240,241,242,243,244,245,246,248,253,256,259,261,268,269,271,282,295,296,301,323,324,333,335,336,350,351,359,360,362,363,365,366,368,369,370,373,385,387,393,419,431,439,440,446,449,450,484,500,501,502,503,521,524,527,528,],[26,-114,-29,-52,-110,-102,-67,-108,-65,-68,-100,-63,-112,-115,26,26,-221,-101,-111,-60,26,-119,26,-118,-62,-95,-117,-103,-116,-66,-104,-99,26,-64,26,-107,26,-109,-98,-97,-93,-106,-113,-96,-105,26,26,-152,-307,-153,-69,-94,-84,26,26,-132,-133,26,-91,26,-89,-90,-92,-166,26,-53,-61,-83,26,26,26,26,-70,-85,26,26,-308,26,26,-145,-130,-135,26,-146,-142,26,26,-30,-167,-36,26,26,-35,26,-154,-76,-78,-200,-75,26,-72,-198,-77,-74,-73,-199,26,-137,26,-139,-134,-143,-131,-129,-128,-71,26,26,26,26,26,26,26,-31,26,26,-34,26,-155,-156,-202,-217,-218,-201,-214,26,-215,-78,-80,-136,-138,-144,26,26,-33,26,-32,-205,-216,-203,-213,-79,-204,-206,-80,-208,-209,-207,-210,-212,-211,]),'DEFAULT':([10,58,61,104,125,131,212,214,216,218,227,228,229,230,231,233,236,239,349,350,351,358,359,360,362,365,366,368,439,440,445,446,449,450,481,482,483,484,500,501,502,503,514,521,523,524,526,527,528,],[-68,-307,-69,-83,213,-308,-76,-78,-200,-75,213,-72,-198,-77,-74,-73,-199,213,213,-202,-217,213,-218,-201,-214,-215,213,-80,-205,-216,213,-203,-213,-79,213,213,213,-204,-206,-80,-208,-209,213,-207,213,-210,213,-212,-211,]),'ELLIPSIS':([151,],[264,]),'RBRACKET':([26,28,33,56,97,98,105,115,116,131,143,149,152,167,170,171,173,174,175,177,178,179,180,181,183,185,187,189,190,191,194,195,196,197,198,199,200,217,259,260,266,267,269,270,280,281,297,298,299,300,326,328,331,332,334,338,378,379,385,386,388,389,395,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,422,423,424,427,428,429,436,443,454,457,461,462,471,473,475,476,490,493,496,509,513,519,520,],[-119,-118,-117,-309,-166,-27,-294,-28,-309,-308,-309,-167,-309,-257,296,-295,-285,-3,-300,-301,-4,-302,-283,-303,-236,-305,-297,324,-259,-286,-299,-284,-298,-271,-222,-296,-238,-219,-28,-309,381,382,-309,-309,393,-261,-304,-260,-257,-262,-280,-279,-306,-263,431,-235,455,456,-28,-309,464,465,-223,-243,-248,-240,-247,-239,-242,-241,-252,-245,-246,-251,-256,-250,-249,-253,-255,-244,-254,-287,-276,-275,-274,-278,-277,475,480,-220,488,489,491,492,-258,-273,-272,-264,507,508,-237,-288,-281,525,-282,]),'SEMI':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,16,18,19,21,22,24,25,26,27,28,29,31,33,34,35,36,37,38,40,42,43,44,45,46,48,49,50,51,52,53,54,57,58,59,61,62,63,64,65,66,67,70,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,93,94,95,101,102,103,104,105,125,126,128,129,130,131,132,134,135,136,137,138,139,145,147,150,164,167,171,173,175,177,179,180,181,183,185,187,190,191,194,195,196,197,198,199,200,206,207,208,209,212,214,216,217,218,219,222,225,226,227,228,229,230,231,232,233,234,236,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,262,263,281,296,297,298,299,300,324,326,328,331,332,335,336,338,349,350,351,352,358,359,360,361,362,363,364,365,366,368,369,370,372,373,375,376,393,395,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,422,423,424,427,428,431,437,439,440,443,445,446,447,448,449,450,452,453,455,456,471,473,475,476,479,481,482,483,484,485,486,488,489,496,500,501,502,503,504,509,513,514,517,520,521,523,524,526,527,528,],[36,-114,-29,-52,-110,-102,-67,-108,-65,-68,-100,-63,-309,-112,-115,-309,-221,-101,-111,-60,-309,-119,-309,-118,-62,-95,-117,-103,-116,-66,-104,-99,-64,36,-107,-309,-109,104,-98,-97,-93,-106,-113,-96,-105,-152,-307,-153,-69,-82,-94,-16,-15,-126,-124,-309,-309,-10,-9,-86,-132,-133,134,-87,-20,-19,-37,-91,-162,-89,-54,-90,-81,-92,-122,-120,-163,-53,-61,-88,-83,-294,-309,-70,-162,134,134,-308,134,-145,-130,-135,-309,-146,-142,-55,-30,-36,-35,-257,-295,-285,-300,-301,-302,-283,-303,-236,-305,-297,-259,-286,-299,-284,-298,-271,-222,-296,-238,-154,-125,-177,-127,-76,-78,-200,-219,-75,351,-14,-294,359,-309,-72,-198,-77,-74,362,-73,-13,-199,365,-309,134,-137,134,-139,-134,-143,-131,-149,-129,-25,-147,373,-128,-26,-121,-71,-38,-123,-261,-31,-304,-260,-257,-262,-34,-280,-279,-306,-263,-155,-156,-235,-309,-202,-217,440,-309,-218,-201,-13,-214,-309,449,-215,-78,-80,-136,-138,-151,-144,-44,-43,-33,-223,-243,-248,-240,-247,-239,-242,-241,-252,-245,-246,-251,-256,-250,-249,-253,-255,-244,-254,-287,-276,-275,-274,-278,-277,-32,-178,-205,-216,-220,-309,-203,485,-309,-213,-79,-150,-148,-39,-42,-258,-273,-272,-264,-179,-309,-309,-309,-204,-309,505,-41,-40,-237,-206,-80,-208,-209,515,-288,-281,-309,524,-282,-207,-309,-210,-309,-212,-211,]),'PPHASH':([0,7,9,10,12,24,29,36,40,42,61,102,104,126,131,256,350,],[7,-67,-65,-68,-63,-60,-62,-66,-64,7,-69,-61,-83,-70,-308,-71,-202,]),'DOUBLE':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,16,17,18,19,21,22,24,25,26,27,28,29,31,33,34,35,36,37,38,40,42,43,44,45,48,49,50,51,52,53,54,55,57,58,59,61,63,69,70,72,73,74,75,76,77,78,79,80,84,85,86,88,91,97,101,102,103,104,108,111,125,126,127,129,130,131,132,133,134,135,136,137,138,139,142,147,149,150,151,157,164,186,206,212,214,216,218,227,228,229,230,231,233,236,240,241,242,243,244,245,246,248,253,256,268,271,282,295,296,301,323,324,333,335,336,350,351,359,360,362,363,365,366,368,369,370,373,393,419,431,439,440,446,449,450,484,500,501,502,503,521,524,527,528,],[8,-114,-29,-52,-110,-102,-67,-108,-65,-68,-100,-63,8,-112,-115,8,-309,-221,-101,-111,-60,-309,-119,8,-118,-62,-95,-117,-103,-116,-66,-104,-99,-64,8,-107,-309,-109,-98,-97,-93,-106,-113,-96,-105,8,-152,-307,-153,-69,-94,-84,8,8,8,-10,-9,-86,-132,-133,8,-87,-91,8,-89,-90,-92,-166,-53,-61,-88,-83,8,8,8,-70,-85,8,8,-308,8,8,-145,-130,-135,8,-146,-142,8,-30,-167,-36,8,8,-35,8,-154,-76,-78,-200,-75,8,-72,-198,-77,-74,-73,-199,8,-137,8,-139,-134,-143,-131,-129,-128,-71,8,8,8,8,-31,8,8,-34,8,-155,-156,-202,-217,-218,-201,-214,8,-215,-78,-80,-136,-138,-144,-33,8,-32,-205,-216,-203,-213,-79,-204,-206,-80,-208,-209,-207,-210,-212,-211,]),'STATIC':([0,1,2,3,4,6,7,8,9,10,11,12,14,16,17,18,19,21,22,24,25,26,27,28,29,31,33,34,35,36,37,38,40,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,61,63,69,72,73,77,78,84,85,86,88,91,97,101,102,104,111,115,125,126,127,131,136,142,143,147,149,150,151,157,164,206,212,214,216,218,227,228,229,230,231,233,236,241,243,244,256,259,268,269,271,296,324,335,336,350,351,359,360,362,363,365,366,368,369,370,385,393,419,431,439,440,446,449,450,484,500,501,502,503,521,524,527,528,],[49,-114,-29,-52,-110,-102,-67,-108,-65,-68,-100,-63,-112,-115,49,49,-221,-101,-111,-60,49,-119,49,-118,-62,-95,-117,-103,-116,-66,-104,-99,-64,49,-107,49,-109,-98,-97,-93,-106,-113,-96,-105,49,117,-152,-307,-153,-69,-94,-84,49,49,-132,-133,-91,49,-89,-90,-92,-166,-53,-61,-83,49,165,49,-70,-85,-308,-135,49,261,-30,-167,-36,49,49,-35,-154,-76,-78,-200,-75,49,-72,-198,-77,-74,-73,-199,-137,-139,-134,-71,377,49,387,49,-31,-34,-155,-156,-202,-217,-218,-201,-214,49,-215,-78,-80,-136,-138,460,-33,49,-32,-205,-216,-203,-213,-79,-204,-206,-80,-208,-209,-207,-210,-212,-211,]),'LOR':([105,131,167,171,173,175,177,179,180,181,183,185,187,190,191,194,195,196,197,199,200,225,281,297,298,299,300,326,328,331,332,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,422,423,424,427,428,471,473,475,476,509,513,520,],[-294,-308,-257,-295,-285,-300,-301,-302,-283,-303,314,-305,-297,-259,-286,-299,-284,-298,-271,-296,-238,-294,-261,-304,-260,-257,-262,-280,-279,-306,-263,-243,-248,-240,-247,-239,-242,-241,-252,-245,-246,-251,-256,-250,-249,-253,-255,-244,-254,-287,-276,-275,-274,-278,-277,-258,-273,-272,-264,-288,-281,-282,]),'PLUS':([10,26,28,33,56,58,61,97,98,100,104,105,115,116,117,124,125,131,143,146,149,152,165,166,167,169,171,172,173,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,204,210,211,212,214,216,218,219,224,225,227,228,229,230,231,233,236,239,250,259,260,261,267,269,270,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,326,327,328,330,331,332,333,340,344,345,346,349,350,351,353,354,355,356,358,359,360,362,363,365,366,368,371,377,379,380,385,386,387,389,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,422,423,424,427,428,434,435,439,440,445,446,448,449,450,460,462,463,469,470,471,472,473,474,475,476,477,478,481,482,483,484,485,487,500,501,502,503,505,509,511,512,513,514,515,520,521,523,524,526,527,528,],[-68,-119,-118,-117,-309,-307,-69,-166,-27,-28,-83,-294,-28,172,-309,172,172,-308,-309,172,-167,172,172,172,-257,-269,-295,-267,-285,-300,172,-301,-302,-283,-303,172,308,-268,-305,172,-297,-270,-266,-259,-286,172,-265,-299,-284,-298,-271,-296,-238,172,172,-309,-266,-76,-78,-200,-75,172,172,-294,172,-72,-198,-77,-74,-73,-199,172,172,-28,172,-309,-266,-309,172,-261,172,-224,172,-229,-227,-230,-234,-228,-231,-225,-233,-226,-232,-304,-260,-257,-262,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,-280,172,-279,172,-306,-263,172,172,-11,-12,172,172,-202,-217,172,172,172,172,172,-218,-201,-214,172,-215,172,-80,172,172,-266,172,-28,172,-309,-266,-243,308,-240,308,-239,-242,-241,308,308,308,308,308,308,308,308,308,308,308,-287,172,-276,-275,-274,-278,-277,-182,-309,-205,-216,172,-203,172,-213,-79,172,-266,172,172,172,-258,-309,-273,172,-272,-264,172,-11,172,172,172,-204,172,172,-206,-80,-208,-209,172,-288,172,-309,-281,172,172,-282,-207,172,-210,172,-212,-211,]),'RPAREN':([1,2,3,4,6,8,11,14,16,19,21,22,26,28,31,33,34,35,37,38,39,43,45,48,49,50,51,52,53,54,55,57,59,63,77,78,83,84,86,87,88,91,96,97,98,99,100,101,105,106,107,109,110,111,112,113,114,131,135,136,142,144,145,147,148,149,150,153,154,155,156,157,158,159,160,161,162,164,167,171,173,175,177,179,180,181,183,185,187,190,191,194,195,196,197,198,199,200,206,217,222,241,243,244,246,248,253,257,258,262,264,265,268,271,272,273,274,275,276,277,278,279,281,296,297,298,299,300,321,322,323,324,326,327,328,331,332,335,336,361,369,370,375,376,381,382,383,384,390,391,392,393,394,395,397,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,419,420,421,422,423,424,425,426,427,428,430,431,441,442,443,444,455,456,458,459,464,465,466,471,473,475,476,488,489,491,492,494,495,496,498,505,506,507,508,509,513,515,516,518,520,522,525,],[-114,-29,-52,-110,-102,-108,-100,-112,-115,-221,-101,-111,-119,-118,-95,-117,-103,-116,-104,-99,-309,-107,-109,-98,-97,-93,-106,-113,-96,-105,-309,-152,-153,-94,-132,-133,-37,-91,-89,-54,-90,-92,147,-166,-27,-164,-28,-53,-294,150,-168,-17,-175,-309,-18,-170,164,-308,-130,-135,-309,262,-55,-30,-165,-167,-36,-56,-1,-172,-190,-309,-173,-45,-188,-2,-174,-35,-257,-295,-285,-300,-301,-302,-283,-303,-236,-305,-297,-259,-286,-299,-284,-298,-271,-222,-296,-238,-154,-219,-14,-137,-139,-134,-131,-129,-128,375,376,-38,-169,-171,-309,-309,-23,391,-188,392,-24,-57,-189,-176,-261,-31,-304,-260,-257,-262,417,418,-309,-34,-280,424,-279,-306,-263,-155,-156,-13,-136,-138,-44,-43,-193,-195,458,459,466,-191,-197,-33,467,-223,469,-243,-248,-240,-247,-239,-242,-241,-252,-245,-246,-251,-256,-250,-249,-253,-255,-244,-254,-287,-309,-188,-187,-276,-275,-274,-292,473,-278,-277,476,-32,481,482,-220,483,-39,-42,-51,-50,-192,-194,-196,-258,-273,-272,-264,-41,-40,-46,-49,-289,509,-237,-293,-309,517,-48,-47,-288,-281,-309,523,-290,-282,526,-291,]),'EQUALS':([2,3,66,83,85,87,93,95,101,105,120,128,131,145,147,150,164,167,171,173,175,177,179,180,181,185,187,190,191,194,195,196,197,199,225,262,281,296,297,298,299,300,324,326,328,331,332,341,342,375,376,393,417,422,423,424,427,428,431,433,438,455,456,471,473,475,476,480,488,489,509,513,520,],[-29,-52,124,-37,-162,-54,146,-163,-53,-294,204,-162,-308,-55,-30,-36,-35,283,-295,-285,-300,-301,-302,-283,-303,-305,-297,-259,-286,-299,-284,-298,-271,-296,-294,-38,-261,-31,-304,-260,-257,-262,-34,-280,-279,-306,-263,-183,434,-44,-43,-33,-287,-276,-275,-274,-278,-277,-32,-184,-186,-39,-42,-258,-273,-272,-264,-185,-41,-40,-288,-281,-282,]),'NOT':([10,26,28,33,56,58,61,97,98,100,104,115,116,117,124,125,131,143,146,149,152,165,166,169,172,176,182,184,186,188,189,192,193,201,204,210,211,212,214,216,218,219,224,227,228,229,230,231,233,236,239,250,259,260,261,267,269,270,282,283,284,285,286,287,288,289,290,291,292,293,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,327,330,333,340,344,345,346,349,350,351,353,354,355,356,358,359,360,362,363,365,366,368,371,377,379,380,385,386,387,389,418,434,435,439,440,445,446,448,449,450,460,462,463,469,470,472,474,477,478,481,482,483,484,485,487,500,501,502,503,505,511,512,514,515,521,523,524,526,527,528,],[-68,-119,-118,-117,-309,-307,-69,-166,-27,-28,-83,-28,169,-309,169,169,-308,-309,169,-167,169,169,169,-269,-267,169,169,-268,169,-270,-266,169,-265,169,169,-309,-266,-76,-78,-200,-75,169,169,169,-72,-198,-77,-74,-73,-199,169,169,-28,169,-309,-266,-309,169,169,-224,169,-229,-227,-230,-234,-228,-231,-225,-233,-226,-232,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,-11,-12,169,169,-202,-217,169,169,169,169,169,-218,-201,-214,169,-215,169,-80,169,169,-266,169,-28,169,-309,-266,169,-182,-309,-205,-216,169,-203,169,-213,-79,169,-266,169,169,169,-309,169,169,-11,169,169,169,-204,169,169,-206,-80,-208,-209,169,169,-309,169,169,-207,169,-210,169,-212,-211,]),'TYPEID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,42,43,44,45,47,48,49,50,51,52,53,54,55,57,58,59,61,63,69,70,72,73,74,75,76,77,78,79,80,84,85,86,88,89,91,92,97,98,99,100,101,102,103,104,108,111,123,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,142,147,148,149,150,151,157,160,164,186,206,212,214,216,218,227,228,229,230,231,233,236,240,241,242,243,244,245,246,248,253,256,268,271,282,295,296,301,324,325,329,333,335,336,350,351,359,360,362,363,365,366,368,369,370,373,374,393,419,431,439,440,446,449,450,484,500,501,502,503,521,524,527,528,],[19,-114,-29,-52,-110,59,-102,-67,-108,-65,-68,-100,-63,19,-112,-115,19,-309,-221,78,-101,-111,-60,-309,-119,83,-118,-62,-95,-141,-117,-103,-116,-66,-104,-99,-309,-64,19,-107,-309,-109,-140,-98,-97,-93,-106,-113,-96,-105,19,-152,-307,-153,-69,-94,-84,19,19,83,-10,-9,-86,-132,-133,19,-87,-91,19,-89,-90,83,-92,83,-166,-27,-164,-28,-53,-61,-88,-83,19,159,83,19,-70,-85,19,19,-308,19,19,-145,-130,-135,83,-146,-142,83,19,-30,-165,-167,-36,19,19,159,-35,19,-154,-76,-78,-200,-75,19,-72,-198,-77,-74,-73,-199,19,-137,19,-139,-134,-143,-131,-129,-128,-71,19,19,19,19,-31,19,-34,422,427,19,-155,-156,-202,-217,-218,-201,-214,19,-215,-78,-80,-136,-138,-144,83,-33,19,-32,-205,-216,-203,-213,-79,-204,-206,-80,-208,-209,-207,-210,-212,-211,]),'LT':([105,131,167,171,173,175,177,179,180,181,183,185,187,190,191,194,195,196,197,199,200,225,281,297,298,299,300,326,328,331,332,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,422,423,424,427,428,471,473,475,476,509,513,520,],[-294,-308,-257,-295,-285,-300,-301,-302,-283,-303,312,-305,-297,-259,-286,-299,-284,-298,-271,-296,-238,-294,-261,-304,-260,-257,-262,-280,-279,-306,-263,-243,-248,-240,-247,-239,-242,-241,312,-245,-246,312,312,312,-249,312,312,-244,312,-287,-276,-275,-274,-278,-277,-258,-273,-272,-264,-288,-281,-282,]),'COLON':([1,2,3,4,6,8,14,16,19,21,22,26,28,33,34,35,37,43,45,51,52,54,57,59,77,78,83,87,95,101,105,128,131,135,136,137,145,147,150,164,167,171,173,175,177,179,180,181,183,185,187,190,191,194,195,196,197,198,199,200,206,213,217,225,241,243,244,246,247,248,253,262,281,296,297,298,299,300,324,326,328,331,332,335,336,338,357,369,370,374,375,376,393,395,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,422,423,424,427,428,431,443,455,456,471,473,475,476,488,489,496,509,513,520,],[-114,-29,-52,-110,-102,-108,-112,-115,-221,-101,-111,-119,-118,-117,-103,-116,-104,-107,-109,-106,-113,-105,-152,-153,-132,-133,-37,-54,-163,-53,-294,-162,-308,-130,-135,250,-55,-30,-36,-35,-257,-295,-285,-300,-301,-302,-283,-303,-236,-305,-297,-259,-286,-299,-284,-298,-271,-222,-296,-238,-154,349,-219,358,-137,-139,-134,-131,371,-129,-128,-38,-261,-31,-304,-260,-257,-262,-34,-280,-279,-306,-263,-155,-156,-235,445,-136,-138,250,-44,-43,-33,-223,-243,-248,-240,470,-247,-239,-242,-241,-252,-245,-246,-251,-256,-250,-249,-253,-255,-244,-254,-287,-276,-275,-274,-278,-277,-32,-220,-39,-42,-258,-273,-272,-264,-41,-40,-237,-288,-281,-282,]),'PLUSPLUS':([10,26,28,33,56,58,61,97,98,100,104,105,115,116,117,124,125,131,143,146,149,152,165,166,169,171,172,173,175,176,177,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,204,210,211,212,214,216,218,219,224,225,227,228,229,230,231,233,236,239,250,259,260,261,267,269,270,282,283,284,285,286,287,288,289,290,291,292,293,294,297,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,326,327,328,330,331,333,340,344,345,346,349,350,351,353,354,355,356,358,359,360,362,363,365,366,368,371,377,379,380,385,386,387,389,417,418,422,423,424,427,428,434,435,439,440,445,446,448,449,450,460,462,463,469,470,472,473,474,475,477,478,481,482,483,484,485,487,500,501,502,503,505,509,511,512,513,514,515,520,521,523,524,526,527,528,],[-68,-119,-118,-117,-309,-307,-69,-166,-27,-28,-83,-294,-28,176,-309,176,176,-308,-309,176,-167,176,176,176,-269,-295,-267,-285,-300,176,-301,-302,-283,-303,176,-268,-305,176,-297,-270,-266,328,-286,176,-265,-299,-284,-298,-271,-296,176,176,-309,-266,-76,-78,-200,-75,176,176,-294,176,-72,-198,-77,-74,-73,-199,176,176,-28,176,-309,-266,-309,176,176,-224,176,-229,-227,-230,-234,-228,-231,-225,-233,-226,-232,-304,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,-280,176,-279,176,-306,176,176,-11,-12,176,176,-202,-217,176,176,176,176,176,-218,-201,-214,176,-215,176,-80,176,176,-266,176,-28,176,-309,-266,-287,176,-276,-275,-274,-278,-277,-182,-309,-205,-216,176,-203,176,-213,-79,176,-266,176,176,176,-309,-273,176,-272,176,-11,176,176,176,-204,176,176,-206,-80,-208,-209,176,-288,176,-309,-281,176,176,-282,-207,176,-210,176,-212,-211,]),'LSHIFTEQUAL':([105,131,167,171,173,175,177,179,180,181,185,187,190,191,194,195,196,197,199,225,281,297,298,299,300,326,328,331,332,417,422,423,424,427,428,471,473,475,476,509,513,520,],[-294,-308,290,-295,-285,-300,-301,-302,-283,-303,-305,-297,-259,-286,-299,-284,-298,-271,-296,-294,-261,-304,-260,-257,-262,-280,-279,-306,-263,-287,-276,-275,-274,-278,-277,-258,-273,-272,-264,-288,-281,-282,]),'LAND':([105,131,167,171,173,175,177,179,180,181,183,185,187,190,191,194,195,196,197,199,200,225,281,297,298,299,300,326,328,331,332,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,422,423,424,427,428,471,473,475,476,509,513,520,],[-294,-308,-257,-295,-285,-300,-301,-302,-283,-303,318,-305,-297,-259,-286,-299,-284,-298,-271,-296,-238,-294,-261,-304,-260,-257,-262,-280,-279,-306,-263,-243,-248,-240,-247,-239,-242,-241,-252,-245,-246,-251,318,-250,-249,-253,-255,-244,-254,-287,-276,-275,-274,-278,-277,-258,-273,-272,-264,-288,-281,-282,]),'STRING_LITERAL':([10,26,28,33,56,58,61,97,98,100,104,115,116,117,124,125,131,143,146,149,152,165,166,169,172,173,176,181,182,184,186,188,189,192,193,201,204,210,211,212,214,216,218,219,224,227,228,229,230,231,233,236,239,250,259,260,261,267,269,270,282,283,284,285,286,287,288,289,290,291,292,293,294,297,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,327,330,333,340,344,345,346,349,350,351,353,354,355,356,358,359,360,362,363,365,366,368,371,377,379,380,385,386,387,389,418,434,435,439,440,445,446,448,449,450,460,462,463,469,470,472,474,477,478,481,482,483,484,485,487,500,501,502,503,505,511,512,514,515,521,523,524,526,527,528,],[-68,-119,-118,-117,-309,-307,-69,-166,-27,-28,-83,-28,181,-309,181,181,-308,-309,181,-167,181,181,181,-269,-267,297,181,-303,181,-268,181,-270,-266,181,-265,181,181,-309,-266,-76,-78,-200,-75,181,181,181,-72,-198,-77,-74,-73,-199,181,181,-28,181,-309,-266,-309,181,181,-224,181,-229,-227,-230,-234,-228,-231,-225,-233,-226,-232,-304,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,-11,-12,181,181,-202,-217,181,181,181,181,181,-218,-201,-214,181,-215,181,-80,181,181,-266,181,-28,181,-309,-266,181,-182,-309,-205,-216,181,-203,181,-213,-79,181,-266,181,181,181,-309,181,181,-11,181,181,181,-204,181,181,-206,-80,-208,-209,181,181,-309,181,181,-207,181,-210,181,-212,-211,]),'WCHAR_CONST':([10,26,28,33,56,58,61,97,98,100,104,115,116,117,124,125,131,143,146,149,152,165,166,169,172,176,182,184,186,188,189,192,193,201,204,210,211,212,214,216,218,219,224,227,228,229,230,231,233,236,239,250,259,260,261,267,269,270,282,283,284,285,286,287,288,289,290,291,292,293,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,327,330,333,340,344,345,346,349,350,351,353,354,355,356,358,359,360,362,363,365,366,368,371,377,379,380,385,386,387,389,418,434,435,439,440,445,446,448,449,450,460,462,463,469,470,472,474,477,478,481,482,483,484,485,487,500,501,502,503,505,511,512,514,515,521,523,524,526,527,528,],[-68,-119,-118,-117,-309,-307,-69,-166,-27,-28,-83,-28,179,-309,179,179,-308,-309,179,-167,179,179,179,-269,-267,179,179,-268,179,-270,-266,179,-265,179,179,-309,-266,-76,-78,-200,-75,179,179,179,-72,-198,-77,-74,-73,-199,179,179,-28,179,-309,-266,-309,179,179,-224,179,-229,-227,-230,-234,-228,-231,-225,-233,-226,-232,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,-11,-12,179,179,-202,-217,179,179,179,179,179,-218,-201,-214,179,-215,179,-80,179,179,-266,179,-28,179,-309,-266,179,-182,-309,-205,-216,179,-203,179,-213,-79,179,-266,179,179,179,-309,179,179,-11,179,179,179,-204,179,179,-206,-80,-208,-209,179,179,-309,179,179,-207,179,-210,179,-212,-211,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'direct_id_declarator':([0,13,27,30,41,42,70,73,89,92,111,123,137,140,157,160,274,374,],[3,3,3,3,101,3,3,3,3,101,3,3,3,3,3,101,101,3,]),'direct_typeid_noparen_declarator':([111,160,],[153,277,]),'iteration_statement':([125,227,239,349,358,366,445,481,482,483,514,523,526,],[212,212,212,212,212,212,212,212,212,212,212,212,212,]),'assignment_expression_opt':([116,152,260,270,386,],[170,266,378,388,461,]),'parameter_type_list':([55,142,157,268,271,419,],[114,258,276,384,276,276,]),'declaration_list_opt':([17,85,],[68,141,]),'translation_unit':([0,],[42,]),'id_init_declarator_list_opt':([13,70,],[62,62,]),'designation':([210,435,472,512,],[345,345,345,345,]),'pppragma_directive':([0,42,79,125,129,130,132,227,239,240,242,349,358,366,445,481,482,483,514,523,526,],[9,9,138,214,138,138,138,214,366,138,138,366,366,214,366,366,366,366,366,366,366,]),'declaration_specifiers_no_type_opt':([18,25,44,],[76,80,103,]),'brace_close':([79,122,129,130,132,202,203,215,240,242,347,435,497,512,],[136,206,241,243,244,335,336,350,369,370,437,479,513,520,]),'identifier_list_opt':([55,142,268,],[106,257,383,]),'designator':([210,342,435,472,512,],[341,433,341,341,341,]),'block_item_list_opt':([125,],[215,]),'block_item':([125,227,],[216,360,]),'initializer_list':([210,472,],[343,497,]),'empty':([0,13,17,18,25,27,39,44,55,56,70,73,85,111,116,117,125,137,142,143,152,157,210,227,239,260,261,268,269,270,271,323,349,358,363,366,386,387,419,435,445,448,472,481,482,483,485,505,512,514,515,523,526,],[15,65,71,75,75,82,98,75,109,98,65,82,71,154,174,98,234,249,109,98,174,272,344,361,361,174,98,109,98,174,272,154,361,361,361,361,174,98,272,478,361,361,478,361,361,361,361,361,478,361,361,361,361,]),'struct_or_union_specifier':([0,13,17,42,55,70,72,79,85,108,125,129,130,132,133,142,151,157,186,227,240,242,268,271,282,295,301,333,363,419,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'function_specifier':([0,17,18,25,27,42,44,55,72,73,85,111,125,142,151,157,227,268,271,363,419,],[44,44,44,44,84,44,44,44,44,84,44,84,44,44,44,44,44,44,44,44,44,]),'unary_expression':([116,124,125,146,152,165,166,176,182,186,192,201,204,219,224,227,239,250,260,270,282,284,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,327,330,333,340,346,349,353,354,355,356,358,363,366,371,377,380,386,418,445,448,460,463,469,470,474,477,481,482,483,485,487,505,511,514,515,523,526,],[167,167,167,167,167,167,281,298,299,167,332,167,299,167,299,167,167,299,167,167,167,167,167,299,299,299,167,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,167,167,167,167,299,167,167,167,167,167,167,167,167,299,167,167,167,299,167,167,167,167,299,299,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'enumerator_list':([60,118,119,],[122,202,203,]),'constant_expression':([204,224,250,346,371,],[337,357,372,436,452,]),'assignment_expression':([116,124,125,146,152,165,186,201,219,227,239,260,270,282,284,301,305,327,330,333,340,349,353,354,355,356,358,363,366,377,380,386,445,448,460,463,474,477,481,482,483,485,487,505,511,514,515,523,526,],[178,208,217,208,178,280,217,334,217,217,217,178,178,217,395,217,217,425,217,217,208,217,217,217,443,217,217,217,217,454,457,178,217,217,490,493,498,208,217,217,217,217,217,217,217,217,217,217,217,]),'struct_declarator':([137,374,],[251,453,]),'id_init_declarator':([13,70,],[67,67,]),'storage_class_specifier':([0,17,18,25,27,42,44,55,72,73,85,111,125,142,151,157,227,268,271,363,419,],[25,25,25,25,88,25,25,25,25,88,25,88,25,25,25,25,25,25,25,25,25,]),'declaration_specifiers':([0,17,42,55,72,85,125,142,151,157,227,268,271,363,419,],[27,73,27,111,73,73,73,111,111,111,73,111,111,73,111,]),'function_definition':([0,42,],[29,29,]),'identifier':([55,116,124,125,142,146,152,163,165,166,176,182,186,192,201,204,219,224,227,239,250,260,268,270,282,284,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,327,330,333,340,346,348,349,353,354,355,356,358,363,366,371,377,380,386,418,445,448,460,463,468,469,470,474,477,481,482,483,485,487,505,510,511,514,515,523,526,],[110,180,180,180,110,180,180,279,180,180,180,180,180,180,180,180,180,180,180,180,180,180,110,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,438,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,494,180,180,180,180,180,180,180,180,180,180,518,180,180,180,180,180,]),'expression':([125,186,219,227,239,282,301,305,330,333,349,353,354,356,358,363,366,445,448,481,482,483,485,487,505,511,514,515,523,526,],[222,321,352,222,222,321,321,401,429,321,222,441,442,444,222,222,222,222,222,222,222,222,222,506,222,519,222,222,222,222,]),'initializer':([124,146,340,477,],[209,263,432,499,]),'designation_opt':([210,435,472,512,],[340,477,340,477,]),'type_specifier_no_typeid':([0,13,17,27,42,55,70,72,73,79,85,108,111,125,129,130,132,133,137,142,151,157,186,227,240,242,268,271,282,295,301,323,333,363,419,],[35,35,35,91,35,35,35,35,91,35,35,35,91,35,35,35,35,35,253,35,35,35,35,35,35,35,35,35,35,35,35,253,35,35,35,]),'typeid_declarator':([27,73,89,123,137,140,374,],[95,95,144,95,95,95,95,]),'pp_directive':([0,42,],[40,40,]),'declaration_list':([17,85,],[72,72,]),'unified_wstring_literal':([116,124,125,146,152,165,166,176,182,186,192,201,204,219,224,227,239,250,260,270,282,284,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,327,330,333,340,346,349,353,354,355,356,358,363,366,371,377,380,386,418,445,448,460,463,469,470,474,477,481,482,483,485,487,505,511,514,515,523,526,],[191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,]),'selection_statement':([125,227,239,349,358,366,445,481,482,483,514,523,526,],[218,218,218,218,218,218,218,218,218,218,218,218,218,]),'assignment_operator':([167,],[284,]),'pragmacomp_or_statement':([239,349,358,445,481,482,483,514,523,526,],[367,439,446,484,500,502,503,521,527,528,]),'constant':([116,124,125,146,152,165,166,176,182,186,192,201,204,219,224,227,239,250,260,270,282,284,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,327,330,333,340,346,349,353,354,355,356,358,363,366,371,377,380,386,418,445,448,460,463,469,470,474,477,481,482,483,485,487,505,511,514,515,523,526,],[195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,]),'argument_expression_list':([327,],[426,]),'init_declarator':([27,73,123,140,],[94,94,207,255,]),'struct_declarator_list':([137,],[254,]),'unary_operator':([116,124,125,146,152,165,166,176,182,186,192,201,204,219,224,227,239,250,260,270,282,284,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,327,330,333,340,346,349,353,354,355,356,358,363,366,371,377,380,386,418,445,448,460,463,469,470,474,477,481,482,483,485,487,505,511,514,515,523,526,],[182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,]),'struct_declaration':([79,129,130,132,240,242,],[139,139,139,245,245,245,]),'translation_unit_or_empty':([0,],[23,]),'abstract_declarator_opt':([111,323,],[162,421,]),'enum_specifier':([0,13,17,42,55,70,72,79,85,108,125,129,130,132,133,142,151,157,186,227,240,242,268,271,282,295,301,333,363,419,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'declarator':([27,73,123,137,140,374,],[93,93,93,247,93,247,]),'expression_opt':([125,227,239,349,358,363,366,445,448,481,482,483,485,505,514,515,523,526,],[226,226,226,226,226,447,226,226,486,226,226,226,504,516,226,522,226,226,]),'block_item_list':([125,],[227,]),'type_specifier':([0,13,17,42,55,70,72,79,85,108,125,129,130,132,133,142,151,157,186,227,240,242,268,271,282,295,301,333,363,419,],[50,63,50,50,50,63,50,135,50,63,50,135,135,135,246,50,50,50,135,50,135,135,50,50,135,135,135,135,50,50,]),'id_init_declarator_list':([13,70,],[64,64,]),'init_declarator_list':([27,73,],[81,81,]),'designator_list':([210,435,472,512,],[342,342,342,342,]),'labeled_statement':([125,227,239,349,358,366,445,481,482,483,514,523,526,],[228,228,228,228,228,228,228,228,228,228,228,228,228,]),'parameter_list':([55,142,157,268,271,419,],[107,107,107,107,107,107,]),'declaration_specifiers_no_type':([0,17,18,25,42,44,55,72,85,125,142,151,157,227,268,271,363,419,],[13,70,74,74,13,74,108,70,70,70,108,108,108,70,108,108,70,108,]),'initializer_list_opt':([210,],[347,]),'jump_statement':([125,227,239,349,358,366,445,481,482,483,514,523,526,],[230,230,230,230,230,230,230,230,230,230,230,230,230,]),'id_declarator':([0,13,27,30,42,70,73,89,111,123,137,140,157,374,],[17,66,85,96,17,66,128,96,155,128,128,128,96,128,]),'compound_statement':([68,125,141,227,239,349,358,366,445,481,482,483,514,523,526,],[126,231,256,231,231,231,231,231,231,231,231,231,231,231,231,]),'declaration':([0,17,42,72,85,125,227,363,],[12,69,12,127,69,229,229,448,]),'type_qualifier':([0,17,18,25,27,39,42,44,55,56,72,73,79,85,100,111,115,117,125,129,130,132,133,137,142,143,151,157,186,227,240,242,259,261,268,269,271,282,295,301,323,333,363,385,387,419,],[18,18,18,18,86,97,18,18,18,97,18,86,97,18,149,86,149,97,18,97,97,97,149,248,18,97,18,18,97,18,97,97,149,97,18,97,18,97,97,97,248,97,18,149,97,18,]),'direct_abstract_declarator':([111,157,160,274,323,419,420,],[156,156,278,278,156,156,278,]),'struct_or_union':([0,13,17,42,55,70,72,79,85,108,125,129,130,132,133,142,151,157,186,227,240,242,268,271,282,295,301,333,363,419,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'init_declarator_list_opt':([27,73,],[90,90,]),'abstract_declarator':([111,157,323,419,],[161,273,161,273,]),'binary_expression':([116,124,125,146,152,165,186,201,204,219,224,227,239,250,260,270,282,284,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,327,330,333,340,346,349,353,354,355,356,358,363,366,371,377,380,386,445,448,460,463,470,474,477,481,482,483,485,487,505,511,514,515,523,526,],[183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,398,399,400,183,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,]),'direct_typeid_declarator':([27,73,89,92,123,137,140,374,],[87,87,87,145,87,87,87,87,]),'statement':([125,227,239,349,358,366,445,481,482,483,514,523,526,],[236,236,368,368,368,450,368,501,368,368,368,368,368,]),'struct_declaration_list':([79,129,130,],[132,240,242,]),'type_qualifier_list':([39,56,79,117,129,130,132,143,186,240,242,261,269,282,295,301,333,387,],[100,115,133,100,133,133,133,259,133,133,133,100,385,133,133,133,133,100,]),'struct_declarator_list_opt':([137,],[252,]),'identifier_list':([55,142,268,],[112,112,112,]),'typedef_name':([0,13,17,42,55,70,72,79,85,108,125,129,130,132,133,142,151,157,186,227,240,242,268,271,282,295,301,333,363,419,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'expression_statement':([125,227,239,349,358,366,445,481,482,483,514,523,526,],[233,233,233,233,233,233,233,233,233,233,233,233,233,]),'typeid_noparen_declarator':([111,],[158,]),'brace_open':([5,20,57,59,68,77,78,124,125,141,146,227,239,340,349,358,366,418,445,467,469,476,477,481,482,483,514,523,526,],[60,79,118,119,125,129,130,210,125,125,210,125,125,210,125,125,125,472,125,472,472,472,210,125,125,125,125,125,125,]),'postfix_expression':([116,124,125,146,152,165,166,176,182,186,192,201,204,219,224,227,239,250,260,270,282,284,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,327,330,333,340,346,349,353,354,355,356,358,363,366,371,377,380,386,418,445,448,460,463,469,470,474,477,481,482,483,485,487,505,511,514,515,523,526,],[190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,]),'type_name':([186,282,295,301,333,],[322,394,396,397,430,]),'offsetof_member_designator':([468,],[495,]),'pointer':([0,13,27,30,42,70,73,89,99,111,123,137,140,157,323,374,419,],[41,41,92,41,41,41,92,92,148,160,92,92,92,274,420,92,420,]),'parameter_type_list_opt':([157,271,419,],[275,390,275,]),'external_declaration':([0,42,],[24,102,]),'decl_body':([0,17,42,72,85,125,227,363,],[46,46,46,46,46,46,46,46,]),'type_qualifier_list_opt':([39,56,117,143,261,269,387,],[99,116,201,260,380,386,463,]),'primary_expression':([116,124,125,146,152,165,166,176,182,186,192,201,204,219,224,227,239,250,260,270,282,284,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,327,330,333,340,346,349,353,354,355,356,358,363,366,371,377,380,386,418,445,448,460,463,469,470,474,477,481,482,483,485,487,505,511,514,515,523,526,],[197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,]),'unified_string_literal':([116,124,125,146,152,165,166,176,182,186,192,201,204,219,224,227,239,250,260,270,282,284,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,327,330,333,340,346,349,353,354,355,356,358,363,366,371,377,380,386,418,445,448,460,463,469,470,474,477,481,482,483,485,487,505,511,514,515,523,526,],[173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,]),'parameter_declaration':([55,142,151,157,268,271,419,],[113,113,265,113,113,113,113,]),'conditional_expression':([116,124,125,146,152,165,186,201,204,219,224,227,239,250,260,270,282,284,301,305,327,330,333,340,346,349,353,354,355,356,358,363,366,371,377,380,386,445,448,460,463,470,474,477,481,482,483,485,487,505,511,514,515,523,526,],[198,198,198,198,198,198,198,198,338,198,338,198,198,338,198,198,198,198,198,198,198,198,198,198,338,198,198,198,198,198,198,198,198,338,198,198,198,198,198,198,198,496,198,198,198,198,198,198,198,198,198,198,198,198,198,]),'enumerator':([60,118,119,205,],[121,121,121,339,]),'specifier_qualifier_list':([79,129,130,132,186,240,242,282,295,301,333,],[137,137,137,137,323,137,137,323,323,323,323,]),'cast_expression':([116,124,125,146,152,165,182,186,201,204,219,224,227,239,250,260,270,282,284,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,327,330,333,340,346,349,353,354,355,356,358,363,366,371,377,380,386,418,445,448,460,463,469,470,474,477,481,482,483,485,487,505,511,514,515,523,526,],[200,200,200,200,200,200,300,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,471,200,200,200,200,471,200,200,200,200,200,200,200,200,200,200,200,200,200,200,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',541),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',546),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',551),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',557),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',562),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',568),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',569),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',580),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',597),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',608),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',614),
  ('pragmacomp_or_statement -> pppragma_directive statement','pragmacomp_or_statement',2,'p_pragmacomp_or_statement','c_parser.py',661),
  ('pragmacomp_or_statement -> statement','pragmacomp_or_statement',1,'p_pragmacomp_or_statement','c_parser.py',662),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',681),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',682),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',741),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',750),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',751),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',761),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',766),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',771),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',777),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',782),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',787),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',792),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',797),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',802),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',808),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',809),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',810),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',811),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',812),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',817),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',822),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',823),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',824),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',825),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',826),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',827),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',828),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',829),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',830),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',831),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',832),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',833),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',838),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',839),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',840),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',841),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',846),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',847),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',848),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',853),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',854),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',862),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',863),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',868),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',869),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',874),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',875),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',882),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',887),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',892),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',897),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',906),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',907),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',917),
  ('struct_or_union_specifier -> struct_or_union brace_open brace_close','struct_or_union_specifier',3,'p_struct_or_union_specifier_2','c_parser.py',918),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',935),
  ('struct_or_union_specifier -> struct_or_union ID brace_open brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_3','c_parser.py',936),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',937),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_3','c_parser.py',938),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',954),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',955),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',962),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',963),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',971),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',1009),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',1014),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',1019),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',1020),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',1028),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',1033),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',1034),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',1042),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',1043),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',1048),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',1053),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',1054),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',1059),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',1060),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',1061),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1072),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1073),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1088),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1089),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1200),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1201),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1230),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1231),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1236),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1237),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1245),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1246),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1265),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1266),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1277),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1308),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1309),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1318),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1323),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1324),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1332),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1333),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1344),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1352),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1353),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1358),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1359),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1364),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1375),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1383),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1388),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1398),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1402),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1413),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1422),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1433),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1442),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1452),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1463),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1464),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1471),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1472),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1478),
  ('labeled_statement -> ID COLON pragmacomp_or_statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1484),
  ('labeled_statement -> CASE constant_expression COLON pragmacomp_or_statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1488),
  ('labeled_statement -> DEFAULT COLON pragmacomp_or_statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1492),
  ('selection_statement -> IF LPAREN expression RPAREN pragmacomp_or_statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1496),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE pragmacomp_or_statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1500),
  ('selection_statement -> SWITCH LPAREN expression RPAREN pragmacomp_or_statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1504),
  ('iteration_statement -> WHILE LPAREN expression RPAREN pragmacomp_or_statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1509),
  ('iteration_statement -> DO pragmacomp_or_statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1513),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN pragmacomp_or_statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1517),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN pragmacomp_or_statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1521),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1526),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1530),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1534),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1538),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1539),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1544),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1551),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1552),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1564),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1568),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1569),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1582),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1583),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1584),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1585),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1586),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1587),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1588),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1589),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1590),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1591),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1592),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1597),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1601),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1602),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1610),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1611),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1612),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1613),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1614),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1615),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1616),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1617),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1618),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1619),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1620),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1621),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1622),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1623),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1624),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1625),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1626),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1627),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1628),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1636),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1640),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1644),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1648),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1649),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1650),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1655),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1656),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1664),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1665),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1666),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1667),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1668),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1669),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1674),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1678),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1682),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1683),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1688),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1689),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1690),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1691),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1697),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1698),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1703),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1704),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1709),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1713),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1717),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1718),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1723),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1727),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1735),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1736),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1737),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1750),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1751),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1760),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1764),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1765),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1766),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1767),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1773),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1774),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1790),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1791),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1802),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1803),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1813),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1814),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1824),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1830),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1836),
]
