
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         pragmacomp_or_statement     : pppragma_directive statement\n                                        | statement\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n                                      | struct_or_union brace_open brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union ID brace_open brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON pragmacomp_or_statement  labeled_statement : CASE constant_expression COLON pragmacomp_or_statement  labeled_statement : DEFAULT COLON pragmacomp_or_statement  selection_statement : IF LPAREN expression RPAREN pragmacomp_or_statement  selection_statement : IF LPAREN expression RPAREN statement ELSE pragmacomp_or_statement  selection_statement : SWITCH LPAREN expression RPAREN pragmacomp_or_statement  iteration_statement : WHILE LPAREN expression RPAREN pragmacomp_or_statement  iteration_statement : DO pragmacomp_or_statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN pragmacomp_or_statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN pragmacomp_or_statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'ARROW':([127,141,157,158,160,162,163,167,168,171,177,178,179,181,182,183,184,189,220,272,274,276,308,385,386,389,391,392,424,461,462,509,510,520,],[-308,-294,270,-286,-299,-302,-301,-298,-300,-285,-283,-305,-284,-297,-295,-271,-296,-303,-294,-280,-279,-306,-304,-277,-278,-274,-275,-276,-287,-273,-272,-288,-281,-282,]),'VOID':([0,1,2,3,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,23,25,28,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,51,52,53,54,55,58,62,64,65,70,71,72,76,78,79,80,82,83,84,85,87,89,90,91,97,98,100,101,102,103,104,107,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,138,143,151,188,197,198,199,200,201,202,203,204,211,212,213,225,226,227,231,233,234,236,237,239,240,252,254,255,256,296,298,322,324,329,330,331,335,336,338,345,347,351,352,353,354,356,359,360,361,365,378,379,427,433,437,440,441,443,456,457,479,496,497,498,501,521,524,526,528,],[3,-64,-63,-101,-96,-103,-67,3,-106,-115,-118,-109,-102,-29,-309,-105,-95,-221,-119,-108,-98,-60,-100,-104,3,-309,3,-62,-52,-309,-116,-68,-107,-66,-113,-110,-65,-99,-97,3,-117,-93,-111,-114,-112,-90,3,-91,-89,-92,-307,-152,-153,-166,-88,-10,-9,-132,-133,3,-84,3,3,3,-87,-94,3,-86,-69,-83,-61,-53,3,-167,-30,3,3,3,-135,-145,-146,-142,-308,-130,3,3,-70,3,-85,3,3,-71,3,-154,3,-137,3,-139,-134,-143,-131,-129,-128,-77,-74,-198,-72,-199,3,-200,-78,-75,-76,-73,3,3,-35,-36,3,3,3,3,3,-155,-156,-136,-138,-144,3,-202,-217,-214,-215,-218,-201,-80,-78,3,3,-34,-31,3,-205,-203,-216,-213,-79,-33,-32,-204,-206,-80,-208,-209,-207,-210,-212,-211,]),'_COMPLEX':([0,1,2,3,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,23,25,28,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,51,52,53,54,55,58,62,64,65,70,71,72,76,78,79,80,82,83,84,85,87,89,90,91,97,98,100,101,102,103,104,107,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,138,143,151,188,197,198,199,200,201,202,203,204,211,212,213,225,226,227,231,233,234,236,237,239,240,252,254,255,256,296,298,322,324,329,330,331,335,336,338,345,347,351,352,353,354,356,359,360,361,365,378,379,427,433,437,440,441,443,456,457,479,496,497,498,501,521,524,526,528,],[12,-64,-63,-101,-96,-103,-67,12,-106,-115,-118,-109,-102,-29,-309,-105,-95,-221,-119,-108,-98,-60,-100,-104,12,-309,12,-62,-52,-309,-116,-68,-107,-66,-113,-110,-65,-99,-97,12,-117,-93,-111,-114,-112,-90,12,-91,-89,-92,-307,-152,-153,-166,-88,-10,-9,-132,-133,12,-84,12,12,12,-87,-94,12,-86,-69,-83,-61,-53,12,-167,-30,12,12,12,-135,-145,-146,-142,-308,-130,12,12,-70,12,-85,12,12,-71,12,-154,12,-137,12,-139,-134,-143,-131,-129,-128,-77,-74,-198,-72,-199,12,-200,-78,-75,-76,-73,12,12,-35,-36,12,12,12,12,12,-155,-156,-136,-138,-144,12,-202,-217,-214,-215,-218,-201,-80,-78,12,12,-34,-31,12,-205,-203,-216,-213,-79,-33,-32,-204,-206,-80,-208,-209,-207,-210,-212,-211,]),'IF':([39,70,101,102,127,133,213,225,226,227,231,233,234,236,237,238,239,240,343,346,347,351,352,353,354,356,359,360,433,437,439,440,441,443,474,475,478,479,496,497,498,501,512,521,522,524,526,527,528,],[-68,-307,-69,-83,-308,216,-77,-74,-198,-72,-199,216,-200,-78,-75,216,-76,-73,216,216,-202,-217,-214,-215,-218,-201,-80,216,-205,-203,216,-216,-213,-79,216,216,216,-204,-206,-80,-208,-209,216,-207,216,-210,-212,216,-211,]),'LT':([127,141,157,158,160,161,162,163,167,168,171,174,177,178,179,181,182,183,184,189,191,220,272,274,276,297,308,321,323,325,326,385,386,389,391,392,393,394,395,396,397,398,399,400,401,403,404,405,406,407,408,409,410,411,424,461,462,465,473,509,510,520,],[-308,-294,-259,-286,-299,288,-302,-301,-298,-300,-285,-257,-283,-305,-284,-297,-295,-271,-296,-303,-238,-294,-280,-279,-306,-263,-304,-260,-257,-262,-261,-277,-278,-274,-275,-276,288,-243,-241,288,-242,-240,-239,288,-244,-245,-246,-247,-248,288,288,288,-249,288,-287,-273,-272,-264,-258,-288,-281,-282,]),'DEFAULT':([39,70,101,102,127,133,213,225,226,227,231,233,234,236,237,238,239,240,343,346,347,351,352,353,354,356,359,360,433,437,439,440,441,443,474,475,478,479,496,497,498,501,512,521,522,524,526,527,528,],[-68,-307,-69,-83,-308,217,-77,-74,-198,-72,-199,217,-200,-78,-75,217,-76,-73,217,217,-202,-217,-214,-215,-218,-201,-80,217,-205,-203,217,-216,-213,-79,217,217,217,-204,-206,-80,-208,-209,217,-207,217,-210,-212,217,-211,]),'PLUS':([11,21,39,49,70,75,76,77,99,101,102,108,109,118,127,133,136,141,147,148,149,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,195,206,213,220,224,225,226,227,228,231,233,234,236,237,238,239,240,248,258,260,263,266,267,269,271,272,273,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,300,301,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,340,341,342,343,344,345,346,347,348,351,352,353,354,356,359,360,362,363,366,385,386,389,391,392,393,394,395,396,397,398,399,400,401,403,404,405,406,407,408,409,410,411,414,417,424,425,433,435,437,439,440,441,443,445,451,452,453,460,461,462,463,465,466,468,471,472,473,474,475,477,478,479,480,486,487,489,496,497,498,499,501,508,509,510,511,512,514,520,521,522,524,526,527,528,],[-118,-119,-68,-117,-307,-27,-166,-28,-309,-69,-83,-309,165,-167,-308,165,165,-294,-28,165,-309,-28,165,-309,-259,-286,-266,-299,281,-302,-301,-267,165,-298,-300,-309,-285,-269,-270,-257,165,-283,-305,-284,-268,-297,-295,-271,-296,165,-265,165,165,-303,-238,165,165,-77,-294,165,-74,-198,-72,165,-199,165,-200,-78,-75,165,-76,-73,165,165,-266,165,165,-266,165,165,-280,165,-279,-306,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,-263,165,-11,165,165,-12,-304,-227,-229,-230,-226,-228,-225,165,-231,-224,-234,-233,-232,-260,165,-257,165,-262,-261,165,165,165,165,165,165,165,-202,165,-217,-214,-215,-218,-201,-80,165,165,-266,-309,-277,-278,-274,-275,-276,281,-243,-241,281,-242,-240,-239,281,281,281,281,281,281,281,281,281,281,281,-309,-182,-287,165,-205,165,-203,165,-216,-213,-79,-266,-28,165,-309,165,-273,-272,165,-264,-11,165,165,-309,-258,165,165,165,165,-204,165,165,-266,165,-206,-80,-208,165,-209,165,-288,-281,-309,165,165,-282,-207,165,-210,-212,165,-211,]),'CHAR':([0,1,2,3,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,23,25,28,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,51,52,53,54,55,58,62,64,65,70,71,72,76,78,79,80,82,83,84,85,87,89,90,91,97,98,100,101,102,103,104,107,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,138,143,151,188,197,198,199,200,201,202,203,204,211,212,213,225,226,227,231,233,234,236,237,239,240,252,254,255,256,296,298,322,324,329,330,331,335,336,338,345,347,351,352,353,354,356,359,360,361,365,378,379,427,433,437,440,441,443,456,457,479,496,497,498,501,521,524,526,528,],[6,-64,-63,-101,-96,-103,-67,6,-106,-115,-118,-109,-102,-29,-309,-105,-95,-221,-119,-108,-98,-60,-100,-104,6,-309,6,-62,-52,-309,-116,-68,-107,-66,-113,-110,-65,-99,-97,6,-117,-93,-111,-114,-112,-90,6,-91,-89,-92,-307,-152,-153,-166,-88,-10,-9,-132,-133,6,-84,6,6,6,-87,-94,6,-86,-69,-83,-61,-53,6,-167,-30,6,6,6,-135,-145,-146,-142,-308,-130,6,6,-70,6,-85,6,6,-71,6,-154,6,-137,6,-139,-134,-143,-131,-129,-128,-77,-74,-198,-72,-199,6,-200,-78,-75,-76,-73,6,6,-35,-36,6,6,6,6,6,-155,-156,-136,-138,-144,6,-202,-217,-214,-215,-218,-201,-80,-78,6,6,-34,-31,6,-205,-203,-216,-213,-79,-33,-32,-204,-206,-80,-208,-209,-207,-210,-212,-211,]),'LONG':([0,1,2,3,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,23,25,28,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,51,52,53,54,55,58,62,64,65,70,71,72,76,78,79,80,82,83,84,85,87,89,90,91,97,98,100,101,102,103,104,107,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,138,143,151,188,197,198,199,200,201,202,203,204,211,212,213,225,226,227,231,233,234,236,237,239,240,252,254,255,256,296,298,322,324,329,330,331,335,336,338,345,347,351,352,353,354,356,359,360,361,365,378,379,427,433,437,440,441,443,456,457,479,496,497,498,501,521,524,526,528,],[9,-64,-63,-101,-96,-103,-67,9,-106,-115,-118,-109,-102,-29,-309,-105,-95,-221,-119,-108,-98,-60,-100,-104,9,-309,9,-62,-52,-309,-116,-68,-107,-66,-113,-110,-65,-99,-97,9,-117,-93,-111,-114,-112,-90,9,-91,-89,-92,-307,-152,-153,-166,-88,-10,-9,-132,-133,9,-84,9,9,9,-87,-94,9,-86,-69,-83,-61,-53,9,-167,-30,9,9,9,-135,-145,-146,-142,-308,-130,9,9,-70,9,-85,9,9,-71,9,-154,9,-137,9,-139,-134,-143,-131,-129,-128,-77,-74,-198,-72,-199,9,-200,-78,-75,-76,-73,9,9,-35,-36,9,9,9,9,9,-155,-156,-136,-138,-144,9,-202,-217,-214,-215,-218,-201,-80,-78,9,9,-34,-31,9,-205,-203,-216,-213,-79,-33,-32,-204,-206,-80,-208,-209,-207,-210,-212,-211,]),'RESTRICT':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,25,28,30,31,32,33,35,36,37,38,39,40,41,43,44,45,46,47,48,49,51,52,53,54,55,58,62,64,65,70,71,72,76,77,82,83,84,85,87,90,97,98,99,101,102,103,104,107,108,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,138,147,149,151,154,156,188,197,198,199,200,201,202,203,204,211,212,213,225,226,227,231,233,234,236,237,239,240,252,254,255,256,296,298,322,324,329,330,331,335,336,338,345,347,351,352,353,354,356,359,360,361,365,366,378,379,427,433,437,440,441,443,451,453,456,457,479,496,497,498,501,521,524,526,528,],[11,-64,-63,-101,-96,-103,-67,11,-106,-115,-118,-109,11,-102,-29,11,-105,-95,-221,-119,-108,-98,-60,-100,-104,11,11,-62,-52,11,-116,-68,-107,-66,-113,-110,-65,-99,-97,11,-117,-93,-111,-114,-112,-90,11,-91,-89,-92,-307,-152,-153,-166,11,-132,-133,11,-84,11,11,-94,11,11,-69,-83,-61,-53,11,11,-167,-30,11,11,11,-135,-145,-146,-142,-308,-130,11,11,-70,11,-85,11,11,11,-71,11,11,11,-154,11,-137,11,-139,-134,-143,-131,-129,-128,-77,-74,-198,-72,-199,11,-200,-78,-75,-76,-73,11,11,-35,-36,11,11,11,11,11,-155,-156,-136,-138,-144,11,-202,-217,-214,-215,-218,-201,-80,-78,11,11,11,-34,-31,11,-205,-203,-216,-213,-79,11,11,-33,-32,-204,-206,-80,-208,-209,-207,-210,-212,-211,]),'INT_CONST_DEC':([11,21,39,49,70,75,76,77,99,101,102,108,109,118,127,133,136,147,148,149,154,155,156,159,165,166,169,172,173,176,180,185,186,187,188,195,206,213,224,225,226,227,228,231,233,234,236,237,238,239,240,248,258,260,263,266,267,269,271,273,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,300,301,303,307,309,310,311,312,313,314,315,316,317,318,319,320,322,324,340,341,342,343,344,345,346,347,348,351,352,353,354,356,359,360,362,363,366,414,417,425,433,435,437,439,440,441,443,445,451,452,453,460,463,466,468,471,472,474,475,477,478,479,480,486,487,489,496,497,498,499,501,508,511,512,514,521,522,524,526,527,528,],[-118,-119,-68,-117,-307,-27,-166,-28,-309,-69,-83,-309,182,-167,-308,182,182,-28,182,-309,-28,182,-309,-266,-267,182,-309,-269,-270,182,-268,182,-265,182,182,182,182,-77,182,-74,-198,-72,182,-199,182,-200,-78,-75,182,-76,-73,182,182,-266,182,182,-266,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,-11,182,182,-12,-227,-229,-230,-226,-228,-225,182,-231,-224,-234,-233,-232,182,182,182,182,182,182,182,182,182,-202,182,-217,-214,-215,-218,-201,-80,182,182,-266,-309,-309,-182,182,-205,182,-203,182,-216,-213,-79,-266,-28,182,-309,182,182,-11,182,182,-309,182,182,182,182,-204,182,182,-266,182,-206,-80,-208,182,-209,182,-309,182,182,-207,182,-210,-212,182,-211,]),'SWITCH':([39,70,101,102,127,133,213,225,226,227,231,233,234,236,237,238,239,240,343,346,347,351,352,353,354,356,359,360,433,437,439,440,441,443,474,475,478,479,496,497,498,501,512,521,522,524,526,527,528,],[-68,-307,-69,-83,-308,218,-77,-74,-198,-72,-199,218,-200,-78,-75,218,-76,-73,218,218,-202,-217,-214,-215,-218,-201,-80,218,-205,-203,218,-216,-213,-79,218,218,218,-204,-206,-80,-208,-209,218,-207,218,-210,-212,218,-211,]),'_BOOL':([0,1,2,3,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,23,25,28,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,51,52,53,54,55,58,62,64,65,70,71,72,76,78,79,80,82,83,84,85,87,89,90,91,97,98,100,101,102,103,104,107,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,138,143,151,188,197,198,199,200,201,202,203,204,211,212,213,225,226,227,231,233,234,236,237,239,240,252,254,255,256,296,298,322,324,329,330,331,335,336,338,345,347,351,352,353,354,356,359,360,361,365,378,379,427,433,437,440,441,443,456,457,479,496,497,498,501,521,524,526,528,],[15,-64,-63,-101,-96,-103,-67,15,-106,-115,-118,-109,-102,-29,-309,-105,-95,-221,-119,-108,-98,-60,-100,-104,15,-309,15,-62,-52,-309,-116,-68,-107,-66,-113,-110,-65,-99,-97,15,-117,-93,-111,-114,-112,-90,15,-91,-89,-92,-307,-152,-153,-166,-88,-10,-9,-132,-133,15,-84,15,15,15,-87,-94,15,-86,-69,-83,-61,-53,15,-167,-30,15,15,15,-135,-145,-146,-142,-308,-130,15,15,-70,15,-85,15,15,-71,15,-154,15,-137,15,-139,-134,-143,-131,-129,-128,-77,-74,-198,-72,-199,15,-200,-78,-75,-76,-73,15,15,-35,-36,15,15,15,15,15,-155,-156,-136,-138,-144,15,-202,-217,-214,-215,-218,-201,-80,-78,15,15,-34,-31,15,-205,-203,-216,-213,-79,-33,-32,-204,-206,-80,-208,-209,-207,-210,-212,-211,]),'FOR':([39,70,101,102,127,133,213,225,226,227,231,233,234,236,237,238,239,240,343,346,347,351,352,353,354,356,359,360,433,437,439,440,441,443,474,475,478,479,496,497,498,501,512,521,522,524,526,527,528,],[-68,-307,-69,-83,-308,219,-77,-74,-198,-72,-199,219,-200,-78,-75,219,-76,-73,219,219,-202,-217,-214,-215,-218,-201,-80,219,-205,-203,219,-216,-213,-79,219,219,219,-204,-206,-80,-208,-209,219,-207,219,-210,-212,219,-211,]),'ID':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,25,26,27,28,29,30,31,33,34,35,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,62,64,65,67,68,70,71,72,73,74,75,76,77,78,79,80,82,83,87,89,91,97,98,99,100,101,102,103,105,107,108,109,112,113,117,118,123,127,128,130,132,133,135,136,138,147,148,149,151,154,155,156,159,165,166,169,172,173,176,180,185,186,187,188,195,196,197,199,201,202,204,206,211,212,213,224,225,226,227,228,231,233,234,235,236,237,238,239,240,248,252,253,257,258,260,263,266,267,269,270,271,273,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,300,301,303,306,307,309,310,311,312,313,314,315,316,317,318,319,320,322,324,330,331,335,336,339,340,341,342,343,344,345,346,347,348,351,352,353,354,356,359,360,362,363,365,366,371,414,417,425,433,435,437,439,440,441,443,445,451,452,453,460,463,464,466,468,471,472,474,475,477,478,479,480,486,487,489,496,497,498,499,501,507,508,511,512,514,521,522,524,526,527,528,],[16,-64,-63,-101,-96,-103,-67,16,-106,-115,-118,-109,71,-309,-102,-309,-105,-95,-221,-119,16,-108,-98,-140,82,-60,-141,-100,-104,-309,16,-62,-309,-116,-68,-107,-66,-113,-110,-65,-99,-97,16,-117,16,-93,-111,-114,-112,-90,-91,-89,-92,16,16,-307,-152,-153,114,-164,-27,-166,-28,-88,-10,-9,-132,-133,16,16,-87,-94,141,-309,-86,-69,-83,-61,16,141,-309,141,114,114,-165,-167,-135,-308,-130,16,-70,220,16,141,16,-28,141,-309,-71,-28,141,-309,-266,-267,141,-309,-269,-270,141,-268,141,-265,141,141,141,114,-154,-137,-139,-134,-131,141,-129,-128,-77,141,-74,-198,-72,141,-199,220,-200,357,-78,-75,220,-76,-73,141,16,16,141,141,-266,141,141,-266,141,385,141,141,391,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,-11,141,141,141,-12,-227,-229,-230,-226,-228,-225,141,-231,-224,-234,-233,-232,141,141,-155,-156,-136,-138,16,141,141,141,220,141,141,220,-202,141,-217,-214,-215,-218,-201,-80,220,141,-266,141,-309,16,-309,-182,141,-205,141,-203,220,-216,-213,-79,-266,-28,141,-309,141,141,141,-11,141,141,-309,220,220,141,220,-204,141,141,-266,141,-206,-80,-208,141,-209,141,141,-309,220,141,-207,220,-210,-212,220,-211,]),'RSHIFTEQUAL':([127,141,157,158,160,162,163,167,168,171,174,177,178,179,181,182,183,184,189,220,272,274,276,297,308,321,323,325,326,385,386,389,391,392,424,461,462,465,473,509,510,520,],[-308,-294,-259,-286,-299,-302,-301,-298,-300,-285,320,-283,-305,-284,-297,-295,-271,-296,-303,-294,-280,-279,-306,-263,-304,-260,-257,-262,-261,-277,-278,-274,-275,-276,-287,-273,-272,-264,-258,-288,-281,-282,]),'DIVEQUAL':([127,141,157,158,160,162,163,167,168,171,174,177,178,179,181,182,183,184,189,220,272,274,276,297,308,321,323,325,326,385,386,389,391,392,424,461,462,465,473,509,510,520,],[-308,-294,-259,-286,-299,-302,-301,-298,-300,-285,309,-283,-305,-284,-297,-295,-271,-296,-303,-294,-280,-279,-306,-263,-304,-260,-257,-262,-261,-277,-278,-274,-275,-276,-287,-273,-272,-264,-258,-288,-281,-282,]),'AUTO':([0,1,2,3,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,23,25,28,30,31,32,33,35,36,37,38,39,40,41,43,44,45,46,47,48,49,51,52,53,54,55,58,62,64,65,70,71,72,82,83,85,87,90,97,98,101,102,103,104,107,119,123,127,132,133,134,138,151,197,199,201,202,213,225,226,227,231,233,234,236,237,239,240,252,254,255,256,330,331,335,336,345,347,351,352,353,354,356,359,360,361,365,378,379,427,433,437,440,441,443,456,457,479,496,497,498,501,521,524,526,528,],[19,-64,-63,-101,-96,-103,-67,19,-106,-115,-118,-109,-102,-29,19,-105,-95,-221,-119,-108,-98,-60,-100,-104,19,19,-62,-52,19,-116,-68,-107,-66,-113,-110,-65,-99,-97,19,-117,-93,-111,-114,-112,-90,19,-91,-89,-92,-307,-152,-153,-132,-133,-84,19,19,-94,19,-69,-83,-61,-53,19,-30,-135,-308,-70,19,-85,19,-71,-154,-137,-139,-134,-77,-74,-198,-72,-199,19,-200,-78,-75,-76,-73,19,19,-35,-36,-155,-156,-136,-138,19,-202,-217,-214,-215,-218,-201,-80,-78,19,19,-34,-31,19,-205,-203,-216,-213,-79,-33,-32,-204,-206,-80,-208,-209,-207,-210,-212,-211,]),'UNION':([0,1,2,5,7,11,16,17,19,21,25,28,30,32,33,34,35,36,37,39,41,45,46,47,48,49,58,70,76,78,79,80,84,85,89,90,91,98,100,101,102,103,104,107,118,119,120,121,122,124,125,126,127,129,132,133,134,143,151,188,198,200,203,213,225,226,227,231,233,234,236,237,239,240,252,254,255,256,296,298,322,324,338,345,347,351,352,353,354,356,359,360,361,365,378,379,427,433,437,440,441,443,456,457,479,496,497,498,501,521,524,526,528,],[29,-64,-63,-96,-67,-118,-29,-309,-95,-119,-98,-60,-100,29,-309,29,-62,-52,-309,-68,-66,-65,-99,-97,29,-117,29,-307,-166,-88,-10,-9,29,-84,29,29,-87,29,-86,-69,-83,-61,-53,29,-167,-30,29,29,29,-145,-146,-142,-308,29,-70,29,-85,29,-71,29,29,29,-143,-77,-74,-198,-72,-199,29,-200,-78,-75,-76,-73,29,29,-35,-36,29,29,29,29,-144,29,-202,-217,-214,-215,-218,-201,-80,-78,29,29,-34,-31,29,-205,-203,-216,-213,-79,-33,-32,-204,-206,-80,-208,-209,-207,-210,-212,-211,]),'PLUSEQUAL':([127,141,157,158,160,162,163,167,168,171,174,177,178,179,181,182,183,184,189,220,272,274,276,297,308,321,323,325,326,385,386,389,391,392,424,461,462,465,473,509,510,520,],[-308,-294,-259,-286,-299,-302,-301,-298,-300,-285,310,-283,-305,-284,-297,-295,-271,-296,-303,-294,-280,-279,-306,-263,-304,-260,-257,-262,-261,-277,-278,-274,-275,-276,-287,-273,-272,-264,-258,-288,-281,-282,]),'TYPEID':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,51,52,53,54,55,58,62,64,65,67,68,70,71,72,74,75,76,77,78,79,80,82,83,84,85,87,89,90,91,97,98,100,101,102,103,104,105,107,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,138,143,151,188,197,198,199,200,201,202,203,204,211,212,213,225,226,227,231,233,234,236,237,239,240,252,253,254,255,256,270,275,296,298,322,324,330,331,335,336,338,339,345,347,351,352,353,354,356,359,360,361,365,378,379,427,433,437,440,441,443,456,457,479,496,497,498,501,521,524,526,528,],[20,-64,-63,-101,-96,-103,-67,59,-106,-115,-118,-109,72,-309,-102,-29,-309,-105,-95,-221,-119,-108,-98,-140,83,-60,-141,-100,-104,20,-309,20,-62,-52,-309,-116,-68,-107,-66,-113,-110,-65,-99,-97,20,-117,-93,-111,-114,-112,-90,20,-91,-89,-92,59,59,-307,-152,-153,-164,-27,-166,-28,-88,-10,-9,-132,-133,20,-84,59,20,20,-87,-94,20,-86,-69,-83,-61,-53,59,20,-165,-167,-30,20,20,20,-135,-145,-146,-142,-308,-130,20,59,-70,20,-85,59,246,20,-71,20,-154,20,-137,20,-139,-134,-143,-131,-129,-128,-77,-74,-198,-72,-199,20,-200,-78,-75,-76,-73,20,246,20,-35,-36,386,392,20,20,20,20,-155,-156,-136,-138,-144,59,20,-202,-217,-214,-215,-218,-201,-80,-78,20,20,-34,-31,20,-205,-203,-216,-213,-79,-33,-32,-204,-206,-80,-208,-209,-207,-210,-212,-211,]),'ENUM':([0,1,2,5,7,11,16,17,19,21,25,28,30,32,33,34,35,36,37,39,41,45,46,47,48,49,58,70,76,78,79,80,84,85,89,90,91,98,100,101,102,103,104,107,118,119,120,121,122,124,125,126,127,129,132,133,134,143,151,188,198,200,203,213,225,226,227,231,233,234,236,237,239,240,252,254,255,256,296,298,322,324,338,345,347,351,352,353,354,356,359,360,361,365,378,379,427,433,437,440,441,443,456,457,479,496,497,498,501,521,524,526,528,],[13,-64,-63,-96,-67,-118,-29,-309,-95,-119,-98,-60,-100,13,-309,13,-62,-52,-309,-68,-66,-65,-99,-97,13,-117,13,-307,-166,-88,-10,-9,13,-84,13,13,-87,13,-86,-69,-83,-61,-53,13,-167,-30,13,13,13,-145,-146,-142,-308,13,-70,13,-85,13,-71,13,13,13,-143,-77,-74,-198,-72,-199,13,-200,-78,-75,-76,-73,13,13,-35,-36,13,13,13,13,-144,13,-202,-217,-214,-215,-218,-201,-80,-78,13,13,-34,-31,13,-205,-203,-216,-213,-79,-33,-32,-204,-206,-80,-208,-209,-207,-210,-212,-211,]),'COLON':([3,6,9,10,11,12,15,16,18,20,21,23,31,36,38,40,43,44,49,52,53,54,59,60,63,71,72,82,83,104,110,119,123,127,128,130,131,141,157,158,160,161,162,163,167,168,171,174,177,178,179,181,182,183,184,189,190,191,192,197,199,201,202,204,210,211,212,217,220,222,255,256,264,265,272,274,276,297,308,321,323,325,326,330,331,333,335,336,339,349,378,379,382,383,385,386,389,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,421,424,431,456,457,458,459,461,462,465,473,491,509,510,520,],[-101,-103,-106,-115,-118,-109,-102,-29,-105,-221,-119,-108,-104,-52,-116,-107,-113,-110,-117,-111,-114,-112,-37,-54,-163,-152,-153,-132,-133,-53,-55,-30,-135,-308,-130,206,-162,-294,-259,-286,-299,-236,-302,-301,-298,-300,-285,-257,-283,-305,-284,-297,-295,-271,-296,-303,-222,-238,-38,-154,-137,-139,-134,-131,340,-129,-128,343,346,-219,-35,-36,-43,-44,-280,-279,-306,-263,-304,-260,-257,-262,-261,-155,-156,-235,-136,-138,206,439,-34,-31,-42,-39,-277,-278,-274,-275,-276,-255,-243,-241,-250,-242,-240,-239,-251,-244,463,-245,-246,-247,-248,-252,-253,-256,-249,-254,-223,-287,-220,-33,-32,-41,-40,-273,-272,-264,-258,-237,-288,-281,-282,]),'LBRACE':([13,16,26,27,29,32,36,39,58,70,71,72,82,83,85,86,88,90,101,102,104,106,109,119,127,133,134,136,169,213,225,226,227,231,233,234,236,237,238,239,240,255,256,300,303,307,343,346,347,351,352,353,354,356,359,360,378,379,414,417,425,433,437,439,440,441,443,456,457,465,466,468,470,471,472,474,475,478,479,496,497,498,501,511,512,521,522,524,526,527,528,],[70,-29,-140,70,-141,-309,-52,-68,-309,-307,70,70,70,70,-84,-7,70,-8,-69,-83,-53,70,70,-30,-308,70,-85,70,-309,-77,-74,-198,-72,-199,70,-200,-78,-75,70,-76,-73,-35,-36,-11,70,-12,70,70,-202,-217,-214,-215,-218,-201,-80,70,-34,-31,-309,-182,70,-205,-203,70,-216,-213,-79,-33,-32,70,-11,70,70,70,-309,70,70,70,-204,-206,-80,-208,-209,-309,70,-207,70,-210,-212,70,-211,]),'EXTERN':([0,1,2,3,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,23,25,28,30,31,32,33,35,36,37,38,39,40,41,43,44,45,46,47,48,49,51,52,53,54,55,58,62,64,65,70,71,72,82,83,85,87,90,97,98,101,102,103,104,107,119,123,127,132,133,134,138,151,197,199,201,202,213,225,226,227,231,233,234,236,237,239,240,252,254,255,256,330,331,335,336,345,347,351,352,353,354,356,359,360,361,365,378,379,427,433,437,440,441,443,456,457,479,496,497,498,501,521,524,526,528,],[25,-64,-63,-101,-96,-103,-67,25,-106,-115,-118,-109,-102,-29,25,-105,-95,-221,-119,-108,-98,-60,-100,-104,25,25,-62,-52,25,-116,-68,-107,-66,-113,-110,-65,-99,-97,25,-117,-93,-111,-114,-112,-90,25,-91,-89,-92,-307,-152,-153,-132,-133,-84,25,25,-94,25,-69,-83,-61,-53,25,-30,-135,-308,-70,25,-85,25,-71,-154,-137,-139,-134,-77,-74,-198,-72,-199,25,-200,-78,-75,-76,-73,25,25,-35,-36,-155,-156,-136,-138,25,-202,-217,-214,-215,-218,-201,-80,-78,25,25,-34,-31,25,-205,-203,-216,-213,-79,-33,-32,-204,-206,-80,-208,-209,-207,-210,-212,-211,]),'OFFSETOF':([11,21,39,49,70,75,76,77,99,101,102,108,109,118,127,133,136,147,148,149,154,155,156,159,165,166,169,172,173,176,180,185,186,187,188,195,206,213,224,225,226,227,228,231,233,234,236,237,238,239,240,248,258,260,263,266,267,269,271,273,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,300,301,303,307,309,310,311,312,313,314,315,316,317,318,319,320,322,324,340,341,342,343,344,345,346,347,348,351,352,353,354,356,359,360,362,363,366,414,417,425,433,435,437,439,440,441,443,445,451,452,453,460,463,466,468,471,472,474,475,477,478,479,480,486,487,489,496,497,498,499,501,508,511,512,514,521,522,524,526,527,528,],[-118,-119,-68,-117,-307,-27,-166,-28,-309,-69,-83,-309,164,-167,-308,164,164,-28,164,-309,-28,164,-309,-266,-267,164,-309,-269,-270,164,-268,164,-265,164,164,164,164,-77,164,-74,-198,-72,164,-199,164,-200,-78,-75,164,-76,-73,164,164,-266,164,164,-266,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,-11,164,164,-12,-227,-229,-230,-226,-228,-225,164,-231,-224,-234,-233,-232,164,164,164,164,164,164,164,164,164,-202,164,-217,-214,-215,-218,-201,-80,164,164,-266,-309,-309,-182,164,-205,164,-203,164,-216,-213,-79,-266,-28,164,-309,164,164,-11,164,164,-309,164,164,164,164,-204,164,164,-266,164,-206,-80,-208,164,-209,164,-309,164,164,-207,164,-210,-212,164,-211,]),'LSHIFTEQUAL':([127,141,157,158,160,162,163,167,168,171,174,177,178,179,181,182,183,184,189,220,272,274,276,297,308,321,323,325,326,385,386,389,391,392,424,461,462,465,473,509,510,520,],[-308,-294,-259,-286,-299,-302,-301,-298,-300,-285,316,-283,-305,-284,-297,-295,-271,-296,-303,-294,-280,-279,-306,-263,-304,-260,-257,-262,-261,-277,-278,-274,-275,-276,-287,-273,-272,-264,-258,-288,-281,-282,]),'ELSE':([39,101,127,213,225,227,236,237,239,240,347,351,352,353,354,359,360,433,437,440,441,443,479,496,497,498,501,521,524,526,528,],[-68,-69,-308,-77,-74,-72,-78,-75,-76,-73,-202,-217,-214,-215,-218,-80,-78,-205,-203,-216,-213,-79,-204,-206,512,-208,-209,-207,-210,-212,-211,]),'SIZEOF':([11,21,39,49,70,75,76,77,99,101,102,108,109,118,127,133,136,147,148,149,154,155,156,159,165,166,169,172,173,176,180,185,186,187,188,195,206,213,224,225,226,227,228,231,233,234,236,237,238,239,240,248,258,260,263,266,267,269,271,273,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,300,301,303,307,309,310,311,312,313,314,315,316,317,318,319,320,322,324,340,341,342,343,344,345,346,347,348,351,352,353,354,356,359,360,362,363,366,414,417,425,433,435,437,439,440,441,443,445,451,452,453,460,463,466,468,471,472,474,475,477,478,479,480,486,487,489,496,497,498,499,501,508,511,512,514,521,522,524,526,527,528,],[-118,-119,-68,-117,-307,-27,-166,-28,-309,-69,-83,-309,166,-167,-308,166,166,-28,166,-309,-28,166,-309,-266,-267,166,-309,-269,-270,166,-268,166,-265,166,166,166,166,-77,166,-74,-198,-72,166,-199,166,-200,-78,-75,166,-76,-73,166,166,-266,166,166,-266,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,-11,166,166,-12,-227,-229,-230,-226,-228,-225,166,-231,-224,-234,-233,-232,166,166,166,166,166,166,166,166,166,-202,166,-217,-214,-215,-218,-201,-80,166,166,-266,-309,-309,-182,166,-205,166,-203,166,-216,-213,-79,-266,-28,166,-309,166,166,-11,166,166,-309,166,166,166,166,-204,166,166,-266,166,-206,-80,-208,166,-209,166,-309,166,166,-207,166,-210,-212,166,-211,]),'INT_CONST_BIN':([11,21,39,49,70,75,76,77,99,101,102,108,109,118,127,133,136,147,148,149,154,155,156,159,165,166,169,172,173,176,180,185,186,187,188,195,206,213,224,225,226,227,228,231,233,234,236,237,238,239,240,248,258,260,263,266,267,269,271,273,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,300,301,303,307,309,310,311,312,313,314,315,316,317,318,319,320,322,324,340,341,342,343,344,345,346,347,348,351,352,353,354,356,359,360,362,363,366,414,417,425,433,435,437,439,440,441,443,445,451,452,453,460,463,466,468,471,472,474,475,477,478,479,480,486,487,489,496,497,498,499,501,508,511,512,514,521,522,524,526,527,528,],[-118,-119,-68,-117,-307,-27,-166,-28,-309,-69,-83,-309,167,-167,-308,167,167,-28,167,-309,-28,167,-309,-266,-267,167,-309,-269,-270,167,-268,167,-265,167,167,167,167,-77,167,-74,-198,-72,167,-199,167,-200,-78,-75,167,-76,-73,167,167,-266,167,167,-266,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,-11,167,167,-12,-227,-229,-230,-226,-228,-225,167,-231,-224,-234,-233,-232,167,167,167,167,167,167,167,167,167,-202,167,-217,-214,-215,-218,-201,-80,167,167,-266,-309,-309,-182,167,-205,167,-203,167,-216,-213,-79,-266,-28,167,-309,167,167,-11,167,167,-309,167,167,167,167,-204,167,167,-266,167,-206,-80,-208,167,-209,167,-309,167,167,-207,167,-210,-212,167,-211,]),'HEX_FLOAT_CONST':([11,21,39,49,70,75,76,77,99,101,102,108,109,118,127,133,136,147,148,149,154,155,156,159,165,166,169,172,173,176,180,185,186,187,188,195,206,213,224,225,226,227,228,231,233,234,236,237,238,239,240,248,258,260,263,266,267,269,271,273,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,300,301,303,307,309,310,311,312,313,314,315,316,317,318,319,320,322,324,340,341,342,343,344,345,346,347,348,351,352,353,354,356,359,360,362,363,366,414,417,425,433,435,437,439,440,441,443,445,451,452,453,460,463,466,468,471,472,474,475,477,478,479,480,486,487,489,496,497,498,499,501,508,511,512,514,521,522,524,526,527,528,],[-118,-119,-68,-117,-307,-27,-166,-28,-309,-69,-83,-309,168,-167,-308,168,168,-28,168,-309,-28,168,-309,-266,-267,168,-309,-269,-270,168,-268,168,-265,168,168,168,168,-77,168,-74,-198,-72,168,-199,168,-200,-78,-75,168,-76,-73,168,168,-266,168,168,-266,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,-11,168,168,-12,-227,-229,-230,-226,-228,-225,168,-231,-224,-234,-233,-232,168,168,168,168,168,168,168,168,168,-202,168,-217,-214,-215,-218,-201,-80,168,168,-266,-309,-309,-182,168,-205,168,-203,168,-216,-213,-79,-266,-28,168,-309,168,168,-11,168,168,-309,168,168,168,168,-204,168,168,-266,168,-206,-80,-208,168,-209,168,-309,168,168,-207,168,-210,-212,168,-211,]),'LSHIFT':([127,141,157,158,160,161,162,163,167,168,171,174,177,178,179,181,182,183,184,189,191,220,272,274,276,297,308,321,323,325,326,385,386,389,391,392,393,394,395,396,397,398,399,400,401,403,404,405,406,407,408,409,410,411,424,461,462,465,473,509,510,520,],[-308,-294,-259,-286,-299,287,-302,-301,-298,-300,-285,-257,-283,-305,-284,-297,-295,-271,-296,-303,-238,-294,-280,-279,-306,-263,-304,-260,-257,-262,-261,-277,-278,-274,-275,-276,287,-243,-241,287,-242,-240,-239,287,-244,-245,287,287,287,287,287,287,287,287,-287,-273,-272,-264,-258,-288,-281,-282,]),'RETURN':([39,70,101,102,127,133,213,225,226,227,231,233,234,236,237,238,239,240,343,346,347,351,352,353,354,356,359,360,433,437,439,440,441,443,474,475,478,479,496,497,498,501,512,521,522,524,526,527,528,],[-68,-307,-69,-83,-308,228,-77,-74,-198,-72,-199,228,-200,-78,-75,228,-76,-73,228,228,-202,-217,-214,-215,-218,-201,-80,228,-205,-203,228,-216,-213,-79,228,228,228,-204,-206,-80,-208,-209,228,-207,228,-210,-212,228,-211,]),'TIMESEQUAL':([127,141,157,158,160,162,163,167,168,171,174,177,178,179,181,182,183,184,189,220,272,274,276,297,308,321,323,325,326,385,386,389,391,392,424,461,462,465,473,509,510,520,],[-308,-294,-259,-286,-299,-302,-301,-298,-300,-285,312,-283,-305,-284,-297,-295,-271,-296,-303,-294,-280,-279,-306,-263,-304,-260,-257,-262,-261,-277,-278,-274,-275,-276,-287,-273,-272,-264,-258,-288,-281,-282,]),'NOT':([11,21,39,49,70,75,76,77,99,101,102,108,109,118,127,133,136,147,148,149,154,155,156,159,165,166,169,172,173,176,180,185,186,187,188,195,206,213,224,225,226,227,228,231,233,234,236,237,238,239,240,248,258,260,263,266,267,269,271,273,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,300,301,303,307,309,310,311,312,313,314,315,316,317,318,319,320,322,324,340,341,342,343,344,345,346,347,348,351,352,353,354,356,359,360,362,363,366,414,417,425,433,435,437,439,440,441,443,445,451,452,453,460,463,466,468,471,472,474,475,477,478,479,480,486,487,489,496,497,498,499,501,508,511,512,514,521,522,524,526,527,528,],[-118,-119,-68,-117,-307,-27,-166,-28,-309,-69,-83,-309,172,-167,-308,172,172,-28,172,-309,-28,172,-309,-266,-267,172,-309,-269,-270,172,-268,172,-265,172,172,172,172,-77,172,-74,-198,-72,172,-199,172,-200,-78,-75,172,-76,-73,172,172,-266,172,172,-266,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,-11,172,172,-12,-227,-229,-230,-226,-228,-225,172,-231,-224,-234,-233,-232,172,172,172,172,172,172,172,172,172,-202,172,-217,-214,-215,-218,-201,-80,172,172,-266,-309,-309,-182,172,-205,172,-203,172,-216,-213,-79,-266,-28,172,-309,172,172,-11,172,172,-309,172,172,172,172,-204,172,172,-266,172,-206,-80,-208,172,-209,172,-309,172,172,-207,172,-210,-212,172,-211,]),'LNOT':([11,21,39,49,70,75,76,77,99,101,102,108,109,118,127,133,136,147,148,149,154,155,156,159,165,166,169,172,173,176,180,185,186,187,188,195,206,213,224,225,226,227,228,231,233,234,236,237,238,239,240,248,258,260,263,266,267,269,271,273,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,300,301,303,307,309,310,311,312,313,314,315,316,317,318,319,320,322,324,340,341,342,343,344,345,346,347,348,351,352,353,354,356,359,360,362,363,366,414,417,425,433,435,437,439,440,441,443,445,451,452,453,460,463,466,468,471,472,474,475,477,478,479,480,486,487,489,496,497,498,499,501,508,511,512,514,521,522,524,526,527,528,],[-118,-119,-68,-117,-307,-27,-166,-28,-309,-69,-83,-309,173,-167,-308,173,173,-28,173,-309,-28,173,-309,-266,-267,173,-309,-269,-270,173,-268,173,-265,173,173,173,173,-77,173,-74,-198,-72,173,-199,173,-200,-78,-75,173,-76,-73,173,173,-266,173,173,-266,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,-11,173,173,-12,-227,-229,-230,-226,-228,-225,173,-231,-224,-234,-233,-232,173,173,173,173,173,173,173,173,173,-202,173,-217,-214,-215,-218,-201,-80,173,173,-266,-309,-309,-182,173,-205,173,-203,173,-216,-213,-79,-266,-28,173,-309,173,173,-11,173,173,-309,173,173,173,173,-204,173,173,-266,173,-206,-80,-208,173,-209,173,-309,173,173,-207,173,-210,-212,173,-211,]),'FLOAT':([0,1,2,3,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,23,25,28,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,51,52,53,54,55,58,62,64,65,70,71,72,76,78,79,80,82,83,84,85,87,89,90,91,97,98,100,101,102,103,104,107,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,138,143,151,188,197,198,199,200,201,202,203,204,211,212,213,225,226,227,231,233,234,236,237,239,240,252,254,255,256,296,298,322,324,329,330,331,335,336,338,345,347,351,352,353,354,356,359,360,361,365,378,379,427,433,437,440,441,443,456,457,479,496,497,498,501,521,524,526,528,],[40,-64,-63,-101,-96,-103,-67,40,-106,-115,-118,-109,-102,-29,-309,-105,-95,-221,-119,-108,-98,-60,-100,-104,40,-309,40,-62,-52,-309,-116,-68,-107,-66,-113,-110,-65,-99,-97,40,-117,-93,-111,-114,-112,-90,40,-91,-89,-92,-307,-152,-153,-166,-88,-10,-9,-132,-133,40,-84,40,40,40,-87,-94,40,-86,-69,-83,-61,-53,40,-167,-30,40,40,40,-135,-145,-146,-142,-308,-130,40,40,-70,40,-85,40,40,-71,40,-154,40,-137,40,-139,-134,-143,-131,-129,-128,-77,-74,-198,-72,-199,40,-200,-78,-75,-76,-73,40,40,-35,-36,40,40,40,40,40,-155,-156,-136,-138,-144,40,-202,-217,-214,-215,-218,-201,-80,-78,40,40,-34,-31,40,-205,-203,-216,-213,-79,-33,-32,-204,-206,-80,-208,-209,-207,-210,-212,-211,]),'SEMI':([0,1,2,3,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,23,25,28,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,78,79,80,82,83,84,87,89,91,92,93,94,95,96,97,100,101,102,103,104,110,119,120,121,122,123,124,125,126,127,128,130,131,132,133,141,150,151,157,158,160,161,162,163,167,168,170,171,174,175,177,178,179,181,182,183,184,189,190,191,192,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,220,222,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,255,256,264,265,272,274,276,297,308,321,323,325,326,330,331,333,335,336,337,338,343,345,346,347,350,351,352,353,354,355,356,357,359,360,378,379,382,383,385,386,389,391,392,393,394,395,396,397,398,399,400,401,403,404,405,406,407,408,409,410,411,419,421,424,429,430,431,433,435,436,437,439,440,441,443,456,457,458,459,461,462,465,467,473,474,475,476,477,478,479,491,496,497,498,500,501,509,510,512,515,520,521,522,524,526,527,528,],[41,-64,-63,-101,-96,-103,-67,-309,-106,-115,-118,-109,-102,-29,-309,-105,-95,-221,-119,-108,-98,-60,-100,-104,-309,-309,-62,-52,-309,-116,-68,-107,-66,102,-113,-110,-65,-99,-97,41,-117,-93,-111,-114,-112,-90,-19,-20,-162,-37,-54,-122,-91,-163,-89,-92,-81,-120,-307,-152,-153,-88,-10,-9,-132,-133,124,-309,-309,-87,-16,-82,-126,-124,-15,-94,-86,-69,-83,-61,-53,-55,-30,124,124,124,-135,-145,-146,-142,-308,-130,-309,-162,-70,-309,-294,-121,-71,-259,-286,-299,-236,-302,-301,-298,-300,-123,-285,-257,-177,-283,-305,-284,-297,-295,-271,-296,-303,-222,-238,-38,-154,124,-137,124,-139,-134,-143,-131,-25,338,-26,-147,-149,-129,-128,-77,-13,-14,-294,-219,-74,-198,-72,351,352,353,-199,354,-309,-200,-78,-75,-309,-76,-73,-125,-127,-35,-36,-43,-44,-280,-279,-306,-263,-304,-260,-257,-262,-261,-155,-156,-235,-136,-138,-151,-144,-309,-309,-309,-202,440,-217,-214,-215,-218,-13,-201,441,-80,-78,-34,-31,-42,-39,-277,-278,-274,-275,-276,-255,-243,-241,-250,-242,-240,-239,-251,-244,-245,-246,-247,-248,-252,-253,-256,-249,-254,-178,-223,-287,-148,-150,-220,-205,-309,477,-203,-309,-216,-213,-79,-33,-32,-41,-40,-273,-272,-264,-179,-258,-309,-309,499,-309,-309,-204,-237,-206,-80,-208,514,-209,-288,-281,-309,524,-282,-207,-309,-210,-212,-309,-211,]),'RPAREN':([3,5,6,9,10,11,12,14,15,16,18,19,20,21,23,25,30,31,36,38,40,43,44,46,47,49,51,52,53,54,55,59,60,62,64,65,71,72,74,75,76,77,81,82,83,97,98,104,107,110,111,117,118,119,123,127,128,137,138,139,140,141,142,144,145,146,152,153,157,158,160,161,162,163,167,168,171,174,177,178,179,181,182,183,184,189,190,191,192,197,199,201,202,204,211,212,215,222,243,244,245,246,247,249,250,251,252,253,255,256,264,265,271,272,274,276,297,308,321,323,325,326,327,328,329,330,331,335,336,355,361,365,367,368,369,370,371,372,373,374,375,376,378,379,382,383,385,386,387,388,389,391,392,393,394,395,396,397,398,399,400,401,403,404,405,406,407,408,409,410,411,413,421,422,423,424,426,427,428,431,432,434,438,444,447,448,449,450,454,455,456,457,458,459,461,462,465,473,481,482,483,484,485,490,491,492,493,499,502,504,505,509,510,513,514,516,517,518,520,523,525,],[-101,-96,-103,-106,-115,-118,-109,-309,-102,-29,-105,-95,-221,-119,-108,-98,-100,-104,-52,-116,-107,-113,-110,-99,-97,-117,-93,-111,-114,-112,-90,-37,-54,-91,-89,-92,-152,-153,-164,-27,-166,-28,119,-132,-133,-94,-309,-53,-309,-55,192,-165,-167,-30,-135,-308,-130,-17,-309,-168,-175,-294,-170,255,256,-18,264,265,-259,-286,-299,-236,-302,-301,-298,-300,-285,-257,-283,-305,-284,-297,-295,-271,-296,-303,-222,-238,-38,-154,-137,-139,-134,-131,-129,-128,-14,-219,-1,-190,-172,-45,-2,-56,-174,-173,-309,-188,-35,-36,-43,-44,389,-280,-279,-306,-263,-304,-260,-257,-262,-261,424,425,-309,-155,-156,-136,-138,-13,-309,-309,-23,454,-24,455,-188,-57,-189,-169,-171,-176,-34,-31,-42,-39,-277,-278,461,-292,-274,-275,-276,-255,-243,-241,-250,-242,-240,-239,-251,-244,-245,-246,-247,-248,-252,-253,-256,-249,-254,465,-223,470,471,-287,-187,-309,-188,-220,474,475,478,481,-195,-193,484,485,-191,-197,-33,-32,-41,-40,-273,-272,-264,-258,-196,-194,-192,-50,-51,-293,-237,509,-289,-309,515,-49,-46,-288,-281,522,-309,-48,-47,-290,-282,527,-291,]),'PLUSPLUS':([11,21,39,49,70,75,76,77,99,101,102,108,109,118,127,133,136,141,147,148,149,154,155,156,157,158,159,160,162,163,165,166,167,168,169,171,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,195,206,213,220,224,225,226,227,228,231,233,234,236,237,238,239,240,248,258,260,263,266,267,269,271,272,273,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,300,301,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,322,324,340,341,342,343,344,345,346,347,348,351,352,353,354,356,359,360,362,363,366,385,386,389,391,392,414,417,424,425,433,435,437,439,440,441,443,445,451,452,453,460,461,462,463,466,468,471,472,474,475,477,478,479,480,486,487,489,496,497,498,499,501,508,509,510,511,512,514,520,521,522,524,526,527,528,],[-118,-119,-68,-117,-307,-27,-166,-28,-309,-69,-83,-309,176,-167,-308,176,176,-294,-28,176,-309,-28,176,-309,274,-286,-266,-299,-302,-301,-267,176,-298,-300,-309,-285,-269,-270,176,-283,-305,-284,-268,-297,-295,-271,-296,176,-265,176,176,-303,176,176,-77,-294,176,-74,-198,-72,176,-199,176,-200,-78,-75,176,-76,-73,176,176,-266,176,176,-266,176,176,-280,176,-279,-306,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,-11,176,176,-12,-304,-227,-229,-230,-226,-228,-225,176,-231,-224,-234,-233,-232,176,176,176,176,176,176,176,176,176,-202,176,-217,-214,-215,-218,-201,-80,176,176,-266,-309,-277,-278,-274,-275,-276,-309,-182,-287,176,-205,176,-203,176,-216,-213,-79,-266,-28,176,-309,176,-273,-272,176,-11,176,176,-309,176,176,176,176,-204,176,176,-266,176,-206,-80,-208,176,-209,176,-288,-281,-309,176,176,-282,-207,176,-210,-212,176,-211,]),'PERIOD':([70,127,141,157,158,160,162,163,167,168,169,171,177,178,179,181,182,183,184,189,220,272,274,276,302,304,308,385,386,389,391,392,414,418,420,424,461,462,469,472,492,493,509,510,511,518,520,525,],[-307,-308,-294,275,-286,-299,-302,-301,-298,-300,306,-285,-283,-305,-284,-297,-295,-271,-296,-303,-294,-280,-279,-306,-183,306,-304,-277,-278,-274,-275,-276,306,-184,-186,-287,-273,-272,-185,306,507,-289,-288,-281,306,-290,-282,-291,]),'WHILE':([39,70,101,102,127,133,213,225,226,227,231,233,234,236,237,238,239,240,343,346,347,351,352,353,354,356,358,359,360,433,437,439,440,441,443,474,475,478,479,496,497,498,501,512,521,522,524,526,527,528,],[-68,-307,-69,-83,-308,223,-77,-74,-198,-72,-199,223,-200,-78,-75,223,-76,-73,223,223,-202,-217,-214,-215,-218,-201,442,-80,223,-205,-203,223,-216,-213,-79,223,223,223,-204,-206,-80,-208,-209,223,-207,223,-210,-212,223,-211,]),'WSTRING_LITERAL':([11,21,39,49,70,75,76,77,99,101,102,108,109,118,127,133,136,147,148,149,154,155,156,158,159,165,166,169,172,173,176,178,180,185,186,187,188,195,206,213,224,225,226,227,228,231,233,234,236,237,238,239,240,248,258,260,263,266,267,269,271,273,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,300,301,303,307,309,310,311,312,313,314,315,316,317,318,319,320,322,324,340,341,342,343,344,345,346,347,348,351,352,353,354,356,359,360,362,363,366,414,417,425,433,435,437,439,440,441,443,445,451,452,453,460,463,466,468,471,472,474,475,477,478,479,480,486,487,489,496,497,498,499,501,508,511,512,514,521,522,524,526,527,528,],[-118,-119,-68,-117,-307,-27,-166,-28,-309,-69,-83,-309,178,-167,-308,178,178,-28,178,-309,-28,178,-309,276,-266,-267,178,-309,-269,-270,178,-305,-268,178,-265,178,178,178,178,-77,178,-74,-198,-72,178,-199,178,-200,-78,-75,178,-76,-73,178,178,-266,178,178,-266,178,178,178,-306,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,-11,178,178,-12,-227,-229,-230,-226,-228,-225,178,-231,-224,-234,-233,-232,178,178,178,178,178,178,178,178,178,-202,178,-217,-214,-215,-218,-201,-80,178,178,-266,-309,-309,-182,178,-205,178,-203,178,-216,-213,-79,-266,-28,178,-309,178,178,-11,178,178,-309,178,178,178,178,-204,178,178,-266,178,-206,-80,-208,178,-209,178,-309,178,178,-207,178,-210,-212,178,-211,]),'STATIC':([0,1,2,3,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,23,25,28,30,31,32,33,35,36,37,38,39,40,41,43,44,45,46,47,48,49,51,52,53,54,55,58,62,64,65,70,71,72,76,82,83,85,87,90,97,98,99,101,102,103,104,107,108,118,119,123,127,132,133,134,138,147,151,154,197,199,201,202,213,225,226,227,231,233,234,236,237,239,240,252,254,255,256,330,331,335,336,345,347,351,352,353,354,356,359,360,361,365,366,378,379,427,433,437,440,441,443,451,456,457,479,496,497,498,501,521,524,526,528,],[47,-64,-63,-101,-96,-103,-67,47,-106,-115,-118,-109,-102,-29,47,-105,-95,-221,-119,-108,-98,-60,-100,-104,47,47,-62,-52,47,-116,-68,-107,-66,-113,-110,-65,-99,-97,47,-117,-93,-111,-114,-112,-90,47,-91,-89,-92,-307,-152,-153,-166,-132,-133,-84,47,47,-94,47,149,-69,-83,-61,-53,47,156,-167,-30,-135,-308,-70,47,-85,47,258,-71,266,-154,-137,-139,-134,-77,-74,-198,-72,-199,47,-200,-78,-75,-76,-73,47,47,-35,-36,-155,-156,-136,-138,47,-202,-217,-214,-215,-218,-201,-80,-78,47,47,453,-34,-31,47,-205,-203,-216,-213,-79,486,-33,-32,-204,-206,-80,-208,-209,-207,-210,-212,-211,]),'__INT128':([0,1,2,3,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,23,25,28,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,51,52,53,54,55,58,62,64,65,70,71,72,76,78,79,80,82,83,84,85,87,89,90,91,97,98,100,101,102,103,104,107,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,138,143,151,188,197,198,199,200,201,202,203,204,211,212,213,225,226,227,231,233,234,236,237,239,240,252,254,255,256,296,298,322,324,329,330,331,335,336,338,345,347,351,352,353,354,356,359,360,361,365,378,379,427,433,437,440,441,443,456,457,479,496,497,498,501,521,524,526,528,],[54,-64,-63,-101,-96,-103,-67,54,-106,-115,-118,-109,-102,-29,-309,-105,-95,-221,-119,-108,-98,-60,-100,-104,54,-309,54,-62,-52,-309,-116,-68,-107,-66,-113,-110,-65,-99,-97,54,-117,-93,-111,-114,-112,-90,54,-91,-89,-92,-307,-152,-153,-166,-88,-10,-9,-132,-133,54,-84,54,54,54,-87,-94,54,-86,-69,-83,-61,-53,54,-167,-30,54,54,54,-135,-145,-146,-142,-308,-130,54,54,-70,54,-85,54,54,-71,54,-154,54,-137,54,-139,-134,-143,-131,-129,-128,-77,-74,-198,-72,-199,54,-200,-78,-75,-76,-73,54,54,-35,-36,54,54,54,54,54,-155,-156,-136,-138,-144,54,-202,-217,-214,-215,-218,-201,-80,-78,54,54,-34,-31,54,-205,-203,-216,-213,-79,-33,-32,-204,-206,-80,-208,-209,-207,-210,-212,-211,]),'COMMA':([3,5,6,9,10,11,12,14,15,16,18,19,20,21,23,25,30,31,36,38,40,43,44,46,47,49,51,52,53,54,55,57,58,59,60,61,62,63,64,65,69,71,72,74,75,76,77,82,83,92,94,95,97,104,110,114,115,116,117,118,119,123,127,128,131,138,139,140,141,142,146,150,157,158,160,161,162,163,167,168,170,171,174,175,177,178,179,181,182,183,184,189,190,191,192,193,194,196,197,199,201,202,204,208,209,210,211,212,215,220,222,241,242,243,244,245,246,247,249,250,251,253,255,256,264,265,272,274,276,297,299,308,321,323,325,326,327,329,330,331,332,333,334,335,336,337,350,372,373,375,376,378,379,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,416,419,421,424,426,428,429,430,431,432,434,438,447,448,454,455,456,457,458,459,461,462,465,467,473,481,482,483,484,485,490,491,494,495,502,504,505,509,510,516,517,519,520,],[-101,-96,-103,-106,-115,-118,-109,-309,-102,-29,-105,-95,-221,-119,-108,-98,-100,-104,-52,-116,-107,-113,-110,-99,-97,-117,-93,-111,-114,-112,-90,105,-162,-37,-54,-122,-91,-163,-89,-92,-120,-152,-153,-164,-27,-166,-28,-132,-133,135,-126,-124,-94,-53,-55,-160,-157,196,-165,-167,-30,-135,-308,-130,-162,-309,254,-175,-294,-170,257,-121,-259,-286,-299,-236,-302,-301,-298,-300,-123,-285,-257,-177,-283,-305,-284,-297,-295,-271,-296,-303,-222,-238,-38,196,196,-158,-154,-137,-139,-134,-131,339,-147,-149,-129,-128,341,-294,-219,-125,-127,-1,-190,-172,-45,-2,-56,-174,-173,-188,-35,-36,-43,-44,-280,-279,-306,-263,414,-304,-260,-257,-262,-261,341,-309,-155,-156,-161,-235,-159,-136,-138,-151,341,-57,-189,-171,-176,-34,-31,-42,-39,-277,-278,460,-292,-274,341,-275,-276,-255,-243,-241,-250,-242,-240,-239,-251,-244,341,-245,-246,-247,-248,-252,-253,-256,-249,-254,464,-180,-178,-223,-287,-187,-188,-148,-150,-220,341,341,341,-195,-193,-191,-197,-33,-32,-41,-40,-273,-272,-264,-179,-258,-196,-194,-192,-50,-51,-293,-237,-181,511,341,-49,-46,-288,-281,-48,-47,341,-282,]),'ANDEQUAL':([127,141,157,158,160,162,163,167,168,171,174,177,178,179,181,182,183,184,189,220,272,274,276,297,308,321,323,325,326,385,386,389,391,392,424,461,462,465,473,509,510,520,],[-308,-294,-259,-286,-299,-302,-301,-298,-300,-285,319,-283,-305,-284,-297,-295,-271,-296,-303,-294,-280,-279,-306,-263,-304,-260,-257,-262,-261,-277,-278,-274,-275,-276,-287,-273,-272,-264,-258,-288,-281,-282,]),'MINUSEQUAL':([127,141,157,158,160,162,163,167,168,171,174,177,178,179,181,182,183,184,189,220,272,274,276,297,308,321,323,325,326,385,386,389,391,392,424,461,462,465,473,509,510,520,],[-308,-294,-259,-286,-299,-302,-301,-298,-300,-285,311,-283,-305,-284,-297,-295,-271,-296,-303,-294,-280,-279,-306,-263,-304,-260,-257,-262,-261,-277,-278,-274,-275,-276,-287,-273,-272,-264,-258,-288,-281,-282,]),'ELLIPSIS':([254,],[374,]),'PPPRAGMASTR':([39,],[101,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'jump_statement':([133,233,238,343,346,360,439,474,475,478,512,522,527,],[213,213,213,213,213,213,213,213,213,213,213,213,213,]),'empty':([0,8,14,17,32,33,34,37,58,87,89,98,99,107,108,130,133,138,148,149,155,156,169,233,238,248,252,329,343,345,346,360,361,362,365,366,414,427,435,439,452,453,472,474,475,477,478,499,511,512,514,522,527,],[4,56,75,80,86,80,96,80,86,56,96,137,75,137,75,205,214,243,259,75,259,75,300,355,355,259,367,243,355,355,355,355,367,259,137,75,466,367,355,355,259,75,466,355,355,355,355,355,466,355,355,355,355,]),'expression':([133,188,228,233,238,273,286,298,322,324,342,343,344,345,346,348,360,435,439,474,475,477,478,480,499,508,512,514,522,527,],[215,327,350,215,215,390,402,327,327,327,432,215,434,215,215,438,215,215,215,215,215,215,215,502,215,519,215,215,215,215,]),'direct_abstract_declarator':([138,252,253,329,371,427,428,],[244,244,373,244,373,244,373,]),'declaration_specifiers':([0,32,48,58,90,98,107,133,233,252,254,345,361,365,427,],[8,87,8,87,87,138,138,87,87,138,138,87,138,138,138,]),'brace_close':([84,116,120,121,122,193,194,198,200,221,305,414,495,511,],[123,197,199,201,202,330,331,335,336,347,419,467,510,520,]),'struct_or_union_specifier':([0,32,34,48,58,84,89,90,98,107,120,121,122,129,133,143,188,198,200,233,252,254,296,298,322,324,345,361,365,427,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'typedef_name':([0,32,34,48,58,84,89,90,98,107,120,121,122,129,133,143,188,198,200,233,252,254,296,298,322,324,345,361,365,427,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'id_init_declarator_list':([34,89,],[92,92,]),'binary_expression':([109,133,136,148,155,188,195,206,224,228,233,238,248,258,263,266,269,271,273,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,301,303,315,322,324,340,341,342,343,344,345,346,348,360,362,435,439,452,460,463,468,474,475,477,478,480,486,489,499,508,512,514,522,527,],[161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,393,394,395,396,397,398,399,400,401,161,403,404,405,406,407,408,409,410,411,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'initializer_list':([169,472,],[299,495,]),'abstract_declarator':([138,252,329,427,],[247,368,247,368,]),'struct_declarator_list':([130,],[208,]),'declarator':([8,87,105,130,135,339,],[61,61,61,210,61,210,]),'struct_declarator':([130,339,],[209,429,]),'id_init_declarator':([34,89,],[95,95,]),'external_declaration':([0,48,],[28,103,]),'brace_open':([13,27,71,72,82,83,88,106,109,133,136,233,238,303,343,346,360,425,439,465,468,470,471,474,475,478,512,522,527,],[73,84,112,113,120,121,133,133,169,133,169,133,133,169,133,133,133,472,133,472,169,472,472,133,133,133,133,133,133,]),'offsetof_member_designator':([464,],[492,]),'declaration_specifiers_no_type_opt':([17,33,37,],[78,91,100,]),'argument_expression_list':([271,],[387,]),'declaration_specifiers_no_type':([0,17,32,33,37,48,58,90,98,107,133,233,252,254,345,361,365,427,],[34,79,89,79,79,34,89,89,143,143,89,89,143,143,89,143,143,143,]),'typeid_declarator':([8,68,87,105,130,135,339,],[63,111,63,63,63,63,63,]),'direct_id_declarator':([0,8,22,34,48,50,67,68,87,89,105,130,135,138,252,253,339,371,],[36,36,36,36,36,104,104,36,36,36,36,36,36,36,36,104,36,104,]),'type_qualifier':([0,8,14,17,32,33,37,48,58,77,84,87,90,98,99,107,108,120,121,122,129,130,133,138,147,149,154,156,188,198,200,233,252,254,296,298,322,324,329,345,361,365,366,427,451,453,],[37,64,76,37,37,37,37,37,37,118,76,64,37,37,76,37,76,76,76,76,118,211,37,64,118,76,118,76,76,76,76,37,37,37,76,76,76,76,211,37,37,37,76,37,118,76,]),'block_item_list_opt':([133,],[221,]),'unary_expression':([109,133,136,148,155,166,176,185,187,188,195,206,224,228,233,238,248,258,263,266,269,271,273,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,301,303,315,322,324,340,341,342,343,344,345,346,348,360,362,425,435,439,452,460,463,468,471,474,475,477,478,480,486,489,499,508,512,514,522,527,],[174,174,174,174,174,297,321,323,326,174,323,323,323,174,174,174,174,174,174,174,174,174,174,323,323,323,323,323,323,323,323,323,174,323,323,323,323,323,323,323,323,323,174,323,174,174,174,174,323,174,174,174,174,174,174,174,174,174,323,174,174,174,174,323,174,323,174,174,174,174,174,174,174,174,174,174,174,174,174,]),'decl_body':([0,32,48,58,90,133,233,345,],[42,42,42,42,42,42,42,42,]),'assignment_expression':([109,133,136,148,155,188,228,233,238,248,258,263,266,269,271,273,286,298,303,315,322,324,341,342,343,344,345,346,348,360,362,435,439,452,460,468,474,475,477,478,480,486,489,499,508,512,514,522,527,],[175,222,175,261,261,222,222,222,222,261,377,380,381,384,388,222,222,222,175,421,222,222,431,222,222,222,222,222,222,222,261,222,222,261,490,175,222,222,222,222,222,503,506,222,222,222,222,222,222,]),'identifier':([98,107,109,133,136,148,155,166,176,185,187,188,195,206,224,228,233,238,248,257,258,263,266,269,271,273,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,301,303,306,315,322,324,340,341,342,343,344,345,346,348,360,362,365,425,435,439,452,460,463,464,468,471,474,475,477,478,480,486,489,499,507,508,512,514,522,527,],[140,140,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,376,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,420,177,177,177,177,177,177,177,177,177,177,177,177,177,140,177,177,177,177,177,177,493,177,177,177,177,177,177,177,177,177,177,518,177,177,177,177,177,]),'initializer_list_opt':([169,],[305,]),'declaration_list':([32,58,],[90,90,]),'struct_declaration':([84,120,121,122,198,200,],[126,126,126,203,203,203,]),'abstract_declarator_opt':([138,329,],[250,426,]),'type_qualifier_list':([14,84,99,108,120,121,122,149,156,188,198,200,296,298,322,324,366,453,],[77,129,147,154,129,129,129,77,77,129,129,129,129,129,129,129,451,77,]),'translation_unit':([0,],[48,]),'identifier_list_opt':([98,107,365,],[145,153,450,]),'designator_list':([169,414,472,511,],[304,304,304,304,]),'compound_statement':([88,106,133,233,238,343,346,360,439,474,475,478,512,522,527,],[132,151,225,225,225,225,225,225,225,225,225,225,225,225,225,]),'unary_operator':([109,133,136,148,155,166,176,185,187,188,195,206,224,228,233,238,248,258,263,266,269,271,273,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,301,303,315,322,324,340,341,342,343,344,345,346,348,360,362,425,435,439,452,460,463,468,471,474,475,477,478,480,486,489,499,508,512,514,522,527,],[185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,]),'pointer':([0,8,22,34,48,68,74,87,89,105,130,135,138,252,329,339,427,],[50,67,50,50,50,67,117,67,50,67,67,67,253,371,428,67,428,]),'cast_expression':([109,133,136,148,155,185,188,195,206,224,228,233,238,248,258,263,266,269,271,273,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,301,303,315,322,324,340,341,342,343,344,345,346,348,360,362,425,435,439,452,460,463,468,471,474,475,477,478,480,486,489,499,508,512,514,522,527,],[191,191,191,191,191,325,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,473,191,191,191,191,191,191,473,191,191,191,191,191,191,191,191,191,191,191,191,191,]),'identifier_list':([98,107,365,],[146,146,146,]),'pp_directive':([0,48,],[1,1,]),'declaration':([0,32,48,58,90,133,233,345,],[2,85,2,85,134,226,226,435,]),'postfix_expression':([109,133,136,148,155,166,176,185,187,188,195,206,224,228,233,238,248,258,263,266,269,271,273,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,301,303,315,322,324,340,341,342,343,344,345,346,348,360,362,425,435,439,452,460,463,468,471,474,475,477,478,480,486,489,499,508,512,514,522,527,],[157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'struct_declaration_list':([84,120,121,],[122,198,200,]),'id_init_declarator_list_opt':([34,89,],[93,93,]),'labeled_statement':([133,233,238,343,346,360,439,474,475,478,512,522,527,],[227,227,227,227,227,227,227,227,227,227,227,227,227,]),'id_declarator':([0,8,22,34,48,68,87,89,105,130,135,138,252,339,],[32,58,81,94,32,81,131,94,131,131,131,245,81,131,]),'direct_typeid_declarator':([8,67,68,87,105,130,135,339,],[60,110,60,60,60,60,60,60,]),'storage_class_specifier':([0,8,17,32,33,37,48,58,87,90,98,107,133,138,233,252,254,345,361,365,427,],[33,55,33,33,33,33,33,33,55,33,33,33,33,55,33,33,33,33,33,33,33,]),'init_declarator_list_opt':([8,87,],[66,66,]),'type_name':([188,296,298,322,324,],[328,412,413,422,423,]),'designator':([169,304,414,472,511,],[302,418,302,302,302,]),'pragmacomp_or_statement':([238,343,346,439,474,475,478,512,522,527,],[358,433,437,479,496,498,501,521,526,528,]),'declaration_list_opt':([32,58,],[88,106,]),'init_declarator_list':([8,87,],[57,57,]),'designation':([169,414,472,511,],[307,307,307,307,]),'struct_declarator_list_opt':([130,],[207,]),'function_specifier':([0,8,17,32,33,37,48,58,87,90,98,107,133,138,233,252,254,345,361,365,427,],[17,62,17,17,17,17,17,17,62,17,17,17,17,62,17,17,17,17,17,17,17,]),'direct_typeid_noparen_declarator':([138,253,],[249,372,]),'statement':([133,233,238,343,346,360,439,474,475,478,512,522,527,],[231,231,359,359,359,443,359,497,359,359,359,359,359,]),'expression_opt':([133,233,238,343,345,346,360,435,439,474,475,477,478,499,512,514,522,527,],[232,232,232,232,436,232,232,476,232,232,232,500,232,513,232,523,232,232,]),'translation_unit_or_empty':([0,],[24,]),'assignment_operator':([174,],[315,]),'init_declarator':([8,87,105,135,],[69,69,150,241,]),'enumerator_list':([73,112,113,],[116,193,194,]),'specifier_qualifier_list':([84,120,121,122,188,198,200,296,298,322,324,],[130,130,130,130,329,130,130,329,329,329,329,]),'block_item_list':([133,],[233,]),'block_item':([133,233,],[234,356,]),'initializer':([109,136,303,468,],[170,242,416,494,]),'parameter_declaration':([98,107,252,254,361,365,427,],[142,142,142,375,142,142,142,]),'function_definition':([0,48,],[35,35,]),'parameter_type_list':([98,107,252,361,365,427,],[144,152,369,369,449,369,]),'type_specifier_no_typeid':([0,8,32,34,48,58,84,87,89,90,98,107,120,121,122,129,130,133,138,143,188,198,200,233,252,254,296,298,322,324,329,345,361,365,427,],[38,65,38,38,38,38,38,65,38,38,38,38,38,38,38,38,212,38,65,38,38,38,38,38,38,38,38,38,38,38,212,38,38,38,38,]),'expression_statement':([133,233,238,343,346,360,439,474,475,478,512,522,527,],[240,240,240,240,240,240,240,240,240,240,240,240,240,]),'designation_opt':([169,414,472,511,],[303,468,303,468,]),'enumerator':([73,112,113,196,],[115,115,115,334,]),'parameter_list':([98,107,252,361,365,427,],[139,139,139,139,139,139,]),'pppragma_directive':([0,48,84,120,121,122,133,198,200,233,238,343,346,360,439,474,475,478,512,522,527,],[45,45,125,125,125,125,236,125,125,236,360,360,360,236,360,360,360,360,360,360,360,]),'struct_or_union':([0,32,34,48,58,84,89,90,98,107,120,121,122,129,133,143,188,198,200,233,252,254,296,298,322,324,345,361,365,427,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'constant':([109,133,136,148,155,166,176,185,187,188,195,206,224,228,233,238,248,258,263,266,269,271,273,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,301,303,315,322,324,340,341,342,343,344,345,346,348,360,362,425,435,439,452,460,463,468,471,474,475,477,478,480,486,489,499,508,512,514,522,527,],[179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,]),'selection_statement':([133,233,238,343,346,360,439,474,475,478,512,522,527,],[237,237,237,237,237,237,237,237,237,237,237,237,237,]),'primary_expression':([109,133,136,148,155,166,176,185,187,188,195,206,224,228,233,238,248,258,263,266,269,271,273,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,301,303,315,322,324,340,341,342,343,344,345,346,348,360,362,425,435,439,452,460,463,468,471,474,475,477,478,480,486,489,499,508,512,514,522,527,],[183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,]),'unified_string_literal':([109,133,136,148,155,166,176,185,187,188,195,206,224,228,233,238,248,258,263,266,269,271,273,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,301,303,315,322,324,340,341,342,343,344,345,346,348,360,362,425,435,439,452,460,463,468,471,474,475,477,478,480,486,489,499,508,512,514,522,527,],[171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'type_qualifier_list_opt':([14,99,108,149,156,366,453,],[74,148,155,263,269,452,489,]),'type_specifier':([0,32,34,48,58,84,89,90,98,107,120,121,122,129,133,143,188,198,200,233,252,254,296,298,322,324,345,361,365,427,],[51,51,97,51,51,128,97,51,51,51,128,128,128,204,51,97,128,128,128,51,51,51,128,128,128,128,51,51,51,51,]),'unified_wstring_literal':([109,133,136,148,155,166,176,185,187,188,195,206,224,228,233,238,248,258,263,266,269,271,273,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,301,303,315,322,324,340,341,342,343,344,345,346,348,360,362,425,435,439,452,460,463,468,471,474,475,477,478,480,486,489,499,508,512,514,522,527,],[158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'iteration_statement':([133,233,238,343,346,360,439,474,475,478,512,522,527,],[239,239,239,239,239,239,239,239,239,239,239,239,239,]),'typeid_noparen_declarator':([138,],[251,]),'constant_expression':([195,206,224,301,340,],[332,337,349,415,430,]),'parameter_type_list_opt':([252,361,427,],[370,444,370,]),'conditional_expression':([109,133,136,148,155,188,195,206,224,228,233,238,248,258,263,266,269,271,273,286,298,301,303,315,322,324,340,341,342,343,344,345,346,348,360,362,435,439,452,460,463,468,474,475,477,478,480,486,489,499,508,512,514,522,527,],[190,190,190,190,190,190,333,333,333,190,190,190,190,190,190,190,190,190,190,190,190,333,190,190,190,190,333,190,190,190,190,190,190,190,190,190,190,190,190,190,491,190,190,190,190,190,190,190,190,190,190,190,190,190,190,]),'assignment_expression_opt':([148,155,248,362,452,],[262,268,364,446,488,]),'enum_specifier':([0,32,34,48,58,84,89,90,98,107,120,121,122,129,133,143,188,198,200,233,252,254,296,298,322,324,345,361,365,427,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',541),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',546),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',551),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',557),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',562),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',568),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',569),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',580),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',597),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',608),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',614),
  ('pragmacomp_or_statement -> pppragma_directive statement','pragmacomp_or_statement',2,'p_pragmacomp_or_statement','c_parser.py',661),
  ('pragmacomp_or_statement -> statement','pragmacomp_or_statement',1,'p_pragmacomp_or_statement','c_parser.py',662),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',681),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',682),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',741),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',750),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',751),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',761),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',766),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',771),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',777),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',782),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',787),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',792),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',797),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',802),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',808),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',809),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',810),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',811),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',812),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',817),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',822),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',823),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',824),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',825),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',826),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',827),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',828),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',829),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',830),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',831),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',832),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',833),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',838),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',839),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',840),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',841),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',846),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',847),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',848),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',853),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',854),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',862),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',863),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',868),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',869),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',874),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',875),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',882),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',887),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',892),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',897),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',906),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',907),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',917),
  ('struct_or_union_specifier -> struct_or_union brace_open brace_close','struct_or_union_specifier',3,'p_struct_or_union_specifier_2','c_parser.py',918),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',935),
  ('struct_or_union_specifier -> struct_or_union ID brace_open brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_3','c_parser.py',936),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',937),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_3','c_parser.py',938),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',954),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',955),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',962),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',963),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',971),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',1009),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',1014),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',1019),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',1020),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',1028),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',1033),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',1034),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',1042),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',1043),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',1048),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',1053),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',1054),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',1059),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',1060),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',1061),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1072),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1073),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1088),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1089),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1200),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1201),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1230),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1231),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1236),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1237),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1245),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1246),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1265),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1266),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1277),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1308),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1309),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1318),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1323),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1324),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1332),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1333),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1344),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1352),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1353),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1358),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1359),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1364),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1375),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1383),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1388),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1398),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1402),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1413),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1422),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1433),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1442),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1452),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1463),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1464),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1471),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1472),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1478),
  ('labeled_statement -> ID COLON pragmacomp_or_statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1484),
  ('labeled_statement -> CASE constant_expression COLON pragmacomp_or_statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1488),
  ('labeled_statement -> DEFAULT COLON pragmacomp_or_statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1492),
  ('selection_statement -> IF LPAREN expression RPAREN pragmacomp_or_statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1496),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE pragmacomp_or_statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1500),
  ('selection_statement -> SWITCH LPAREN expression RPAREN pragmacomp_or_statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1504),
  ('iteration_statement -> WHILE LPAREN expression RPAREN pragmacomp_or_statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1509),
  ('iteration_statement -> DO pragmacomp_or_statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1513),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN pragmacomp_or_statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1517),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN pragmacomp_or_statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1521),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1526),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1530),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1534),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1538),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1539),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1544),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1551),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1552),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1564),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1568),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1569),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1582),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1583),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1584),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1585),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1586),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1587),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1588),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1589),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1590),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1591),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1592),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1597),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1601),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1602),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1610),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1611),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1612),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1613),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1614),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1615),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1616),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1617),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1618),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1619),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1620),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1621),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1622),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1623),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1624),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1625),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1626),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1627),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1628),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1636),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1640),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1644),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1648),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1649),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1650),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1655),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1656),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1664),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1665),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1666),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1667),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1668),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1669),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1674),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1678),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1682),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1683),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1688),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1689),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1690),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1691),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1697),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1698),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1703),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1704),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1709),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1713),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1717),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1718),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1723),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1727),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1735),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1736),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1737),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1750),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1751),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1760),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1764),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1765),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1766),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1767),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1773),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1774),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1790),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1791),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1802),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1803),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1813),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1814),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1824),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1830),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1836),
]
