
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         pragmacomp_or_statement     : pppragma_directive statement\n                                        | statement\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n                                      | struct_or_union brace_open brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union ID brace_open brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON pragmacomp_or_statement  labeled_statement : CASE constant_expression COLON pragmacomp_or_statement  labeled_statement : DEFAULT COLON pragmacomp_or_statement  selection_statement : IF LPAREN expression RPAREN pragmacomp_or_statement  selection_statement : IF LPAREN expression RPAREN statement ELSE pragmacomp_or_statement  selection_statement : SWITCH LPAREN expression RPAREN pragmacomp_or_statement  iteration_statement : WHILE LPAREN expression RPAREN pragmacomp_or_statement  iteration_statement : DO pragmacomp_or_statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN pragmacomp_or_statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN pragmacomp_or_statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'LONG':([0,1,4,5,7,9,10,11,13,14,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,50,51,52,53,54,55,56,57,61,63,64,70,71,72,73,74,77,79,80,81,83,88,90,92,93,96,99,100,101,102,103,104,111,115,118,127,128,130,131,136,139,140,141,142,143,144,145,146,147,148,149,152,172,192,199,204,205,212,213,214,218,219,222,225,230,234,235,237,240,249,250,256,257,259,260,261,262,263,264,265,268,273,276,277,328,339,341,345,346,349,352,354,355,357,361,363,364,365,375,378,380,384,437,438,441,442,446,448,449,487,502,503,504,506,523,524,526,528,],[10,-103,-99,-110,-221,10,-106,-101,-100,-60,10,-104,-309,-95,-66,-64,-117,-65,-111,-118,-52,-63,-102,-114,10,-309,-96,-97,-116,-107,-112,10,-108,-68,-309,-62,-93,-115,-98,-105,-113,-67,-119,-29,-109,-307,-153,-152,-166,-61,-53,-94,-87,-9,-10,10,10,-84,10,10,-86,-90,10,-89,-92,-91,-69,-88,-132,10,-133,-83,-167,10,10,-70,10,-85,-30,10,10,10,10,-135,-308,-145,-130,-146,-142,10,10,-154,10,-36,10,-35,10,-75,-77,-74,-198,10,-78,-199,-200,-73,-72,-76,-71,-137,10,-128,-129,-131,-134,-143,-139,10,-156,-155,10,10,10,10,10,10,10,-34,-31,10,-201,-217,-215,-202,-80,-78,-214,-218,-136,-144,-138,10,-33,-32,-203,-216,-205,-79,-213,-204,-209,-80,-206,-208,-207,-210,-212,-211,]),'CONDOP':([122,143,157,159,161,164,165,168,169,170,171,175,176,178,179,180,181,182,184,185,189,217,267,271,272,274,275,282,284,305,327,388,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,413,414,415,460,461,463,465,507,510,518,],[-294,-308,-286,-299,-298,-302,-301,-300,-296,-297,-238,-259,298,-305,-283,-284,-303,-271,-257,-285,-295,-294,-257,-306,-261,-260,-263,-279,-280,-262,-304,-287,-274,-276,-275,-277,-278,-252,-244,-253,-242,-239,-254,-247,-246,-243,-251,-240,-249,-255,-241,-250,-248,-256,-245,-264,-258,-272,-273,-281,-288,-282,]),'INT_CONST_HEX':([22,25,41,52,55,59,61,62,75,99,104,111,112,124,125,126,128,135,137,143,154,155,156,158,160,162,163,166,172,177,183,186,187,200,206,210,211,212,213,214,218,219,220,222,225,229,230,234,235,237,238,245,246,247,251,268,273,276,280,281,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,308,313,314,315,316,317,318,319,320,321,322,323,324,325,326,337,340,342,349,350,352,354,355,356,357,358,359,360,361,363,364,365,367,371,373,374,379,387,417,420,431,432,433,435,439,441,442,446,448,449,451,458,462,464,466,467,468,474,476,477,482,483,484,485,486,487,500,502,503,504,506,508,509,515,516,521,523,524,526,527,528,],[-117,-118,-68,-119,-307,-27,-166,-28,-309,-69,-83,-167,170,170,-28,-309,170,170,-309,-308,170,-265,-270,-267,-266,170,170,170,170,170,-309,-268,-269,170,-266,170,170,-75,-77,-74,-198,170,170,-78,-199,170,-200,-73,-72,-76,170,170,-28,-309,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,-11,-12,170,-225,-231,-228,-234,-233,-230,-232,170,-224,-229,-226,-227,-266,-309,170,170,170,-201,-217,-215,170,-202,170,170,170,-80,170,-214,-218,170,-266,170,170,170,170,-182,-309,170,-28,-309,-266,170,-203,-216,-205,-79,-213,170,170,-309,170,170,170,-11,-266,170,170,170,170,170,170,170,-204,170,-209,-80,-206,-208,-309,170,170,170,170,-207,-210,-212,170,-211,]),'PLUS':([22,25,41,52,55,59,61,62,75,99,104,111,112,122,124,125,126,128,135,137,143,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,175,176,177,178,179,180,181,182,183,184,185,186,187,189,200,206,210,211,212,213,214,217,218,219,220,222,225,229,230,234,235,237,238,245,246,247,251,267,268,271,272,273,274,275,276,280,281,282,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,337,340,342,349,350,352,354,355,356,357,358,359,360,361,363,364,365,367,371,373,374,379,387,388,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,413,414,415,417,420,431,432,433,435,439,441,442,446,448,449,451,458,460,461,462,463,464,465,466,467,468,474,476,477,482,483,484,485,486,487,500,502,503,504,506,507,508,509,510,515,516,518,521,523,524,526,527,528,],[-117,-118,-68,-119,-307,-27,-166,-28,-309,-69,-83,-167,158,-294,158,-28,-309,158,158,-309,-308,158,-265,-270,-286,-267,-299,-266,-298,158,158,-302,-301,158,-300,-296,-297,-238,158,-259,289,158,-305,-283,-284,-303,-271,-309,-257,-285,-268,-269,-295,158,-266,158,158,-75,-77,-74,-294,-198,158,158,-78,-199,158,-200,-73,-72,-76,158,158,-28,-309,158,-257,158,-306,-261,158,-260,-263,158,158,158,-279,-280,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,-262,158,-11,-12,158,-225,-231,-228,-234,-233,-230,-232,158,-224,-229,-226,-227,-304,-266,-309,158,158,158,-201,-217,-215,158,-202,158,158,158,-80,158,-214,-218,158,-266,158,158,158,158,-287,-274,-276,-275,-277,-278,289,289,289,-242,-239,289,289,289,-243,289,-240,289,289,-241,289,289,289,289,-182,-309,158,-28,-309,-266,158,-203,-216,-205,-79,-213,158,158,-264,-258,-309,-272,158,-273,158,158,-11,-266,158,158,158,158,158,158,158,-204,158,-209,-80,-206,-208,-281,-309,158,-288,158,158,-282,158,-207,-210,-212,158,-211,]),'CONST':([0,1,4,5,7,8,9,10,11,13,14,17,18,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,50,51,52,53,54,55,56,57,61,62,63,64,70,74,75,79,80,81,88,90,92,93,96,99,101,102,103,104,111,118,125,126,127,128,130,131,136,137,139,140,141,142,143,144,145,146,147,148,149,152,172,192,199,204,205,212,213,214,218,219,222,225,230,234,235,237,240,246,247,249,250,256,257,259,260,261,262,263,264,265,268,273,276,277,328,339,340,341,345,346,349,352,354,355,357,361,363,364,365,375,378,380,384,432,433,437,438,441,442,446,448,449,487,502,503,504,506,523,524,526,528,],[22,-103,-99,-110,-221,22,22,-106,-101,-100,-60,-104,22,-95,-66,-64,-117,-65,-111,-118,-52,-63,-102,-114,22,22,-96,-97,-116,-107,-112,22,-108,-68,22,-62,-93,-115,-98,-105,-113,-67,-119,-29,-109,-307,-153,-152,-166,22,-61,-53,-94,22,22,-84,22,22,-90,22,-89,-92,-91,-69,-132,22,-133,-83,-167,22,22,22,-70,22,-85,-30,22,22,22,22,22,-135,-308,-145,-130,-146,-142,22,22,-154,22,-36,22,-35,22,-75,-77,-74,-198,22,-78,-199,-200,-73,-72,-76,-71,22,22,-137,22,-128,-129,-131,-134,-143,-139,22,-156,-155,22,22,22,22,22,22,22,22,-34,-31,22,-201,-217,-215,-202,-80,-78,-214,-218,-136,-144,-138,22,22,22,-33,-32,-203,-216,-205,-79,-213,-204,-209,-80,-206,-208,-207,-210,-212,-211,]),'TYPEID':([0,1,2,3,4,5,6,7,8,9,10,11,13,14,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,70,71,72,73,74,77,79,80,81,83,86,88,90,91,92,93,96,99,100,101,102,103,104,110,111,113,115,118,127,128,130,131,136,138,139,140,141,142,143,144,145,146,147,148,149,152,172,192,194,199,204,205,212,213,214,218,219,222,225,230,234,235,237,240,249,250,256,257,259,260,261,262,263,264,265,268,273,276,283,285,328,339,341,345,346,349,352,354,355,357,361,363,364,365,375,377,378,380,384,437,438,441,442,446,448,449,487,502,503,504,506,523,524,526,528,],[7,-103,-140,-141,-99,-110,56,-221,-309,7,-106,-101,-100,-60,7,-104,-309,-95,-66,-64,-117,-65,-111,-118,-52,-63,-102,-114,7,-309,-96,-97,-116,-107,-112,85,-108,-68,-309,103,-62,-93,-115,-98,-105,-113,-67,-119,-29,-109,-307,-153,-152,-27,-164,-166,-28,-61,-53,-94,-87,-9,-10,7,7,-84,85,7,-86,85,-90,7,85,-89,-92,-91,-69,-88,-132,7,-133,-83,-165,-167,85,7,193,-70,7,-85,-30,7,85,7,85,7,-135,-308,-145,-130,-146,-142,7,7,-154,7,-36,193,7,-35,7,-75,-77,-74,-198,7,-78,-199,-200,-73,-72,-76,-71,-137,7,-128,-129,-131,-134,-143,-139,7,-156,-155,7,7,7,393,396,7,7,7,-34,-31,7,-201,-217,-215,-202,-80,-78,-214,-218,-136,85,-144,-138,7,-33,-32,-203,-216,-205,-79,-213,-204,-209,-80,-206,-208,-207,-210,-212,-211,]),'EXTERN':([0,1,4,5,7,9,10,11,13,14,17,18,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,50,51,52,53,54,55,56,57,63,64,70,74,79,80,81,88,90,92,93,96,99,101,103,104,118,127,128,130,131,136,142,143,152,192,199,204,205,212,213,214,218,219,222,225,230,234,235,237,240,249,260,262,264,265,339,341,345,346,349,352,354,355,357,361,363,364,365,375,380,384,437,438,441,442,446,448,449,487,502,503,504,506,523,524,526,528,],[48,-103,-99,-110,-221,48,-106,-101,-100,-60,-104,48,-95,-66,-64,-117,-65,-111,-118,-52,-63,-102,-114,48,48,-96,-97,-116,-107,-112,48,-108,-68,48,-62,-93,-115,-98,-105,-113,-67,-119,-29,-109,-307,-153,-152,-61,-53,-94,48,-84,48,48,-90,48,-89,-92,-91,-69,-132,-133,-83,48,-70,48,-85,-30,48,-135,-308,-154,-36,48,-35,48,-75,-77,-74,-198,48,-78,-199,-200,-73,-72,-76,-71,-137,-134,-139,-156,-155,48,48,-34,-31,48,-201,-217,-215,-202,-80,-78,-214,-218,-136,-138,48,-33,-32,-203,-216,-205,-79,-213,-204,-209,-80,-206,-208,-207,-210,-212,-211,]),'XOREQUAL':([122,143,157,159,161,164,165,168,169,170,175,178,179,180,181,182,184,185,189,217,267,271,272,274,275,282,284,305,327,388,392,393,394,395,396,460,461,463,465,507,510,518,],[-294,-308,-286,-299,-298,-302,-301,-300,-296,-297,-259,-305,-283,-284,-303,-271,315,-285,-295,-294,-257,-306,-261,-260,-263,-279,-280,-262,-304,-287,-274,-276,-275,-277,-278,-264,-258,-272,-273,-281,-288,-282,]),'HEX_FLOAT_CONST':([22,25,41,52,55,59,61,62,75,99,104,111,112,124,125,126,128,135,137,143,154,155,156,158,160,162,163,166,172,177,183,186,187,200,206,210,211,212,213,214,218,219,220,222,225,229,230,234,235,237,238,245,246,247,251,268,273,276,280,281,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,308,313,314,315,316,317,318,319,320,321,322,323,324,325,326,337,340,342,349,350,352,354,355,356,357,358,359,360,361,363,364,365,367,371,373,374,379,387,417,420,431,432,433,435,439,441,442,446,448,449,451,458,462,464,466,467,468,474,476,477,482,483,484,485,486,487,500,502,503,504,506,508,509,515,516,521,523,524,526,527,528,],[-117,-118,-68,-119,-307,-27,-166,-28,-309,-69,-83,-167,168,168,-28,-309,168,168,-309,-308,168,-265,-270,-267,-266,168,168,168,168,168,-309,-268,-269,168,-266,168,168,-75,-77,-74,-198,168,168,-78,-199,168,-200,-73,-72,-76,168,168,-28,-309,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,-11,-12,168,-225,-231,-228,-234,-233,-230,-232,168,-224,-229,-226,-227,-266,-309,168,168,168,-201,-217,-215,168,-202,168,168,168,-80,168,-214,-218,168,-266,168,168,168,168,-182,-309,168,-28,-309,-266,168,-203,-216,-205,-79,-213,168,168,-309,168,168,168,-11,-266,168,168,168,168,168,168,168,-204,168,-209,-80,-206,-208,-309,168,168,168,168,-207,-210,-212,168,-211,]),'LT':([122,143,157,159,161,164,165,168,169,170,171,175,176,178,179,180,181,182,184,185,189,217,267,271,272,274,275,282,284,305,327,388,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,413,414,415,460,461,463,465,507,510,518,],[-294,-308,-286,-299,-298,-302,-301,-300,-296,-297,-238,-259,293,-305,-283,-284,-303,-271,-257,-285,-295,-294,-257,-306,-261,-260,-263,-279,-280,-262,-304,-287,-274,-276,-275,-277,-278,293,-244,293,-242,-239,293,-247,-246,-243,293,-240,-249,293,-241,293,-248,293,-245,-264,-258,-272,-273,-281,-288,-282,]),'COLON':([1,5,7,10,11,17,22,24,25,27,29,30,36,37,38,40,47,49,50,52,53,54,56,57,64,84,85,97,101,103,122,129,131,132,140,142,143,145,152,157,159,161,164,165,168,169,170,171,174,175,176,178,179,180,181,182,184,185,189,192,204,217,228,239,241,249,256,257,258,259,260,262,264,265,267,269,271,272,274,275,282,284,305,327,345,346,368,369,370,375,377,380,388,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,423,437,438,445,452,453,460,461,463,465,488,489,492,507,510,518,],[-103,-110,-221,-106,-101,-104,-117,-111,-118,-52,-102,-114,-116,-107,-112,-108,-115,-105,-113,-119,-29,-109,-153,-152,-53,-163,-37,-54,-132,-133,-294,-162,-30,-55,251,-135,-308,-130,-154,-286,-299,-298,-302,-301,-300,-296,-297,-238,-222,-259,-236,-305,-283,-284,-303,-271,-257,-285,-295,-36,-35,350,360,-219,-38,-137,-128,-129,379,-131,-134,-139,-156,-155,-257,-235,-306,-261,-260,-263,-279,-280,-262,-304,-34,-31,451,-44,-43,-136,251,-138,-287,-274,-276,-275,-277,-278,-252,-244,-253,-242,-239,-254,-247,-246,-243,-251,-240,-249,466,-255,-241,-250,-248,-256,-245,-223,-33,-32,-220,-42,-39,-264,-258,-272,-273,-41,-40,-237,-281,-288,-282,]),'LAND':([122,143,157,159,161,164,165,168,169,170,171,175,176,178,179,180,181,182,184,185,189,217,267,271,272,274,275,282,284,305,327,388,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,413,414,415,460,461,463,465,507,510,518,],[-294,-308,-286,-299,-298,-302,-301,-300,-296,-297,-238,-259,299,-305,-283,-284,-303,-271,-257,-285,-295,-294,-257,-306,-261,-260,-263,-279,-280,-262,-304,-287,-274,-276,-275,-277,-278,-252,-244,-253,-242,-239,-254,-247,-246,-243,-251,-240,-249,-255,-241,-250,-248,299,-245,-264,-258,-272,-273,-281,-288,-282,]),'SHORT':([0,1,4,5,7,9,10,11,13,14,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,50,51,52,53,54,55,56,57,61,63,64,70,71,72,73,74,77,79,80,81,83,88,90,92,93,96,99,100,101,102,103,104,111,115,118,127,128,130,131,136,139,140,141,142,143,144,145,146,147,148,149,152,172,192,199,204,205,212,213,214,218,219,222,225,230,234,235,237,240,249,250,256,257,259,260,261,262,263,264,265,268,273,276,277,328,339,341,345,346,349,352,354,355,357,361,363,364,365,375,378,380,384,437,438,441,442,446,448,449,487,502,503,504,506,523,524,526,528,],[17,-103,-99,-110,-221,17,-106,-101,-100,-60,17,-104,-309,-95,-66,-64,-117,-65,-111,-118,-52,-63,-102,-114,17,-309,-96,-97,-116,-107,-112,17,-108,-68,-309,-62,-93,-115,-98,-105,-113,-67,-119,-29,-109,-307,-153,-152,-166,-61,-53,-94,-87,-9,-10,17,17,-84,17,17,-86,-90,17,-89,-92,-91,-69,-88,-132,17,-133,-83,-167,17,17,-70,17,-85,-30,17,17,17,17,-135,-308,-145,-130,-146,-142,17,17,-154,17,-36,17,-35,17,-75,-77,-74,-198,17,-78,-199,-200,-73,-72,-76,-71,-137,17,-128,-129,-131,-134,-143,-139,17,-156,-155,17,17,17,17,17,17,17,-34,-31,17,-201,-217,-215,-202,-80,-78,-214,-218,-136,-144,-138,17,-33,-32,-203,-216,-205,-79,-213,-204,-209,-80,-206,-208,-207,-210,-212,-211,]),'NE':([122,143,157,159,161,164,165,168,169,170,171,175,176,178,179,180,181,182,184,185,189,217,267,271,272,274,275,282,284,305,327,388,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,413,414,415,460,461,463,465,507,510,518,],[-294,-308,-286,-299,-298,-302,-301,-300,-296,-297,-238,-259,295,-305,-283,-284,-303,-271,-257,-285,-295,-294,-257,-306,-261,-260,-263,-279,-280,-262,-304,-287,-274,-276,-275,-277,-278,295,-244,295,-242,-239,295,-247,-246,-243,-251,-240,-249,295,-241,-250,-248,295,-245,-264,-258,-272,-273,-281,-288,-282,]),'RSHIFT':([122,143,157,159,161,164,165,168,169,170,171,175,176,178,179,180,181,182,184,185,189,217,267,271,272,274,275,282,284,305,327,388,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,413,414,415,460,461,463,465,507,510,518,],[-294,-308,-286,-299,-298,-302,-301,-300,-296,-297,-238,-259,287,-305,-283,-284,-303,-271,-257,-285,-295,-294,-257,-306,-261,-260,-263,-279,-280,-262,-304,-287,-274,-276,-275,-277,-278,287,-244,287,-242,-239,287,287,287,-243,287,-240,287,287,-241,287,287,287,-245,-264,-258,-272,-273,-281,-288,-282,]),'SEMI':([0,1,4,5,7,9,10,11,13,14,16,17,18,19,20,21,22,23,24,25,27,28,29,30,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,63,64,65,66,67,68,69,70,71,72,73,77,80,83,84,85,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,122,127,128,129,131,132,139,140,142,143,144,145,146,147,148,149,152,157,159,161,164,165,167,168,169,170,171,173,174,175,176,178,179,180,181,182,184,185,189,190,192,204,212,213,214,216,217,218,219,220,221,222,225,227,229,230,231,232,234,235,237,239,240,241,242,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,269,271,272,274,275,282,284,305,327,345,346,349,350,351,352,353,354,355,357,360,361,363,364,365,366,369,370,375,376,378,380,388,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,413,414,415,421,423,437,438,439,440,441,442,445,446,448,449,451,452,453,456,457,460,461,463,465,469,481,482,483,484,486,487,488,489,492,501,502,503,504,506,507,510,516,517,518,521,523,524,526,527,528,],[20,-103,-99,-110,-221,20,-106,-101,-100,-60,-309,-104,-309,-95,-66,-64,-117,-65,-111,-118,-52,-63,-102,-114,-309,-96,-97,-116,-107,-112,-309,-108,-68,-309,-62,-93,104,-115,-98,-105,-113,-67,-119,-29,-109,-307,-153,-152,-61,-53,-15,-82,-124,-126,-16,-94,-87,-9,-10,-309,-309,-86,-163,-37,-120,-90,-19,-162,-89,-92,-81,-122,-91,-54,-20,-69,-88,-132,144,-133,-83,-294,-70,-309,-162,-30,-55,144,-309,-135,-308,-145,-130,-146,-142,144,144,-154,-286,-299,-298,-302,-301,-127,-300,-296,-297,-238,-177,-222,-259,-236,-305,-283,-284,-303,-271,-257,-285,-295,-125,-36,-35,-75,-77,-74,-13,-294,-198,-309,354,355,-78,-199,-14,-309,-200,364,365,-73,-72,-76,-219,-71,-38,-123,-121,-137,144,-26,378,-147,-25,-128,-129,-149,-131,-134,-143,-139,144,-156,-155,-257,-235,-306,-261,-260,-263,-279,-280,-262,-304,-34,-31,-309,-309,-13,-201,442,-217,-215,-202,-309,-80,-78,-214,-218,449,-44,-43,-136,-151,-144,-138,-287,-274,-276,-275,-277,-278,-252,-244,-253,-242,-239,-254,-247,-246,-243,-251,-240,-249,-255,-241,-250,-248,-256,-245,-178,-223,-33,-32,-309,482,-203,-216,-220,-205,-79,-213,-309,-42,-39,-148,-150,-264,-258,-272,-273,-179,500,-309,-309,-309,-309,-204,-41,-40,-237,515,-209,-80,-206,-208,-281,-288,-309,524,-282,-309,-207,-210,-212,-309,-211,]),'GT':([122,143,157,159,161,164,165,168,169,170,171,175,176,178,179,180,181,182,184,185,189,217,267,271,272,274,275,282,284,305,327,388,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,413,414,415,460,461,463,465,507,510,518,],[-294,-308,-286,-299,-298,-302,-301,-300,-296,-297,-238,-259,297,-305,-283,-284,-303,-271,-257,-285,-295,-294,-257,-306,-261,-260,-263,-279,-280,-262,-304,-287,-274,-276,-275,-277,-278,297,-244,297,-242,-239,297,-247,-246,-243,297,-240,-249,297,-241,297,-248,297,-245,-264,-258,-272,-273,-281,-288,-282,]),'RSHIFTEQUAL':([122,143,157,159,161,164,165,168,169,170,175,178,179,180,181,182,184,185,189,217,267,271,272,274,275,282,284,305,327,388,392,393,394,395,396,460,461,463,465,507,510,518,],[-294,-308,-286,-299,-298,-302,-301,-300,-296,-297,-259,-305,-283,-284,-303,-271,321,-285,-295,-294,-257,-306,-261,-260,-263,-279,-280,-262,-304,-287,-274,-276,-275,-277,-278,-264,-258,-272,-273,-281,-288,-282,]),'UNSIGNED':([0,1,4,5,7,9,10,11,13,14,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,50,51,52,53,54,55,56,57,61,63,64,70,71,72,73,74,77,79,80,81,83,88,90,92,93,96,99,100,101,102,103,104,111,115,118,127,128,130,131,136,139,140,141,142,143,144,145,146,147,148,149,152,172,192,199,204,205,212,213,214,218,219,222,225,230,234,235,237,240,249,250,256,257,259,260,261,262,263,264,265,268,273,276,277,328,339,341,345,346,349,352,354,355,357,361,363,364,365,375,378,380,384,437,438,441,442,446,448,449,487,502,503,504,506,523,524,526,528,],[24,-103,-99,-110,-221,24,-106,-101,-100,-60,24,-104,-309,-95,-66,-64,-117,-65,-111,-118,-52,-63,-102,-114,24,-309,-96,-97,-116,-107,-112,24,-108,-68,-309,-62,-93,-115,-98,-105,-113,-67,-119,-29,-109,-307,-153,-152,-166,-61,-53,-94,-87,-9,-10,24,24,-84,24,24,-86,-90,24,-89,-92,-91,-69,-88,-132,24,-133,-83,-167,24,24,-70,24,-85,-30,24,24,24,24,-135,-308,-145,-130,-146,-142,24,24,-154,24,-36,24,-35,24,-75,-77,-74,-198,24,-78,-199,-200,-73,-72,-76,-71,-137,24,-128,-129,-131,-134,-143,-139,24,-156,-155,24,24,24,24,24,24,24,-34,-31,24,-201,-217,-215,-202,-80,-78,-214,-218,-136,-144,-138,24,-33,-32,-203,-216,-205,-79,-213,-204,-209,-80,-206,-208,-207,-210,-212,-211,]),'WCHAR_CONST':([22,25,41,52,55,59,61,62,75,99,104,111,112,124,125,126,128,135,137,143,154,155,156,158,160,162,163,166,172,177,183,186,187,200,206,210,211,212,213,214,218,219,220,222,225,229,230,234,235,237,238,245,246,247,251,268,273,276,280,281,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,308,313,314,315,316,317,318,319,320,321,322,323,324,325,326,337,340,342,349,350,352,354,355,356,357,358,359,360,361,363,364,365,367,371,373,374,379,387,417,420,431,432,433,435,439,441,442,446,448,449,451,458,462,464,466,467,468,474,476,477,482,483,484,485,486,487,500,502,503,504,506,508,509,515,516,521,523,524,526,527,528,],[-117,-118,-68,-119,-307,-27,-166,-28,-309,-69,-83,-167,164,164,-28,-309,164,164,-309,-308,164,-265,-270,-267,-266,164,164,164,164,164,-309,-268,-269,164,-266,164,164,-75,-77,-74,-198,164,164,-78,-199,164,-200,-73,-72,-76,164,164,-28,-309,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,-11,-12,164,-225,-231,-228,-234,-233,-230,-232,164,-224,-229,-226,-227,-266,-309,164,164,164,-201,-217,-215,164,-202,164,164,164,-80,164,-214,-218,164,-266,164,164,164,164,-182,-309,164,-28,-309,-266,164,-203,-216,-205,-79,-213,164,164,-309,164,164,164,-11,-266,164,164,164,164,164,164,164,-204,164,-209,-80,-206,-208,-309,164,164,164,164,-207,-210,-212,164,-211,]),'FOR':([41,55,99,104,128,143,212,213,214,218,219,222,225,229,230,234,235,237,350,352,354,355,357,360,361,363,364,365,441,442,446,448,449,451,483,484,486,487,502,503,504,506,516,521,523,524,526,527,528,],[-68,-307,-69,-83,215,-308,-75,-77,-74,-198,215,-78,-199,215,-200,-73,-72,-76,215,-201,-217,-215,-202,215,-80,215,-214,-218,-203,-216,-205,-79,-213,215,215,215,215,-204,-209,-80,-206,-208,215,215,-207,-210,-212,215,-211,]),'RETURN':([41,55,99,104,128,143,212,213,214,218,219,222,225,229,230,234,235,237,350,352,354,355,357,360,361,363,364,365,441,442,446,448,449,451,483,484,486,487,502,503,504,506,516,521,523,524,526,527,528,],[-68,-307,-69,-83,220,-308,-75,-77,-74,-198,220,-78,-199,220,-200,-73,-72,-76,220,-201,-217,-215,-202,220,-80,220,-214,-218,-203,-216,-205,-79,-213,220,220,220,220,-204,-209,-80,-206,-208,220,220,-207,-210,-212,220,-211,]),'COMMA':([1,4,5,7,8,10,11,13,17,19,22,24,25,27,29,30,34,35,36,37,38,40,45,47,48,49,50,52,53,54,56,57,59,60,61,62,64,67,68,69,70,84,85,87,88,90,92,93,95,96,97,98,101,103,107,108,109,110,111,114,118,120,121,122,123,129,131,132,142,143,145,150,151,152,153,157,159,161,164,165,167,168,169,170,171,173,174,175,176,178,179,180,181,182,184,185,189,190,192,193,194,195,196,197,198,201,202,203,204,217,227,239,241,242,248,249,252,254,256,257,258,259,260,262,264,265,266,267,269,270,271,272,274,275,277,279,282,284,305,310,327,329,330,331,344,345,346,353,369,370,375,376,380,385,386,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,418,421,423,424,425,426,427,428,437,438,443,444,445,450,452,453,456,457,460,461,463,465,469,472,473,478,479,480,488,489,490,491,492,493,496,497,505,507,510,512,513,518,519,],[-103,-99,-110,-221,-309,-106,-101,-100,-104,-95,-117,-111,-118,-52,-102,-114,-96,-97,-116,-107,-112,-108,-93,-115,-98,-105,-113,-119,-29,-109,-153,-152,-27,-164,-166,-28,-53,-124,-126,113,-94,-163,-37,-120,-90,-162,-89,-92,-122,-91,-54,138,-132,-133,153,-157,-160,-165,-167,191,-309,205,-170,-294,-175,-162,-30,-55,-135,-308,-130,153,153,-154,-158,-286,-299,-298,-302,-301,-127,-300,-296,-297,-238,-177,-222,-259,-236,-305,-283,-284,-303,-271,-257,-285,-295,-125,-36,-45,-188,-1,-173,-2,-172,-56,-190,-174,-35,-294,359,-219,-38,-123,-121,-137,377,-147,-128,-129,-149,-131,-134,-139,-156,-155,-159,-257,-235,-161,-306,-261,-260,-263,-309,359,-279,-280,-262,420,-304,-176,-57,-189,-171,-34,-31,359,-44,-43,-136,-151,-138,-188,-187,-287,359,464,-292,-274,-276,-275,-277,-278,-252,-244,-253,-242,-239,-254,-247,-246,-243,-251,-240,-249,359,-255,-241,-250,-248,-256,-245,-180,-178,-223,471,-197,-191,-195,-193,-33,-32,359,359,-220,359,-42,-39,-148,-150,-264,-258,-272,-273,-179,-51,-50,-196,-194,-192,-41,-40,508,-293,-237,-181,-49,-46,359,-281,-288,-48,-47,-282,359,]),'BREAK':([41,55,99,104,128,143,212,213,214,218,219,222,225,229,230,234,235,237,350,352,354,355,357,360,361,363,364,365,441,442,446,448,449,451,483,484,486,487,502,503,504,506,516,521,523,524,526,527,528,],[-68,-307,-69,-83,231,-308,-75,-77,-74,-198,231,-78,-199,231,-200,-73,-72,-76,231,-201,-217,-215,-202,231,-80,231,-214,-218,-203,-216,-205,-79,-213,231,231,231,231,-204,-209,-80,-206,-208,231,231,-207,-210,-212,231,-211,]),'INT_CONST_OCT':([22,25,41,52,55,59,61,62,75,99,104,111,112,124,125,126,128,135,137,143,154,155,156,158,160,162,163,166,172,177,183,186,187,200,206,210,211,212,213,214,218,219,220,222,225,229,230,234,235,237,238,245,246,247,251,268,273,276,280,281,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,308,313,314,315,316,317,318,319,320,321,322,323,324,325,326,337,340,342,349,350,352,354,355,356,357,358,359,360,361,363,364,365,367,371,373,374,379,387,417,420,431,432,433,435,439,441,442,446,448,449,451,458,462,464,466,467,468,474,476,477,482,483,484,485,486,487,500,502,503,504,506,508,509,515,516,521,523,524,526,527,528,],[-117,-118,-68,-119,-307,-27,-166,-28,-309,-69,-83,-167,169,169,-28,-309,169,169,-309,-308,169,-265,-270,-267,-266,169,169,169,169,169,-309,-268,-269,169,-266,169,169,-75,-77,-74,-198,169,169,-78,-199,169,-200,-73,-72,-76,169,169,-28,-309,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,-11,-12,169,-225,-231,-228,-234,-233,-230,-232,169,-224,-229,-226,-227,-266,-309,169,169,169,-201,-217,-215,169,-202,169,169,169,-80,169,-214,-218,169,-266,169,169,169,169,-182,-309,169,-28,-309,-266,169,-203,-216,-205,-79,-213,169,169,-309,169,169,169,-11,-266,169,169,169,169,169,169,169,-204,169,-209,-80,-206,-208,-309,169,169,169,169,-207,-210,-212,169,-211,]),'FLOAT_CONST':([22,25,41,52,55,59,61,62,75,99,104,111,112,124,125,126,128,135,137,143,154,155,156,158,160,162,163,166,172,177,183,186,187,200,206,210,211,212,213,214,218,219,220,222,225,229,230,234,235,237,238,245,246,247,251,268,273,276,280,281,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,308,313,314,315,316,317,318,319,320,321,322,323,324,325,326,337,340,342,349,350,352,354,355,356,357,358,359,360,361,363,364,365,367,371,373,374,379,387,417,420,431,432,433,435,439,441,442,446,448,449,451,458,462,464,466,467,468,474,476,477,482,483,484,485,486,487,500,502,503,504,506,508,509,515,516,521,523,524,526,527,528,],[-117,-118,-68,-119,-307,-27,-166,-28,-309,-69,-83,-167,159,159,-28,-309,159,159,-309,-308,159,-265,-270,-267,-266,159,159,159,159,159,-309,-268,-269,159,-266,159,159,-75,-77,-74,-198,159,159,-78,-199,159,-200,-73,-72,-76,159,159,-28,-309,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,-11,-12,159,-225,-231,-228,-234,-233,-230,-232,159,-224,-229,-226,-227,-266,-309,159,159,159,-201,-217,-215,159,-202,159,159,159,-80,159,-214,-218,159,-266,159,159,159,159,-182,-309,159,-28,-309,-266,159,-203,-216,-205,-79,-213,159,159,-309,159,159,159,-11,-266,159,159,159,159,159,159,159,-204,159,-209,-80,-206,-208,-309,159,159,159,159,-207,-210,-212,159,-211,]),'__INT128':([0,1,4,5,7,9,10,11,13,14,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,50,51,52,53,54,55,56,57,61,63,64,70,71,72,73,74,77,79,80,81,83,88,90,92,93,96,99,100,101,102,103,104,111,115,118,127,128,130,131,136,139,140,141,142,143,144,145,146,147,148,149,152,172,192,199,204,205,212,213,214,218,219,222,225,230,234,235,237,240,249,250,256,257,259,260,261,262,263,264,265,268,273,276,277,328,339,341,345,346,349,352,354,355,357,361,363,364,365,375,378,380,384,437,438,441,442,446,448,449,487,502,503,504,506,523,524,526,528,],[38,-103,-99,-110,-221,38,-106,-101,-100,-60,38,-104,-309,-95,-66,-64,-117,-65,-111,-118,-52,-63,-102,-114,38,-309,-96,-97,-116,-107,-112,38,-108,-68,-309,-62,-93,-115,-98,-105,-113,-67,-119,-29,-109,-307,-153,-152,-166,-61,-53,-94,-87,-9,-10,38,38,-84,38,38,-86,-90,38,-89,-92,-91,-69,-88,-132,38,-133,-83,-167,38,38,-70,38,-85,-30,38,38,38,38,-135,-308,-145,-130,-146,-142,38,38,-154,38,-36,38,-35,38,-75,-77,-74,-198,38,-78,-199,-200,-73,-72,-76,-71,-137,38,-128,-129,-131,-134,-143,-139,38,-156,-155,38,38,38,38,38,38,38,-34,-31,38,-201,-217,-215,-202,-80,-78,-214,-218,-136,-144,-138,38,-33,-32,-203,-216,-205,-79,-213,-204,-209,-80,-206,-208,-207,-210,-212,-211,]),'FLOAT':([0,1,4,5,7,9,10,11,13,14,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,50,51,52,53,54,55,56,57,61,63,64,70,71,72,73,74,77,79,80,81,83,88,90,92,93,96,99,100,101,102,103,104,111,115,118,127,128,130,131,136,139,140,141,142,143,144,145,146,147,148,149,152,172,192,199,204,205,212,213,214,218,219,222,225,230,234,235,237,240,249,250,256,257,259,260,261,262,263,264,265,268,273,276,277,328,339,341,345,346,349,352,354,355,357,361,363,364,365,375,378,380,384,437,438,441,442,446,448,449,487,502,503,504,506,523,524,526,528,],[37,-103,-99,-110,-221,37,-106,-101,-100,-60,37,-104,-309,-95,-66,-64,-117,-65,-111,-118,-52,-63,-102,-114,37,-309,-96,-97,-116,-107,-112,37,-108,-68,-309,-62,-93,-115,-98,-105,-113,-67,-119,-29,-109,-307,-153,-152,-166,-61,-53,-94,-87,-9,-10,37,37,-84,37,37,-86,-90,37,-89,-92,-91,-69,-88,-132,37,-133,-83,-167,37,37,-70,37,-85,-30,37,37,37,37,-135,-308,-145,-130,-146,-142,37,37,-154,37,-36,37,-35,37,-75,-77,-74,-198,37,-78,-199,-200,-73,-72,-76,-71,-137,37,-128,-129,-131,-134,-143,-139,37,-156,-155,37,37,37,37,37,37,37,-34,-31,37,-201,-217,-215,-202,-80,-78,-214,-218,-136,-144,-138,37,-33,-32,-203,-216,-205,-79,-213,-204,-209,-80,-206,-208,-207,-210,-212,-211,]),'ARROW':([122,143,157,159,161,164,165,168,169,170,175,178,179,180,181,182,185,189,217,271,282,284,327,388,392,393,394,395,396,463,465,507,510,518,],[-294,-308,-286,-299,-298,-302,-301,-300,-296,-297,285,-305,-283,-284,-303,-271,-285,-295,-294,-306,-279,-280,-304,-287,-274,-276,-275,-277,-278,-272,-273,-281,-288,-282,]),'DIVIDE':([122,143,157,159,161,164,165,168,169,170,171,175,176,178,179,180,181,182,184,185,189,217,267,271,272,274,275,282,284,305,327,388,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,413,414,415,460,461,463,465,507,510,518,],[-294,-308,-286,-299,-298,-302,-301,-300,-296,-297,-238,-259,296,-305,-283,-284,-303,-271,-257,-285,-295,-294,-257,-306,-261,-260,-263,-279,-280,-262,-304,-287,-274,-276,-275,-277,-278,296,296,296,296,-239,296,296,296,296,296,-240,296,296,-241,296,296,296,296,-264,-258,-272,-273,-281,-288,-282,]),'RBRACKET':([22,25,52,59,61,75,111,122,124,125,137,143,157,159,161,164,165,168,169,170,171,174,175,176,178,179,180,181,182,184,185,189,200,206,207,208,209,239,245,246,267,269,271,272,274,275,282,284,305,327,337,338,340,342,347,348,371,372,388,389,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,413,414,415,422,423,431,432,435,436,445,454,455,460,461,463,465,474,475,492,498,499,507,510,518,519,],[-117,-118,-119,-27,-166,-309,-167,-294,-309,-28,-309,-308,-286,-299,-298,-302,-301,-300,-296,-297,-238,-222,-259,-236,-305,-283,-284,-303,-271,-257,-285,-295,-309,345,-3,-4,346,-219,-309,-28,-257,-235,-306,-261,-260,-263,-279,-280,-262,-304,427,428,-309,-309,437,438,452,453,-287,463,-274,-276,-275,-277,-278,-252,-244,-253,-242,-239,-254,-247,-246,-243,-251,-240,-249,-255,-241,-250,-248,-256,-245,470,-223,-309,-28,479,480,-220,488,489,-264,-258,-272,-273,496,497,-237,512,513,-281,-288,-282,525,]),'WHILE':([41,55,99,104,128,143,212,213,214,218,219,222,225,229,230,234,235,237,350,352,354,355,357,360,361,362,363,364,365,441,442,446,448,449,451,483,484,486,487,502,503,504,506,516,521,523,524,526,527,528,],[-68,-307,-69,-83,223,-308,-75,-77,-74,-198,223,-78,-199,223,-200,-73,-72,-76,223,-201,-217,-215,-202,223,-80,447,223,-214,-218,-203,-216,-205,-79,-213,223,223,223,223,-204,-209,-80,-206,-208,223,223,-207,-210,-212,223,-211,]),'STRING_LITERAL':([22,25,41,52,55,59,61,62,75,99,104,111,112,124,125,126,128,135,137,143,154,155,156,158,160,162,163,166,172,177,181,183,185,186,187,200,206,210,211,212,213,214,218,219,220,222,225,229,230,234,235,237,238,245,246,247,251,268,273,276,280,281,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,308,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,337,340,342,349,350,352,354,355,356,357,358,359,360,361,363,364,365,367,371,373,374,379,387,417,420,431,432,433,435,439,441,442,446,448,449,451,458,462,464,466,467,468,474,476,477,482,483,484,485,486,487,500,502,503,504,506,508,509,515,516,521,523,524,526,527,528,],[-117,-118,-68,-119,-307,-27,-166,-28,-309,-69,-83,-167,181,181,-28,-309,181,181,-309,-308,181,-265,-270,-267,-266,181,181,181,181,181,-303,-309,327,-268,-269,181,-266,181,181,-75,-77,-74,-198,181,181,-78,-199,181,-200,-73,-72,-76,181,181,-28,-309,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,-11,-12,181,-225,-231,-228,-234,-233,-230,-232,181,-224,-229,-226,-227,-304,-266,-309,181,181,181,-201,-217,-215,181,-202,181,181,181,-80,181,-214,-218,181,-266,181,181,181,181,-182,-309,181,-28,-309,-266,181,-203,-216,-205,-79,-213,181,181,-309,181,181,181,-11,-266,181,181,181,181,181,181,181,-204,181,-209,-80,-206,-208,-309,181,181,181,181,-207,-210,-212,181,-211,]),'TYPEDEF':([0,1,4,5,7,9,10,11,13,14,17,18,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,50,51,52,53,54,55,56,57,63,64,70,74,79,80,81,88,90,92,93,96,99,101,103,104,118,127,128,130,131,136,142,143,152,192,199,204,205,212,213,214,218,219,222,225,230,234,235,237,240,249,260,262,264,265,339,341,345,346,349,352,354,355,357,361,363,364,365,375,380,384,437,438,441,442,446,448,449,487,502,503,504,506,523,524,526,528,],[4,-103,-99,-110,-221,4,-106,-101,-100,-60,-104,4,-95,-66,-64,-117,-65,-111,-118,-52,-63,-102,-114,4,4,-96,-97,-116,-107,-112,4,-108,-68,4,-62,-93,-115,-98,-105,-113,-67,-119,-29,-109,-307,-153,-152,-61,-53,-94,4,-84,4,4,-90,4,-89,-92,-91,-69,-132,-133,-83,4,-70,4,-85,-30,4,-135,-308,-154,-36,4,-35,4,-75,-77,-74,-198,4,-78,-199,-200,-73,-72,-76,-71,-137,-134,-139,-156,-155,4,4,-34,-31,4,-201,-217,-215,-202,-80,-78,-214,-218,-136,-138,4,-33,-32,-203,-216,-205,-79,-213,-204,-209,-80,-206,-208,-207,-210,-212,-211,]),'RBRACE':([41,55,99,102,104,107,108,109,122,128,139,143,144,146,147,148,149,150,151,153,157,159,161,164,165,168,169,170,171,173,174,175,176,178,179,180,181,182,183,184,185,189,212,213,214,216,218,219,222,224,225,230,234,235,237,250,261,263,266,267,269,270,271,272,274,275,282,284,305,308,310,312,327,352,354,355,357,361,363,364,365,378,388,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,413,414,415,418,420,421,423,441,442,446,448,449,460,461,463,465,469,487,490,492,493,502,503,504,506,507,508,510,518,523,524,526,528,],[-68,-307,-69,143,-83,143,-157,-160,-294,-309,143,-308,-145,-146,-142,143,143,143,143,-158,-286,-299,-298,-302,-301,-300,-296,-297,-238,-177,-222,-259,-236,-305,-283,-284,-303,-271,-309,-257,-285,-295,-75,-77,-74,-5,-198,-6,-78,143,-199,-200,-73,-72,-76,143,-143,143,-159,-257,-235,-161,-306,-261,-260,-263,-279,-280,-262,-21,-22,143,-304,-201,-217,-215,-202,-80,-78,-214,-218,-144,-287,-274,-276,-275,-277,-278,-252,-244,-253,-242,-239,-254,-247,-246,-243,-251,-240,-249,-255,-241,-250,-248,-256,-245,-180,143,-178,-223,-203,-216,-205,-79,-213,-264,-258,-272,-273,-179,-204,143,-237,-181,-209,-80,-206,-208,-281,143,-288,-282,-207,-210,-212,-211,]),'LPAREN':([0,1,4,5,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,70,71,72,73,75,77,80,83,85,86,88,91,92,93,96,97,99,100,101,103,104,110,111,112,113,118,122,124,125,126,127,128,131,132,135,137,138,140,142,143,145,152,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,172,175,177,178,179,180,181,182,183,185,186,187,188,189,192,193,194,199,200,201,202,204,206,210,211,212,213,214,215,217,218,219,220,222,223,225,226,229,230,234,235,236,237,238,240,241,245,246,247,249,251,256,257,259,260,262,264,265,268,271,273,276,277,280,281,282,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,308,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,330,331,332,337,340,342,345,346,349,350,352,354,355,356,357,358,359,360,361,363,364,365,367,369,370,371,373,374,375,377,379,380,384,385,387,388,392,393,394,395,396,417,420,425,426,427,428,431,432,433,435,437,438,439,441,442,446,447,448,449,451,452,453,458,462,463,464,465,466,467,468,472,473,474,476,477,478,479,480,482,483,484,485,486,487,488,489,496,497,500,502,503,504,506,507,508,509,510,512,513,515,516,518,521,523,524,526,527,528,],[32,-103,-99,-110,-221,-309,32,-106,-101,32,-100,-60,32,-104,-309,-95,-66,-64,-117,-65,-111,-118,74,-63,-102,-114,32,-309,-96,-97,-116,-107,-112,91,-108,-68,-309,-62,-93,-115,-98,-105,-113,-67,-119,-29,-109,-307,-153,-152,-27,-164,-166,-28,-61,74,-94,-87,-9,-10,-309,32,91,-86,-37,91,-90,91,-89,-92,-91,136,-69,-88,-132,-133,-83,-165,-167,172,91,199,-294,172,-28,-309,-70,172,-30,136,172,-309,91,91,-135,-308,-130,-154,268,-265,-270,-286,-267,-299,-266,-298,273,273,-302,-301,276,-300,-296,-297,172,281,268,-305,-283,-284,-303,-271,-309,-285,-268,-269,328,-295,-36,-45,199,199,172,339,341,-35,-266,172,172,-75,-77,-74,349,-294,-198,172,172,-78,356,-199,358,172,-200,-73,-72,367,-76,268,-71,-38,172,-28,-309,-137,268,-128,-129,-131,-134,-139,-156,-155,172,-306,172,172,384,172,172,-279,-280,268,268,268,268,268,268,268,268,268,268,268,268,172,268,268,268,268,268,268,172,-11,-12,268,-225,-231,-228,-234,-233,-230,-232,172,-224,-229,-226,-227,-304,339,341,199,-266,-309,172,-34,-31,172,172,-201,-217,-215,172,-202,172,172,172,-80,172,-214,-218,172,-44,-43,-266,172,172,-136,91,268,-138,384,384,268,-287,-274,-276,-275,-277,-278,-182,-309,-197,-191,-195,-193,172,-28,-309,-266,-33,-32,172,-203,-216,-205,485,-79,-213,172,-42,-39,268,-309,-272,172,-273,268,172,-11,-51,-50,-266,172,172,-196,-194,-192,172,172,172,172,172,-204,-41,-40,-49,-46,172,-209,-80,-206,-208,-281,-309,172,-288,-48,-47,172,172,-282,172,-207,-210,-212,172,-211,]),'XOR':([122,143,157,159,161,164,165,168,169,170,171,175,176,178,179,180,181,182,184,185,189,217,267,271,272,274,275,282,284,305,327,388,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,413,414,415,460,461,463,465,507,510,518,],[-294,-308,-286,-299,-298,-302,-301,-300,-296,-297,-238,-259,291,-305,-283,-284,-303,-271,-257,-285,-295,-294,-257,-306,-261,-260,-263,-279,-280,-262,-304,-287,-274,-276,-275,-277,-278,-252,-244,291,-242,-239,-254,-247,-246,-243,-251,-240,-249,291,-241,-250,-248,291,-245,-264,-258,-272,-273,-281,-288,-282,]),'MOD':([122,143,157,159,161,164,165,168,169,170,171,175,176,178,179,180,181,182,184,185,189,217,267,271,272,274,275,282,284,305,327,388,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,413,414,415,460,461,463,465,507,510,518,],[-294,-308,-286,-299,-298,-302,-301,-300,-296,-297,-238,-259,300,-305,-283,-284,-303,-271,-257,-285,-295,-294,-257,-306,-261,-260,-263,-279,-280,-262,-304,-287,-274,-276,-275,-277,-278,300,300,300,300,-239,300,300,300,300,300,-240,300,300,-241,300,300,300,300,-264,-258,-272,-273,-281,-288,-282,]),'SIGNED':([0,1,4,5,7,9,10,11,13,14,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,50,51,52,53,54,55,56,57,61,63,64,70,71,72,73,74,77,79,80,81,83,88,90,92,93,96,99,100,101,102,103,104,111,115,118,127,128,130,131,136,139,140,141,142,143,144,145,146,147,148,149,152,172,192,199,204,205,212,213,214,218,219,222,225,230,234,235,237,240,249,250,256,257,259,260,261,262,263,264,265,268,273,276,277,328,339,341,345,346,349,352,354,355,357,361,363,364,365,375,378,380,384,437,438,441,442,446,448,449,487,502,503,504,506,523,524,526,528,],[5,-103,-99,-110,-221,5,-106,-101,-100,-60,5,-104,-309,-95,-66,-64,-117,-65,-111,-118,-52,-63,-102,-114,5,-309,-96,-97,-116,-107,-112,5,-108,-68,-309,-62,-93,-115,-98,-105,-113,-67,-119,-29,-109,-307,-153,-152,-166,-61,-53,-94,-87,-9,-10,5,5,-84,5,5,-86,-90,5,-89,-92,-91,-69,-88,-132,5,-133,-83,-167,5,5,-70,5,-85,-30,5,5,5,5,-135,-308,-145,-130,-146,-142,5,5,-154,5,-36,5,-35,5,-75,-77,-74,-198,5,-78,-199,-200,-73,-72,-76,-71,-137,5,-128,-129,-131,-134,-143,-139,5,-156,-155,5,5,5,5,5,5,5,-34,-31,5,-201,-217,-215,-202,-80,-78,-214,-218,-136,-144,-138,5,-33,-32,-203,-216,-205,-79,-213,-204,-209,-80,-206,-208,-207,-210,-212,-211,]),'PPHASH':([0,9,14,20,21,23,28,41,44,51,63,99,104,127,143,240,357,],[51,51,-60,-66,-64,-65,-63,-68,-62,-67,-61,-69,-83,-70,-308,-71,-202,]),'OFFSETOF':([22,25,41,52,55,59,61,62,75,99,104,111,112,124,125,126,128,135,137,143,154,155,156,158,160,162,163,166,172,177,183,186,187,200,206,210,211,212,213,214,218,219,220,222,225,229,230,234,235,237,238,245,246,247,251,268,273,276,280,281,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,308,313,314,315,316,317,318,319,320,321,322,323,324,325,326,337,340,342,349,350,352,354,355,356,357,358,359,360,361,363,364,365,367,371,373,374,379,387,417,420,431,432,433,435,439,441,442,446,448,449,451,458,462,464,466,467,468,474,476,477,482,483,484,485,486,487,500,502,503,504,506,508,509,515,516,521,523,524,526,527,528,],[-117,-118,-68,-119,-307,-27,-166,-28,-309,-69,-83,-167,188,188,-28,-309,188,188,-309,-308,188,-265,-270,-267,-266,188,188,188,188,188,-309,-268,-269,188,-266,188,188,-75,-77,-74,-198,188,188,-78,-199,188,-200,-73,-72,-76,188,188,-28,-309,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,-11,-12,188,-225,-231,-228,-234,-233,-230,-232,188,-224,-229,-226,-227,-266,-309,188,188,188,-201,-217,-215,188,-202,188,188,188,-80,188,-214,-218,188,-266,188,188,188,188,-182,-309,188,-28,-309,-266,188,-203,-216,-205,-79,-213,188,188,-309,188,188,188,-11,-266,188,188,188,188,188,188,188,-204,188,-209,-80,-206,-208,-309,188,188,188,188,-207,-210,-212,188,-211,]),'EQUALS':([27,53,64,68,84,85,90,95,97,109,122,129,131,132,143,157,159,161,164,165,168,169,170,175,178,179,180,181,182,184,185,189,192,204,217,241,267,271,272,274,275,282,284,305,306,311,327,345,346,369,370,388,392,393,394,395,396,416,419,437,438,452,453,460,461,463,465,470,488,489,507,510,518,],[-52,-29,-53,112,-163,-37,-162,135,-54,154,-294,-162,-30,-55,-308,-286,-299,-298,-302,-301,-300,-296,-297,-259,-305,-283,-284,-303,-271,323,-285,-295,-36,-35,-294,-38,-257,-306,-261,-260,-263,-279,-280,-262,417,-183,-304,-34,-31,-44,-43,-287,-274,-276,-275,-277,-278,-184,-186,-33,-32,-42,-39,-264,-258,-272,-273,-185,-41,-40,-281,-288,-282,]),'UNION':([0,4,9,13,14,16,18,19,20,21,22,23,25,27,28,31,33,34,35,41,42,44,48,51,52,53,55,61,63,64,71,72,73,74,77,79,81,83,90,99,100,102,104,111,115,127,128,130,131,136,139,141,143,144,146,147,148,149,172,192,199,204,205,212,213,214,218,219,222,225,230,234,235,237,240,250,261,263,268,273,276,328,339,341,345,346,349,352,354,355,357,361,363,364,365,378,384,437,438,441,442,446,448,449,487,502,503,504,506,523,524,526,528,],[3,-99,3,-100,-60,3,-309,-95,-66,-64,-117,-65,-118,-52,-63,3,-309,-96,-97,-68,-309,-62,-98,-67,-119,-29,-307,-166,-61,-53,-87,-9,-10,3,3,-84,3,-86,3,-69,-88,3,-83,-167,3,-70,3,-85,-30,3,3,3,-308,-145,-146,-142,3,3,3,-36,3,-35,3,-75,-77,-74,-198,3,-78,-199,-200,-73,-72,-76,-71,3,-143,3,3,3,3,3,3,3,-34,-31,3,-201,-217,-215,-202,-80,-78,-214,-218,-144,3,-33,-32,-203,-216,-205,-79,-213,-204,-209,-80,-206,-208,-207,-210,-212,-211,]),'LNOT':([22,25,41,52,55,59,61,62,75,99,104,111,112,124,125,126,128,135,137,143,154,155,156,158,160,162,163,166,172,177,183,186,187,200,206,210,211,212,213,214,218,219,220,222,225,229,230,234,235,237,238,245,246,247,251,268,273,276,280,281,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,308,313,314,315,316,317,318,319,320,321,322,323,324,325,326,337,340,342,349,350,352,354,355,356,357,358,359,360,361,363,364,365,367,371,373,374,379,387,417,420,431,432,433,435,439,441,442,446,448,449,451,458,462,464,466,467,468,474,476,477,482,483,484,485,486,487,500,502,503,504,506,508,509,515,516,521,523,524,526,527,528,],[-117,-118,-68,-119,-307,-27,-166,-28,-309,-69,-83,-167,156,156,-28,-309,156,156,-309,-308,156,-265,-270,-267,-266,156,156,156,156,156,-309,-268,-269,156,-266,156,156,-75,-77,-74,-198,156,156,-78,-199,156,-200,-73,-72,-76,156,156,-28,-309,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,-11,-12,156,-225,-231,-228,-234,-233,-230,-232,156,-224,-229,-226,-227,-266,-309,156,156,156,-201,-217,-215,156,-202,156,156,156,-80,156,-214,-218,156,-266,156,156,156,156,-182,-309,156,-28,-309,-266,156,-203,-216,-205,-79,-213,156,156,-309,156,156,156,-11,-266,156,156,156,156,156,156,156,-204,156,-209,-80,-206,-208,-309,156,156,156,156,-207,-210,-212,156,-211,]),'AND':([22,25,41,52,55,59,61,62,75,99,104,111,112,122,124,125,126,128,135,137,143,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,175,176,177,178,179,180,181,182,183,184,185,186,187,189,200,206,210,211,212,213,214,217,218,219,220,222,225,229,230,234,235,237,238,245,246,247,251,267,268,271,272,273,274,275,276,280,281,282,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,337,340,342,349,350,352,354,355,356,357,358,359,360,361,363,364,365,367,371,373,374,379,387,388,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,413,414,415,417,420,431,432,433,435,439,441,442,446,448,449,451,458,460,461,462,463,464,465,466,467,468,474,476,477,482,483,484,485,486,487,500,502,503,504,506,507,508,509,510,515,516,518,521,523,524,526,527,528,],[-117,-118,-68,-119,-307,-27,-166,-28,-309,-69,-83,-167,155,-294,155,-28,-309,155,155,-309,-308,155,-265,-270,-286,-267,-299,-266,-298,155,155,-302,-301,155,-300,-296,-297,-238,155,-259,286,155,-305,-283,-284,-303,-271,-309,-257,-285,-268,-269,-295,155,-266,155,155,-75,-77,-74,-294,-198,155,155,-78,-199,155,-200,-73,-72,-76,155,155,-28,-309,155,-257,155,-306,-261,155,-260,-263,155,155,155,-279,-280,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,-262,155,-11,-12,155,-225,-231,-228,-234,-233,-230,-232,155,-224,-229,-226,-227,-304,-266,-309,155,155,155,-201,-217,-215,155,-202,155,155,155,-80,155,-214,-218,155,-266,155,155,155,155,-287,-274,-276,-275,-277,-278,-252,-244,286,-242,-239,286,-247,-246,-243,-251,-240,-249,286,-241,-250,-248,286,-245,-182,-309,155,-28,-309,-266,155,-203,-216,-205,-79,-213,155,155,-264,-258,-309,-272,155,-273,155,155,-11,-266,155,155,155,155,155,155,155,-204,155,-209,-80,-206,-208,-281,-309,155,-288,155,155,-282,155,-207,-210,-212,155,-211,]),'LSHIFTEQUAL':([122,143,157,159,161,164,165,168,169,170,175,178,179,180,181,182,184,185,189,217,267,271,272,274,275,282,284,305,327,388,392,393,394,395,396,460,461,463,465,507,510,518,],[-294,-308,-286,-299,-298,-302,-301,-300,-296,-297,-259,-305,-283,-284,-303,-271,316,-285,-295,-294,-257,-306,-261,-260,-263,-279,-280,-262,-304,-287,-274,-276,-275,-277,-278,-264,-258,-272,-273,-281,-288,-282,]),'STRUCT':([0,4,9,13,14,16,18,19,20,21,22,23,25,27,28,31,33,34,35,41,42,44,48,51,52,53,55,61,63,64,71,72,73,74,77,79,81,83,90,99,100,102,104,111,115,127,128,130,131,136,139,141,143,144,146,147,148,149,172,192,199,204,205,212,213,214,218,219,222,225,230,234,235,237,240,250,261,263,268,273,276,328,339,341,345,346,349,352,354,355,357,361,363,364,365,378,384,437,438,441,442,446,448,449,487,502,503,504,506,523,524,526,528,],[2,-99,2,-100,-60,2,-309,-95,-66,-64,-117,-65,-118,-52,-63,2,-309,-96,-97,-68,-309,-62,-98,-67,-119,-29,-307,-166,-61,-53,-87,-9,-10,2,2,-84,2,-86,2,-69,-88,2,-83,-167,2,-70,2,-85,-30,2,2,2,-308,-145,-146,-142,2,2,2,-36,2,-35,2,-75,-77,-74,-198,2,-78,-199,-200,-73,-72,-76,-71,2,-143,2,2,2,2,2,2,2,-34,-31,2,-201,-217,-215,-202,-80,-78,-214,-218,-144,2,-33,-32,-203,-216,-205,-79,-213,-204,-209,-80,-206,-208,-207,-210,-212,-211,]),'ANDEQUAL':([122,143,157,159,161,164,165,168,169,170,175,178,179,180,181,182,184,185,189,217,267,271,272,274,275,282,284,305,327,388,392,393,394,395,396,460,461,463,465,507,510,518,],[-294,-308,-286,-299,-298,-302,-301,-300,-296,-297,-259,-305,-283,-284,-303,-271,319,-285,-295,-294,-257,-306,-261,-260,-263,-279,-280,-262,-304,-287,-274,-276,-275,-277,-278,-264,-258,-272,-273,-281,-288,-282,]),'MINUSEQUAL':([122,143,157,159,161,164,165,168,169,170,175,178,179,180,181,182,184,185,189,217,267,271,272,274,275,282,284,305,327,388,392,393,394,395,396,460,461,463,465,507,510,518,],[-294,-308,-286,-299,-298,-302,-301,-300,-296,-297,-259,-305,-283,-284,-303,-271,320,-285,-295,-294,-257,-306,-261,-260,-263,-279,-280,-262,-304,-287,-274,-276,-275,-277,-278,-264,-258,-272,-273,-281,-288,-282,]),'DIVEQUAL':([122,143,157,159,161,164,165,168,169,170,175,178,179,180,181,182,184,185,189,217,267,271,272,274,275,282,284,305,327,388,392,393,394,395,396,460,461,463,465,507,510,518,],[-294,-308,-286,-299,-298,-302,-301,-300,-296,-297,-259,-305,-283,-284,-303,-271,326,-285,-295,-294,-257,-306,-261,-260,-263,-279,-280,-262,-304,-287,-274,-276,-275,-277,-278,-264,-258,-272,-273,-281,-288,-282,]),'TIMES':([0,1,4,5,7,8,9,10,11,13,14,16,17,18,19,20,21,22,23,24,25,28,29,30,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,50,51,52,54,55,56,57,59,60,61,62,63,70,71,72,73,75,77,80,83,88,91,92,93,96,99,100,101,103,104,111,112,113,118,122,124,125,126,127,128,135,137,138,140,142,143,145,152,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,175,176,177,178,179,180,181,182,183,184,185,186,187,189,199,200,206,210,211,212,213,214,217,218,219,220,222,225,229,230,234,235,237,238,240,245,246,247,249,251,256,257,259,260,262,264,265,267,268,271,272,273,274,275,276,277,280,281,282,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,337,340,342,349,350,352,354,355,356,357,358,359,360,361,363,364,365,367,371,373,374,375,377,379,380,384,387,388,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,413,414,415,417,420,431,432,433,435,439,441,442,446,448,449,451,458,460,461,462,463,464,465,466,467,468,474,476,477,482,483,484,485,486,487,500,502,503,504,506,507,508,509,510,515,516,518,521,523,524,526,527,528,],[8,-103,-99,-110,-221,-309,8,-106,-101,-100,-60,8,-104,-309,-95,-66,-64,-117,-65,-111,-118,-63,-102,-114,8,-309,-96,-97,-116,-107,-112,8,-108,-68,-309,-62,-93,-115,-98,-105,-113,-67,-119,-109,-307,-153,-152,-27,8,-166,-28,-61,-94,-87,-9,-10,-309,8,8,-86,-90,8,-89,-92,-91,-69,-88,-132,-133,-83,-167,160,8,8,-294,206,-28,-309,-70,160,160,-309,8,8,-135,-308,-130,-154,160,-265,-270,-286,-267,-299,-266,-298,160,160,-302,-301,160,-300,-296,-297,-238,160,-259,290,160,-305,-283,-284,-303,-271,-309,-257,-285,-268,-269,-295,8,337,-266,160,160,-75,-77,-74,-294,-198,160,160,-78,-199,160,-200,-73,-72,-76,160,-71,371,-28,-309,-137,160,-128,-129,-131,-134,-139,-156,-155,-257,160,-306,-261,160,-260,-263,160,8,160,160,-279,-280,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,-262,160,-11,-12,160,-225,-231,-228,-234,-233,-230,-232,160,-224,-229,-226,-227,-304,-266,-309,435,160,160,-201,-217,-215,160,-202,160,160,160,-80,160,-214,-218,160,-266,160,160,-136,8,160,-138,8,160,-287,-274,-276,-275,-277,-278,290,290,290,290,-239,290,290,290,290,290,-240,290,290,-241,290,290,290,290,-182,-309,474,-28,-309,-266,160,-203,-216,-205,-79,-213,160,160,-264,-258,-309,-272,160,-273,160,160,-11,-266,160,160,160,160,160,160,160,-204,160,-209,-80,-206,-208,-281,-309,160,-288,160,160,-282,160,-207,-210,-212,160,-211,]),'INT_CONST_DEC':([22,25,41,52,55,59,61,62,75,99,104,111,112,124,125,126,128,135,137,143,154,155,156,158,160,162,163,166,172,177,183,186,187,200,206,210,211,212,213,214,218,219,220,222,225,229,230,234,235,237,238,245,246,247,251,268,273,276,280,281,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,308,313,314,315,316,317,318,319,320,321,322,323,324,325,326,337,340,342,349,350,352,354,355,356,357,358,359,360,361,363,364,365,367,371,373,374,379,387,417,420,431,432,433,435,439,441,442,446,448,449,451,458,462,464,466,467,468,474,476,477,482,483,484,485,486,487,500,502,503,504,506,508,509,515,516,521,523,524,526,527,528,],[-117,-118,-68,-119,-307,-27,-166,-28,-309,-69,-83,-167,189,189,-28,-309,189,189,-309,-308,189,-265,-270,-267,-266,189,189,189,189,189,-309,-268,-269,189,-266,189,189,-75,-77,-74,-198,189,189,-78,-199,189,-200,-73,-72,-76,189,189,-28,-309,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,-11,-12,189,-225,-231,-228,-234,-233,-230,-232,189,-224,-229,-226,-227,-266,-309,189,189,189,-201,-217,-215,189,-202,189,189,189,-80,189,-214,-218,189,-266,189,189,189,189,-182,-309,189,-28,-309,-266,189,-203,-216,-205,-79,-213,189,189,-309,189,189,189,-11,-266,189,189,189,189,189,189,189,-204,189,-209,-80,-206,-208,-309,189,189,189,189,-207,-210,-212,189,-211,]),'_COMPLEX':([0,1,4,5,7,9,10,11,13,14,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,50,51,52,53,54,55,56,57,61,63,64,70,71,72,73,74,77,79,80,81,83,88,90,92,93,96,99,100,101,102,103,104,111,115,118,127,128,130,131,136,139,140,141,142,143,144,145,146,147,148,149,152,172,192,199,204,205,212,213,214,218,219,222,225,230,234,235,237,240,249,250,256,257,259,260,261,262,263,264,265,268,273,276,277,328,339,341,345,346,349,352,354,355,357,361,363,364,365,375,378,380,384,437,438,441,442,446,448,449,487,502,503,504,506,523,524,526,528,],[54,-103,-99,-110,-221,54,-106,-101,-100,-60,54,-104,-309,-95,-66,-64,-117,-65,-111,-118,-52,-63,-102,-114,54,-309,-96,-97,-116,-107,-112,54,-108,-68,-309,-62,-93,-115,-98,-105,-113,-67,-119,-29,-109,-307,-153,-152,-166,-61,-53,-94,-87,-9,-10,54,54,-84,54,54,-86,-90,54,-89,-92,-91,-69,-88,-132,54,-133,-83,-167,54,54,-70,54,-85,-30,54,54,54,54,-135,-308,-145,-130,-146,-142,54,54,-154,54,-36,54,-35,54,-75,-77,-74,-198,54,-78,-199,-200,-73,-72,-76,-71,-137,54,-128,-129,-131,-134,-143,-139,54,-156,-155,54,54,54,54,54,54,54,-34,-31,54,-201,-217,-215,-202,-80,-78,-214,-218,-136,-144,-138,54,-33,-32,-203,-216,-205,-79,-213,-204,-209,-80,-206,-208,-207,-210,-212,-211,]),'DEFAULT':([41,55,99,104,128,143,212,213,214,218,219,222,225,229,230,234,235,237,350,352,354,355,357,360,361,363,364,365,441,442,446,448,449,451,483,484,486,487,502,503,504,506,516,521,523,524,526,527,528,],[-68,-307,-69,-83,228,-308,-75,-77,-74,-198,228,-78,-199,228,-200,-73,-72,-76,228,-201,-217,-215,-202,228,-80,228,-214,-218,-203,-216,-205,-79,-213,228,228,228,228,-204,-209,-80,-206,-208,228,228,-207,-210,-212,228,-211,]),'MINUSMINUS':([22,25,41,52,55,59,61,62,75,99,104,111,112,122,124,125,126,128,135,137,143,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,172,175,177,178,179,180,181,182,183,185,186,187,189,200,206,210,211,212,213,214,217,218,219,220,222,225,229,230,234,235,237,238,245,246,247,251,268,271,273,276,280,281,282,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,308,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,337,340,342,349,350,352,354,355,356,357,358,359,360,361,363,364,365,367,371,373,374,379,387,388,392,393,394,395,396,417,420,431,432,433,435,439,441,442,446,448,449,451,458,462,463,464,465,466,467,468,474,476,477,482,483,484,485,486,487,500,502,503,504,506,507,508,509,510,515,516,518,521,523,524,526,527,528,],[-117,-118,-68,-119,-307,-27,-166,-28,-309,-69,-83,-167,162,-294,162,-28,-309,162,162,-309,-308,162,-265,-270,-286,-267,-299,-266,-298,162,162,-302,-301,162,-300,-296,-297,162,284,162,-305,-283,-284,-303,-271,-309,-285,-268,-269,-295,162,-266,162,162,-75,-77,-74,-294,-198,162,162,-78,-199,162,-200,-73,-72,-76,162,162,-28,-309,162,162,-306,162,162,162,162,-279,-280,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,-11,-12,162,-225,-231,-228,-234,-233,-230,-232,162,-224,-229,-226,-227,-304,-266,-309,162,162,162,-201,-217,-215,162,-202,162,162,162,-80,162,-214,-218,162,-266,162,162,162,162,-287,-274,-276,-275,-277,-278,-182,-309,162,-28,-309,-266,162,-203,-216,-205,-79,-213,162,162,-309,-272,162,-273,162,162,-11,-266,162,162,162,162,162,162,162,-204,162,-209,-80,-206,-208,-281,-309,162,-288,162,162,-282,162,-207,-210,-212,162,-211,]),'PLUSEQUAL':([122,143,157,159,161,164,165,168,169,170,175,178,179,180,181,182,184,185,189,217,267,271,272,274,275,282,284,305,327,388,392,393,394,395,396,460,461,463,465,507,510,518,],[-294,-308,-286,-299,-298,-302,-301,-300,-296,-297,-259,-305,-283,-284,-303,-271,324,-285,-295,-294,-257,-306,-261,-260,-263,-279,-280,-262,-304,-287,-274,-276,-275,-277,-278,-264,-258,-272,-273,-281,-288,-282,]),'ENUM':([0,4,9,13,14,16,18,19,20,21,22,23,25,27,28,31,33,34,35,41,42,44,48,51,52,53,55,61,63,64,71,72,73,74,77,79,81,83,90,99,100,102,104,111,115,127,128,130,131,136,139,141,143,144,146,147,148,149,172,192,199,204,205,212,213,214,218,219,222,225,230,234,235,237,240,250,261,263,268,273,276,328,339,341,345,346,349,352,354,355,357,361,363,364,365,378,384,437,438,441,442,446,448,449,487,502,503,504,506,523,524,526,528,],[6,-99,6,-100,-60,6,-309,-95,-66,-64,-117,-65,-118,-52,-63,6,-309,-96,-97,-68,-309,-62,-98,-67,-119,-29,-307,-166,-61,-53,-87,-9,-10,6,6,-84,6,-86,6,-69,-88,6,-83,-167,6,-70,6,-85,-30,6,6,6,-308,-145,-146,-142,6,6,6,-36,6,-35,6,-75,-77,-74,-198,6,-78,-199,-200,-73,-72,-76,-71,6,-143,6,6,6,6,6,6,6,-34,-31,6,-201,-217,-215,-202,-80,-78,-214,-218,-144,6,-33,-32,-203,-216,-205,-79,-213,-204,-209,-80,-206,-208,-207,-210,-212,-211,]),'DO':([41,55,99,104,128,143,212,213,214,218,219,222,225,229,230,234,235,237,350,352,354,355,357,360,361,363,364,365,441,442,446,448,449,451,483,484,486,487,502,503,504,506,516,521,523,524,526,527,528,],[-68,-307,-69,-83,229,-308,-75,-77,-74,-198,229,-78,-199,229,-200,-73,-72,-76,229,-201,-217,-215,-202,229,-80,229,-214,-218,-203,-216,-205,-79,-213,229,229,229,229,-204,-209,-80,-206,-208,229,229,-207,-210,-212,229,-211,]),'RPAREN':([1,4,5,7,8,10,11,13,17,19,22,24,25,27,29,30,34,35,36,37,38,40,45,47,48,49,50,52,53,54,56,57,59,60,61,62,64,70,74,82,85,88,92,93,96,97,101,103,110,111,114,116,117,118,119,120,121,122,123,131,132,134,136,142,143,145,152,157,159,161,164,165,168,169,170,171,174,175,176,178,179,180,181,182,184,185,189,192,193,194,195,196,197,198,199,201,202,203,204,227,239,241,243,244,249,256,257,259,260,262,264,265,267,271,272,274,275,277,278,279,281,282,284,305,327,329,330,331,332,333,334,335,336,339,341,343,344,345,346,351,369,370,375,380,381,382,383,384,385,386,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,413,414,415,423,425,426,427,428,429,430,434,437,438,443,444,445,450,452,453,460,461,463,465,472,473,478,479,480,488,489,491,492,494,495,496,497,500,505,507,510,512,513,514,515,518,520,522,525,],[-103,-99,-110,-221,-309,-106,-101,-100,-104,-95,-117,-111,-118,-52,-102,-114,-96,-97,-116,-107,-112,-108,-93,-115,-98,-105,-113,-119,-29,-109,-153,-152,-27,-164,-166,-28,-53,-94,-309,131,-37,-90,-89,-92,-91,-54,-132,-133,-165,-167,-18,-17,192,-309,204,-168,-170,-294,-175,-30,-55,241,-309,-135,-308,-130,-154,-286,-299,-298,-302,-301,-300,-296,-297,-238,-222,-259,-236,-305,-283,-284,-303,-271,-257,-285,-295,-36,-45,-188,-1,-173,-2,-172,-309,-56,-190,-174,-35,-14,-219,-38,369,370,-137,-128,-129,-131,-134,-139,-156,-155,-257,-306,-261,-260,-263,-309,387,388,392,-279,-280,-262,-304,-176,-57,-189,-188,425,-23,426,-24,-309,-309,-169,-171,-34,-31,-13,-44,-43,-136,-138,458,459,460,-309,-188,-187,-287,465,-292,-274,-276,-275,-277,-278,-252,-244,-253,-242,-239,-254,-247,-246,-243,-251,-240,-249,-255,-241,-250,-248,-256,-245,-223,-197,-191,-195,-193,472,473,478,-33,-32,483,484,-220,486,-42,-39,-264,-258,-272,-273,-51,-50,-196,-194,-192,-41,-40,-293,-237,510,-289,-49,-46,-309,517,-281,-288,-48,-47,521,-309,-282,-290,527,-291,]),'EQ':([122,143,157,159,161,164,165,168,169,170,171,175,176,178,179,180,181,182,184,185,189,217,267,271,272,274,275,282,284,305,327,388,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,411,412,413,414,415,460,461,463,465,507,510,518,],[-294,-308,-286,-299,-298,-302,-301,-300,-296,-297,-238,-259,301,-305,-283,-284,-303,-271,-257,-285,-295,-294,-257,-306,-261,-260,-263,-279,-280,-262,-304,-287,-274,-276,-275,-277,-278,301,-244,301,-242,-239,301,-247,-246,-243,-251,-240,-249,301,-241,-250,-248,301,-245,-264,-258,-272,-273,-281,-288,-282,]),'AUTO':([0,1,4,5,7,9,10,11,13,14,17,18,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,50,51,52,53,54,55,56,57,63,64,70,74,79,80,81,88,90,92,93,96,99,101,103,104,118,127,128,130,131,136,142,143,152,192,199,204,205,212,213,214,218,219,222,225,230,234,235,237,240,249,260,262,264,265,339,341,345,346,349,352,354,355,357,361,363,364,365,375,380,384,437,438,441,442,446,448,449,487,502,503,504,506,523,524,526,528,],[19,-103,-99,-110,-221,19,-106,-101,-100,-60,-104,19,-95,-66,-64,-117,-65,-111,-118,-52,-63,-102,-114,19,19,-96,-97,-116,-107,-112,19,-108,-68,19,-62,-93,-115,-98,-105,-113,-67,-119,-29,-109,-307,-153,-152,-61,-53,-94,19,-84,19,19,-90,19,-89,-92,-91,-69,-132,-133,-83,19,-70,19,-85,-30,19,-135,-308,-154,-36,19,-35,19,-75,-77,-74,-198,19,-78,-199,-200,-73,-72,-76,-71,-137,-134,-139,-156,-155,19,19,-34,-31,19,-201,-217,-215,-202,-80,-78,-214,-218,-136,-138,19,-33,-32,-203,-216,-205,-79,-213,-204,-209,-80,-206,-208,-207,-210,-212,-211,]),'RESTRICT':([0,1,4,5,7,8,9,10,11,13,14,17,18,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,50,51,52,53,54,55,56,57,61,62,63,64,70,74,75,79,80,81,88,90,92,93,96,99,101,102,103,104,111,118,125,126,127,128,130,131,136,137,139,140,141,142,143,144,145,146,147,148,149,152,172,192,199,204,205,212,213,214,218,219,222,225,230,234,235,237,240,246,247,249,250,256,257,259,260,261,262,263,264,265,268,273,276,277,328,339,340,341,345,346,349,352,354,355,357,361,363,364,365,375,378,380,384,432,433,437,438,441,442,446,448,449,487,502,503,504,506,523,524,526,528,],[25,-103,-99,-110,-221,25,25,-106,-101,-100,-60,-104,25,-95,-66,-64,-117,-65,-111,-118,-52,-63,-102,-114,25,25,-96,-97,-116,-107,-112,25,-108,-68,25,-62,-93,-115,-98,-105,-113,-67,-119,-29,-109,-307,-153,-152,-166,25,-61,-53,-94,25,25,-84,25,25,-90,25,-89,-92,-91,-69,-132,25,-133,-83,-167,25,25,25,-70,25,-85,-30,25,25,25,25,25,-135,-308,-145,-130,-146,-142,25,25,-154,25,-36,25,-35,25,-75,-77,-74,-198,25,-78,-199,-200,-73,-72,-76,-71,25,25,-137,25,-128,-129,-131,-134,-143,-139,25,-156,-155,25,25,25,25,25,25,25,25,-34,-31,25,-201,-217,-215,-202,-80,-78,-214,-218,-136,-144,-138,25,25,25,-33,-32,-203,-216,-205,-79,-213,-204,-209,-80,-206,-208,-207,-210,-212,-211,]),'CONTINUE':([41,55,99,104,128,143,212,213,214,218,219,222,225,229,230,234,235,237,350,352,354,355,357,360,361,363,364,365,441,442,446,448,449,451,483,484,486,487,502,503,504,506,516,521,523,524,526,527,528,],[-68,-307,-69,-83,221,-308,-75,-77,-74,-198,221,-78,-199,221,-200,-73,-72,-76,221,-201,-217,-215,-202,221,-80,221,-214,-218,-203,-216,-205,-79,-213,221,221,221,221,-204,-209,-80,-206,-208,221,221,-207,-210,-212,221,-211,]),'CHAR_CONST':([22,25,41,52,55,59,61,62,75,99,104,111,112,124,125,126,128,135,137,143,154,155,156,158,160,162,163,166,172,177,183,186,187,200,206,210,211,212,213,214,218,219,220,222,225,229,230,234,235,237,238,245,246,247,251,268,273,276,280,281,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,308,313,314,315,316,317,318,319,320,321,322,323,324,325,326,337,340,342,349,350,352,354,355,356,357,358,359,360,361,363,364,365,367,371,373,374,379,387,417,420,431,432,433,435,439,441,442,446,448,449,451,458,462,464,466,467,468,474,476,477,482,483,484,485,486,487,500,502,503,504,506,508,509,515,516,521,523,524,526,527,528,],[-117,-118,-68,-119,-307,-27,-166,-28,-309,-69,-83,-167,165,165,-28,-309,165,165,-309,-308,165,-265,-270,-267,-266,165,165,165,165,165,-309,-268,-269,165,-266,165,165,-75,-77,-74,-198,165,165,-78,-199,165,-200,-73,-72,-76,165,165,-28,-309,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,-11,-12,165,-225,-231,-228,-234,-233,-230,-232,165,-224,-229,-226,-227,-266,-309,165,165,165,-201,-217,-215,165,-202,165,165,165,-80,165,-214,-218,165,-266,165,165,165,165,-182,-309,165,-28,-309,-266,165,-203,-216,-205,-79,-213,165,165,-309,165,165,165,-11,-266,165,165,165,165,165,165,165,-204,165,-209,-80,-206,-208,-309,165,165,165,165,-207,-210,-212,165,-211,]),'VOID':([0,1,4,5,7,9,10,11,13,14,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,50,51,52,53,54,55,56,57,61,63,64,70,71,72,73,74,77,79,80,81,83,88,90,92,93,96,99,100,101,102,103,104,111,115,118,127,128,130,131,136,139,140,141,142,143,144,145,146,147,148,149,152,172,192,199,204,205,212,213,214,218,219,222,225,230,234,235,237,240,249,250,256,257,259,260,261,262,263,264,265,268,273,276,277,328,339,341,345,346,349,352,354,355,357,361,363,364,365,375,378,380,384,437,438,441,442,446,448,449,487,502,503,504,506,523,524,526,528,],[11,-103,-99,-110,-221,11,-106,-101,-100,-60,11,-104,-309,-95,-66,-64,-117,-65,-111,-118,-52,-63,-102,-114,11,-309,-96,-97,-116,-107,-112,11,-108,-68,-309,-62,-93,-115,-98,-105,-113,-67,-119,-29,-109,-307,-153,-152,-166,-61,-53,-94,-87,-9,-10,11,11,-84,11,11,-86,-90,11,-89,-92,-91,-69,-88,-132,11,-133,-83,-167,11,11,-70,11,-85,-30,11,11,11,11,-135,-308,-145,-130,-146,-142,11,11,-154,11,-36,11,-35,11,-75,-77,-74,-198,11,-78,-199,-200,-73,-72,-76,-71,-137,11,-128,-129,-131,-134,-143,-139,11,-156,-155,11,11,11,11,11,11,11,-34,-31,11,-201,-217,-215,-202,-80,-78,-214,-218,-136,-144,-138,11,-33,-32,-203,-216,-205,-79,-213,-204,-209,-80,-206,-208,-207,-210,-212,-211,]),'REGISTER':([0,1,4,5,7,9,10,11,13,14,17,18,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,50,51,52,53,54,55,56,57,63,64,70,74,79,80,81,88,90,92,93,96,99,101,103,104,118,127,128,130,131,136,142,143,152,192,199,204,205,212,213,214,218,219,222,225,230,234,235,237,240,249,260,262,264,265,339,341,345,346,349,352,354,355,357,361,363,364,365,375,380,384,437,438,441,442,446,448,449,487,502,503,504,506,523,524,526,528,],[34,-103,-99,-110,-221,34,-106,-101,-100,-60,-104,34,-95,-66,-64,-117,-65,-111,-118,-52,-63,-102,-114,34,34,-96,-97,-116,-107,-112,34,-108,-68,34,-62,-93,-115,-98,-105,-113,-67,-119,-29,-109,-307,-153,-152,-61,-53,-94,34,-84,34,34,-90,34,-89,-92,-91,-69,-132,-133,-83,34,-70,34,-85,-30,34,-135,-308,-154,-36,34,-35,34,-75,-77,-74,-198,34,-78,-199,-200,-73,-72,-76,-71,-137,-134,-139,-156,-155,34,34,-34,-31,34,-201,-217,-215,-202,-80,-78,-214,-218,-136,-138,34,-33,-32,-203,-216,-205,-79,-213,-204,-209,-80,-206,-208,-207,-210,-212,-211,]),'IF':([41,55,99,104,128,143,212,213,214,218,219,222,225,229,230,234,235,237,350,352,354,355,357,360,361,363,364,365,441,442,446,448,449,451,483,484,486,487,502,503,504,506,516,521,523,524,526,527,528,],[-68,-307,-69,-83,226,-308,-75,-77,-74,-198,226,-78,-199,226,-200,-73,-72,-76,226,-201,-217,-215,-202,226,-80,226,-214,-218,-203,-216,-205,-79,-213,226,226,226,226,-204,-209,-80,-206,-208,226,226,-207,-210,-212,226,-211,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'specifier_qualifier_list':([102,139,148,149,172,250,263,268,273,276,328,],[140,140,140,140,277,140,140,277,277,277,277,]),'selection_statement':([128,219,229,350,360,363,451,483,484,486,516,521,527,],[212,212,212,212,212,212,212,212,212,212,212,212,212,]),'identifier_list':([74,136,339,],[114,114,114,]),'declaration_list_opt':([31,90,],[76,133,]),'translation_unit':([0,],[9,]),'unified_wstring_literal':([112,124,128,135,154,162,163,166,172,177,200,210,211,219,220,229,238,245,251,268,273,276,280,281,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,314,322,342,349,350,356,358,359,360,363,367,373,374,379,387,431,439,451,458,464,466,467,476,477,482,483,484,485,486,500,509,515,516,521,527,],[157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'assignment_operator':([184,],[322,]),'pointer':([0,9,16,32,39,60,77,80,91,113,118,138,140,199,277,377,384,],[12,12,12,12,86,110,12,86,86,86,194,86,86,332,385,86,385,]),'jump_statement':([128,219,229,350,360,363,451,483,484,486,516,521,527,],[213,213,213,213,213,213,213,213,213,213,213,213,213,]),'argument_expression_list':([281,],[390,]),'declaration_specifiers_no_type':([0,9,18,31,33,42,74,81,90,128,136,199,205,219,339,341,349,384,],[16,16,73,77,73,73,115,77,77,77,115,115,115,77,115,115,77,115,]),'direct_typeid_declarator':([39,80,86,91,113,138,140,377,],[97,97,132,97,97,97,97,97,]),'unary_expression':([112,124,128,135,154,162,163,166,172,177,200,210,211,219,220,229,238,245,251,268,273,276,280,281,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,314,322,342,349,350,356,358,359,360,363,367,373,374,379,387,431,439,451,458,464,466,467,476,477,482,483,484,485,486,500,509,515,516,521,527,],[184,184,184,184,267,272,274,275,184,267,184,184,184,184,184,184,267,184,267,184,184,184,184,184,267,267,267,267,267,267,267,267,267,267,267,267,184,267,267,267,267,267,267,184,267,184,184,184,184,184,184,184,184,184,184,184,184,267,267,184,184,184,267,184,267,184,184,184,184,184,184,184,184,184,184,184,184,184,184,]),'compound_statement':([76,128,133,219,229,350,360,363,451,483,484,486,516,521,527,],[127,214,240,214,214,214,214,214,214,214,214,214,214,214,214,]),'struct_declarator':([140,377,],[254,456,]),'function_specifier':([0,9,18,31,33,39,42,74,80,81,90,118,128,136,199,205,219,339,341,349,384,],[42,42,42,42,42,96,42,42,96,42,42,96,42,42,42,42,42,42,42,42,42,]),'empty':([0,8,16,18,31,33,39,42,74,75,77,80,90,118,124,126,128,136,137,140,183,199,200,219,229,245,247,277,339,340,341,342,349,350,360,363,384,420,431,433,439,451,462,482,483,484,486,500,508,515,516,521,527,],[26,59,65,72,78,72,89,72,116,59,65,89,78,195,207,59,216,116,59,255,308,334,207,351,351,207,59,195,116,59,334,207,351,351,351,351,334,468,207,59,351,351,468,351,351,351,351,351,468,351,351,351,351,]),'designation_opt':([183,420,462,508,],[307,467,307,467,]),'id_init_declarator_list':([16,77,],[69,69,]),'id_init_declarator_list_opt':([16,77,],[66,66,]),'declaration':([0,9,31,81,90,128,219,349,],[28,28,79,130,79,218,218,439,]),'block_item_list':([128,],[219,]),'identifier_list_opt':([74,136,339,],[117,243,429,]),'id_declarator':([0,9,16,32,39,77,80,91,113,118,138,140,199,377,],[31,31,68,82,90,68,129,82,129,198,129,129,82,129,]),'assignment_expression':([112,124,128,135,172,200,210,211,219,220,229,245,268,273,276,280,281,298,307,322,342,349,350,356,358,359,360,363,367,373,374,431,439,451,464,467,476,477,482,483,484,485,486,500,509,515,516,521,527,],[173,208,239,173,239,208,347,348,239,239,239,208,239,239,239,239,391,239,173,423,208,239,239,239,239,445,239,239,239,454,455,208,239,239,491,173,498,499,239,239,239,239,239,239,239,239,239,239,239,]),'conditional_expression':([112,124,128,135,154,172,200,210,211,219,220,229,238,245,251,268,273,276,280,281,298,307,314,322,342,349,350,356,358,359,360,363,367,373,374,379,431,439,451,464,466,467,476,477,482,483,484,485,486,500,509,515,516,521,527,],[174,174,174,174,269,174,174,174,174,174,174,174,269,174,269,174,174,174,174,174,174,174,269,174,174,174,174,174,174,174,174,174,174,174,174,269,174,174,174,174,492,174,174,174,174,174,174,174,174,174,174,174,174,174,174,]),'postfix_expression':([112,124,128,135,154,162,163,166,172,177,200,210,211,219,220,229,238,245,251,268,273,276,280,281,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,314,322,342,349,350,356,358,359,360,363,367,373,374,379,387,431,439,451,458,464,466,467,476,477,482,483,484,485,486,500,509,515,516,521,527,],[175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,]),'binary_expression':([112,124,128,135,154,172,200,210,211,219,220,229,238,245,251,268,273,276,280,281,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,314,322,342,349,350,356,358,359,360,363,367,373,374,379,431,439,451,464,466,467,476,477,482,483,484,485,486,500,509,515,516,521,527,],[176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,397,398,399,400,401,402,403,404,405,406,407,408,176,410,411,412,413,414,415,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,]),'unary_operator':([112,124,128,135,154,162,163,166,172,177,200,210,211,219,220,229,238,245,251,268,273,276,280,281,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,314,322,342,349,350,356,358,359,360,363,367,373,374,379,387,431,439,451,458,464,466,467,476,477,482,483,484,485,486,500,509,515,516,521,527,],[177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,]),'initializer':([112,135,307,467,],[167,242,418,493,]),'type_specifier':([0,9,16,31,74,77,81,90,102,115,128,136,139,141,148,149,172,199,205,219,250,263,268,273,276,328,339,341,349,384,],[45,45,70,45,45,70,45,45,145,70,45,45,145,259,145,145,145,45,45,45,145,145,145,145,145,145,45,45,45,45,]),'parameter_type_list':([74,136,199,339,341,384,],[119,244,336,430,336,336,]),'primary_expression':([112,124,128,135,154,162,163,166,172,177,200,210,211,219,220,229,238,245,251,268,273,276,280,281,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,314,322,342,349,350,356,358,359,360,363,367,373,374,379,387,431,439,451,458,464,466,467,476,477,482,483,484,485,486,500,509,515,516,521,527,],[182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,]),'brace_open':([6,43,56,57,76,101,103,112,128,133,135,219,229,307,350,360,363,387,451,458,459,460,467,483,484,486,516,521,527,],[58,102,105,106,128,139,149,183,128,128,183,128,128,183,128,128,128,462,128,462,462,462,183,128,128,128,128,128,128,]),'struct_or_union':([0,9,16,31,74,77,81,90,102,115,128,136,139,141,148,149,172,199,205,219,250,263,268,273,276,328,339,341,349,384,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'designator':([183,306,420,462,508,],[311,416,311,311,311,]),'id_init_declarator':([16,77,],[67,67,]),'direct_typeid_noparen_declarator':([118,194,],[201,330,]),'typedef_name':([0,9,16,31,74,77,81,90,102,115,128,136,139,141,148,149,172,199,205,219,250,263,268,273,276,328,339,341,349,384,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'enumerator_list':([58,105,106,],[107,150,151,]),'parameter_declaration':([74,136,199,205,339,341,384,],[121,121,121,344,121,121,121,]),'assignment_expression_opt':([124,200,245,342,431,],[209,338,372,436,475,]),'translation_unit_or_empty':([0,],[15,]),'block_item_list_opt':([128,],[224,]),'designator_list':([183,420,462,508,],[306,306,306,306,]),'statement':([128,219,229,350,360,363,451,483,484,486,516,521,527,],[225,225,361,361,361,448,361,361,503,361,361,361,361,]),'offsetof_member_designator':([471,],[494,]),'type_name':([172,268,273,276,328,],[278,381,382,383,424,]),'pragmacomp_or_statement':([229,350,360,451,483,484,486,516,521,527,],[362,441,446,487,502,504,506,523,526,528,]),'type_qualifier_list':([8,75,102,126,137,139,148,149,172,247,250,263,268,273,276,328,340,433,],[62,125,141,62,246,141,141,141,141,62,141,141,141,141,141,141,432,62,]),'declaration_list':([31,90,],[81,81,]),'declaration_specifiers_no_type_opt':([18,33,42,],[71,83,100,]),'brace_close':([102,107,139,148,149,150,151,224,250,263,312,420,490,508,],[142,152,249,260,262,264,265,357,375,380,421,469,507,518,]),'expression':([128,172,219,220,229,268,273,276,280,298,349,350,356,358,360,363,367,439,451,482,483,484,485,486,500,509,515,516,521,527,],[227,279,227,353,227,279,279,279,389,409,227,227,443,444,227,227,450,227,227,227,227,227,505,227,227,519,227,227,227,227,]),'external_declaration':([0,9,],[14,63,]),'init_declarator':([39,80,113,138,],[87,87,190,248,]),'struct_declarator_list':([140,],[252,]),'storage_class_specifier':([0,9,18,31,33,39,42,74,80,81,90,118,128,136,199,205,219,339,341,349,384,],[18,18,18,18,18,88,18,18,88,18,18,88,18,18,18,18,18,18,18,18,18,]),'type_qualifier_list_opt':([8,75,126,137,247,340,433,],[60,124,211,245,374,431,477,]),'pp_directive':([0,9,],[21,21,]),'pppragma_directive':([0,9,102,128,139,148,149,219,229,250,263,350,360,363,451,483,484,486,516,521,527,],[23,23,146,222,146,146,146,222,363,146,146,363,363,222,363,363,363,363,363,363,363,]),'enumerator':([58,105,106,153,],[108,108,108,266,]),'block_item':([128,219,],[230,352,]),'parameter_type_list_opt':([199,341,384,],[333,434,333,]),'direct_id_declarator':([0,9,12,16,32,39,77,80,86,91,113,118,138,140,194,199,332,377,],[27,27,64,27,27,27,27,27,64,27,27,27,27,27,64,27,64,27,]),'abstract_declarator':([118,199,277,384,],[197,335,197,335,]),'designation':([183,420,462,508,],[313,313,313,313,]),'struct_declaration':([102,139,148,149,250,263,],[147,147,261,147,261,261,]),'type_specifier_no_typeid':([0,9,16,31,39,74,77,80,81,90,102,115,118,128,136,139,140,141,148,149,172,199,205,219,250,263,268,273,276,277,328,339,341,349,384,],[36,36,36,36,93,36,36,93,36,36,36,36,93,36,36,36,256,36,36,36,36,36,36,36,36,36,36,36,36,256,36,36,36,36,36,]),'enum_specifier':([0,9,16,31,74,77,81,90,102,115,128,136,139,141,148,149,172,199,205,219,250,263,268,273,276,328,339,341,349,384,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'cast_expression':([112,124,128,135,154,172,177,200,210,211,219,220,229,238,245,251,268,273,276,280,281,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,314,322,342,349,350,356,358,359,360,363,367,373,374,379,387,431,439,451,458,464,466,467,476,477,482,483,484,485,486,500,509,515,516,521,527,],[171,171,171,171,171,171,305,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,461,171,171,171,461,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'initializer_list_opt':([183,],[312,]),'type_qualifier':([0,8,9,18,31,33,39,42,62,74,75,80,81,90,102,118,125,126,128,136,137,139,140,141,148,149,172,199,205,219,246,247,250,263,268,273,276,277,328,339,340,341,349,384,432,433,],[33,61,33,33,33,33,92,33,111,33,61,92,33,33,61,92,111,61,33,33,61,61,257,111,61,61,61,33,33,33,111,61,61,61,61,61,61,257,61,33,61,33,33,33,111,61,]),'typeid_declarator':([39,80,91,113,138,140,377,],[84,84,134,84,84,84,84,]),'expression_opt':([128,219,229,349,350,360,363,439,451,482,483,484,486,500,515,516,521,527,],[232,232,232,440,232,232,232,481,232,501,232,232,232,514,522,232,232,232,]),'init_declarator_list_opt':([39,80,],[94,94,]),'declaration_specifiers':([0,9,31,74,81,90,128,136,199,205,219,339,341,349,384,],[39,39,80,118,80,80,80,118,118,118,80,118,118,80,118,]),'constant_expression':([154,238,251,314,379,],[270,368,376,422,457,]),'constant':([112,124,128,135,154,162,163,166,172,177,200,210,211,219,220,229,238,245,251,268,273,276,280,281,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,314,322,342,349,350,356,358,359,360,363,367,373,374,379,387,431,439,451,458,464,466,467,476,477,482,483,484,485,486,500,509,515,516,521,527,],[180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,]),'expression_statement':([128,219,229,350,360,363,451,483,484,486,516,521,527,],[234,234,234,234,234,234,234,234,234,234,234,234,234,]),'typeid_noparen_declarator':([118,],[196,]),'unified_string_literal':([112,124,128,135,154,162,163,166,172,177,200,210,211,219,220,229,238,245,251,268,273,276,280,281,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,314,322,342,349,350,356,358,359,360,363,367,373,374,379,387,431,439,451,458,464,466,467,476,477,482,483,484,485,486,500,509,515,516,521,527,],[185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,]),'function_definition':([0,9,],[44,44,]),'labeled_statement':([128,219,229,350,360,363,451,483,484,486,516,521,527,],[235,235,235,235,235,235,235,235,235,235,235,235,235,]),'parameter_list':([74,136,199,339,341,384,],[120,120,120,120,120,120,]),'decl_body':([0,9,31,81,90,128,219,349,],[46,46,46,46,46,46,46,46,]),'struct_or_union_specifier':([0,9,16,31,74,77,81,90,102,115,128,136,139,141,148,149,172,199,205,219,250,263,268,273,276,328,339,341,349,384,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'iteration_statement':([128,219,229,350,360,363,451,483,484,486,516,521,527,],[237,237,237,237,237,237,237,237,237,237,237,237,237,]),'struct_declaration_list':([102,139,149,],[148,250,263,]),'initializer_list':([183,462,],[310,490,]),'direct_abstract_declarator':([118,194,199,277,332,384,385,],[202,331,202,202,331,202,331,]),'identifier':([74,112,124,128,135,136,154,162,163,166,172,177,191,200,210,211,219,220,229,238,245,251,268,273,276,280,281,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,309,314,322,339,342,349,350,356,358,359,360,363,367,373,374,379,387,431,439,451,458,464,466,467,471,476,477,482,483,484,485,486,500,509,511,515,516,521,527,],[123,179,179,179,179,123,179,179,179,179,179,179,329,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,419,179,179,123,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,495,179,179,179,179,179,179,179,179,179,520,179,179,179,179,]),'abstract_declarator_opt':([118,277,],[203,386,]),'struct_declarator_list_opt':([140,],[253,]),'init_declarator_list':([39,80,],[98,98,]),'declarator':([39,80,113,138,140,377,],[95,95,95,95,258,258,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',541),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',546),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',551),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',557),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',562),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',568),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',569),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',580),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',597),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',608),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',614),
  ('pragmacomp_or_statement -> pppragma_directive statement','pragmacomp_or_statement',2,'p_pragmacomp_or_statement','c_parser.py',661),
  ('pragmacomp_or_statement -> statement','pragmacomp_or_statement',1,'p_pragmacomp_or_statement','c_parser.py',662),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',681),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',682),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',741),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',750),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',751),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',761),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',766),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',771),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',777),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',782),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',787),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',792),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',797),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',802),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',808),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',809),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',810),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',811),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',812),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',817),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',822),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',823),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',824),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',825),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',826),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',827),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',828),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',829),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',830),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',831),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',832),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',833),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',838),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',839),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',840),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',841),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',846),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',847),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',848),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',853),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',854),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',862),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',863),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',868),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',869),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',874),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',875),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',882),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',887),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',892),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',897),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',906),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',907),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',917),
  ('struct_or_union_specifier -> struct_or_union brace_open brace_close','struct_or_union_specifier',3,'p_struct_or_union_specifier_2','c_parser.py',918),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',935),
  ('struct_or_union_specifier -> struct_or_union ID brace_open brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_3','c_parser.py',936),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',937),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_3','c_parser.py',938),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',954),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',955),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',962),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',963),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',971),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',1009),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',1014),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',1019),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',1020),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',1028),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',1033),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',1034),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',1042),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',1043),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',1048),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',1053),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',1054),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',1059),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',1060),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',1061),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1072),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1073),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1088),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1089),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1200),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1201),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1230),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1231),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1236),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1237),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1245),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1246),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1265),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1266),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1277),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1308),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1309),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1318),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1323),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1324),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1332),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1333),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1344),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1352),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1353),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1358),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1359),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1364),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1375),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1383),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1388),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1398),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1402),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1413),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1422),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1433),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1442),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1452),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1463),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1464),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1471),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1472),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1478),
  ('labeled_statement -> ID COLON pragmacomp_or_statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1484),
  ('labeled_statement -> CASE constant_expression COLON pragmacomp_or_statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1488),
  ('labeled_statement -> DEFAULT COLON pragmacomp_or_statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1492),
  ('selection_statement -> IF LPAREN expression RPAREN pragmacomp_or_statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1496),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE pragmacomp_or_statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1500),
  ('selection_statement -> SWITCH LPAREN expression RPAREN pragmacomp_or_statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1504),
  ('iteration_statement -> WHILE LPAREN expression RPAREN pragmacomp_or_statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1509),
  ('iteration_statement -> DO pragmacomp_or_statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1513),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN pragmacomp_or_statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1517),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN pragmacomp_or_statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1521),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1526),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1530),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1534),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1538),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1539),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1544),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1551),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1552),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1564),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1568),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1569),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1582),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1583),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1584),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1585),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1586),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1587),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1588),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1589),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1590),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1591),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1592),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1597),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1601),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1602),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1610),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1611),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1612),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1613),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1614),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1615),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1616),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1617),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1618),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1619),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1620),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1621),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1622),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1623),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1624),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1625),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1626),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1627),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1628),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1636),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1640),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1644),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1648),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1649),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1650),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1655),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1656),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1664),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1665),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1666),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1667),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1668),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1669),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1674),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1678),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1682),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1683),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1688),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1689),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1690),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1691),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1697),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1698),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1703),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1704),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1709),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1713),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1717),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1718),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1723),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1727),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1735),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1736),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1737),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1750),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1751),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1760),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1764),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1765),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1766),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1767),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1773),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1774),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1790),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1791),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1802),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1803),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1813),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1814),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1824),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1830),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1836),
]
