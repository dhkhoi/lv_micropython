
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         pragmacomp_or_statement     : pppragma_directive statement\n                                        | statement\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n                                      | struct_or_union brace_open brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union ID brace_open brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON pragmacomp_or_statement  labeled_statement : CASE constant_expression COLON pragmacomp_or_statement  labeled_statement : DEFAULT COLON pragmacomp_or_statement  selection_statement : IF LPAREN expression RPAREN pragmacomp_or_statement  selection_statement : IF LPAREN expression RPAREN statement ELSE pragmacomp_or_statement  selection_statement : SWITCH LPAREN expression RPAREN pragmacomp_or_statement  iteration_statement : WHILE LPAREN expression RPAREN pragmacomp_or_statement  iteration_statement : DO pragmacomp_or_statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN pragmacomp_or_statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN pragmacomp_or_statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'RESTRICT':([0,1,3,4,5,6,8,9,10,11,13,14,15,16,17,19,20,21,22,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,42,43,44,45,46,48,49,52,53,54,58,59,62,66,69,70,71,75,77,80,81,82,83,84,86,87,90,96,97,98,99,101,102,105,106,113,114,115,125,131,135,136,137,138,139,140,141,142,143,144,145,147,148,149,151,152,169,192,204,210,211,213,215,221,222,223,224,225,226,229,230,235,241,244,245,250,252,254,255,256,257,258,262,271,300,304,326,328,330,331,334,335,337,353,354,355,356,357,361,363,368,371,372,373,375,376,380,405,429,430,432,433,453,454,455,456,457,485,500,501,502,503,521,524,527,528,],[39,39,-98,-52,-67,39,-96,-101,39,-112,-116,-111,-110,39,-108,-97,-119,-105,-93,-95,-100,-103,-68,-66,-117,-65,-63,-114,39,-104,-29,-221,-113,-118,-102,-99,39,-106,-109,-60,-64,-62,-107,-115,39,-91,-92,-89,-90,39,39,39,-83,-61,-152,-153,-307,-69,-53,-166,39,-94,-132,-133,39,39,39,-84,39,39,39,39,39,-30,-167,39,39,-146,-308,-130,39,-142,39,39,-135,-145,-85,-70,39,39,39,39,-71,39,-36,39,-35,-154,39,-137,39,-139,-143,-134,-129,-128,-131,-73,-76,-199,-75,-72,-200,39,-198,-78,-74,-77,39,39,39,39,39,-31,-34,39,39,39,-155,-156,-136,-138,-144,-202,-218,39,-78,-80,-215,-201,-214,-217,39,-32,-33,39,39,-79,-213,-203,-205,-216,-204,-209,-208,-206,-80,-207,-210,-212,-211,]),'SIZEOF':([20,27,29,39,70,75,82,83,85,86,87,105,109,112,113,114,131,134,138,149,150,151,152,156,160,161,162,169,170,172,176,178,181,183,186,196,197,198,203,216,233,241,243,244,245,248,250,252,254,255,256,257,258,262,263,265,266,267,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,290,295,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,328,334,336,339,360,361,362,363,364,365,367,368,371,372,373,375,376,377,378,380,391,392,407,431,432,433,437,448,451,453,454,455,456,457,460,462,463,466,469,471,475,476,477,483,484,485,486,487,489,500,501,502,503,505,507,511,514,515,521,523,524,526,527,528,],[-119,-68,-117,-118,-309,-83,-307,-69,-27,-166,-28,-309,172,172,-309,-28,-167,172,-308,172,172,-309,-28,172,-269,-309,-268,172,-270,172,-265,172,-266,-267,172,-266,172,172,172,172,172,-73,172,-76,-199,172,-75,-72,-200,172,-198,-78,-74,-77,172,-266,172,172,172,-224,-230,172,-233,-232,-228,-227,-225,-234,-231,-226,-229,-11,-12,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,-309,172,-266,172,-202,172,-218,172,172,172,172,172,-80,-215,-201,-214,172,172,-217,-309,-182,172,172,-309,-28,-266,172,172,-79,-213,-203,-205,-216,172,-11,172,172,-309,172,-266,172,172,172,172,-204,172,172,172,-209,-208,-206,-80,172,172,-309,172,172,-207,172,-210,172,-212,-211,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'unary_operator':([109,112,134,149,150,156,169,172,178,186,197,198,203,216,233,243,248,255,263,266,267,271,275,287,290,295,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,328,336,360,362,364,365,367,368,371,377,378,407,431,448,451,460,463,466,471,476,477,483,484,486,487,489,505,507,514,515,523,526,],[156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'unified_wstring_literal':([109,112,134,149,150,156,169,172,178,186,197,198,203,216,233,243,248,255,263,266,267,271,275,287,290,295,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,328,336,360,362,364,365,367,368,371,377,378,407,431,448,451,460,463,466,471,476,477,483,484,486,487,489,505,507,514,515,523,526,],[168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'empty':([0,1,6,10,34,41,43,54,69,70,71,99,103,105,106,112,113,115,142,149,150,151,161,203,204,248,255,304,334,335,336,337,368,371,377,378,391,405,431,432,448,451,469,483,484,486,487,505,511,514,515,523,526,],[2,55,73,73,85,89,73,100,100,85,116,55,89,85,116,193,85,199,227,237,193,85,285,193,340,369,369,199,85,116,193,340,369,369,369,369,462,340,193,85,369,369,462,369,369,369,369,369,462,369,369,369,369,]),'assignment_operator':([159,],[275,]),'direct_id_declarator':([0,1,16,18,32,41,61,63,99,103,110,115,133,142,204,206,341,358,],[4,4,4,4,84,4,4,84,4,4,4,4,4,4,4,84,84,4,]),'expression':([149,169,248,255,263,271,295,318,326,328,364,365,367,368,371,377,378,448,451,483,484,486,487,489,505,507,514,515,523,526,],[238,303,238,238,379,303,394,420,303,303,446,447,449,238,238,238,238,238,238,238,238,238,238,506,238,518,238,238,238,238,]),'parameter_list':([71,106,204,335,337,405,],[118,118,118,118,118,118,]),'expression_opt':([149,248,255,368,371,377,378,448,451,483,484,486,487,505,514,515,523,526,],[239,239,239,450,239,239,239,239,488,239,239,239,504,516,239,522,239,239,]),'unary_expression':([109,112,134,149,150,156,169,172,178,186,197,198,203,216,233,243,248,255,263,266,267,271,275,287,290,295,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,328,336,360,362,364,365,367,368,371,377,378,407,431,448,451,460,463,466,471,476,477,483,484,486,487,489,505,507,514,515,523,526,],[159,159,159,159,159,270,159,325,327,329,159,159,159,270,270,270,159,159,159,159,159,159,159,270,159,159,159,270,270,270,270,270,270,270,270,270,270,270,270,159,270,270,270,270,270,270,159,159,159,270,159,159,159,159,159,159,159,159,270,159,159,159,270,159,159,270,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'type_specifier':([0,16,41,54,69,71,98,101,103,106,124,135,136,140,143,149,169,204,211,221,223,255,271,300,326,328,335,337,368,405,],[22,22,90,22,22,22,139,22,90,22,90,139,139,139,235,22,139,22,22,139,139,22,139,139,139,139,22,22,22,22,]),'decl_body':([0,16,54,69,101,149,255,368,],[7,7,7,7,7,7,7,7,]),'enumerator':([79,129,130,214,],[128,128,128,350,]),'struct_declaration_list':([98,135,136,],[140,221,223,]),'type_specifier_no_typeid':([0,1,16,41,54,69,71,98,99,101,103,106,115,124,135,136,140,142,143,149,169,204,211,221,223,255,271,300,304,326,328,335,337,368,405,],[13,59,13,13,13,13,13,13,59,13,13,13,59,13,13,13,13,230,13,13,13,13,13,13,13,13,13,13,230,13,13,13,13,13,13,]),'conditional_expression':([109,112,134,149,150,169,197,198,203,216,233,243,248,255,263,266,267,271,275,287,290,295,299,318,326,328,336,360,362,364,365,367,368,371,377,378,431,448,451,463,466,471,476,477,483,484,486,487,489,505,507,514,515,523,526,],[165,165,165,165,165,165,165,165,165,351,351,351,165,165,165,165,165,165,165,351,165,165,165,165,165,165,165,351,165,165,165,165,165,165,165,165,165,165,165,165,165,495,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'expression_statement':([149,248,255,371,377,378,448,483,484,486,514,523,526,],[241,241,241,241,241,241,241,241,241,241,241,241,241,]),'jump_statement':([149,248,255,371,377,378,448,483,484,486,514,523,526,],[262,262,262,262,262,262,262,262,262,262,262,262,262,]),'translation_unit':([0,],[16,]),'selection_statement':([149,248,255,371,377,378,448,483,484,486,514,523,526,],[250,250,250,250,250,250,250,250,250,250,250,250,250,]),'specifier_qualifier_list':([98,135,136,140,169,221,223,271,300,326,328,],[142,142,142,142,304,142,142,304,304,304,304,]),'type_qualifier_list_opt':([34,70,105,113,151,334,432,],[88,112,150,197,266,431,476,]),'type_name':([169,271,300,326,328,],[305,385,402,427,428,]),'pragmacomp_or_statement':([248,377,378,448,483,484,486,514,523,526,],[370,455,456,485,500,501,502,521,527,528,]),'abstract_declarator_opt':([115,304,],[205,406,]),'argument_expression_list':([299,],[400,]),'struct_declarator_list':([142,],[232,]),'iteration_statement':([149,248,255,371,377,378,448,483,484,486,514,523,526,],[244,244,244,244,244,244,244,244,244,244,244,244,244,]),'offsetof_member_designator':([468,],[492,]),'type_qualifier_list':([34,70,98,105,113,135,136,140,151,169,221,223,271,300,326,328,334,432,],[87,114,143,152,87,143,143,143,87,143,143,143,143,143,143,143,433,87,]),'declaration_list':([54,69,],[101,101,]),'initializer':([109,134,290,463,],[177,220,390,490,]),'pointer':([0,1,16,18,41,61,88,99,103,110,115,133,142,204,304,358,405,],[32,63,32,32,32,63,132,63,32,63,206,63,63,341,404,63,404,]),'enumerator_list':([79,129,130,],[126,217,218,]),'parameter_type_list':([71,106,204,335,337,405,],[122,154,344,435,344,344,]),'parameter_type_list_opt':([204,337,405,],[342,438,342,]),'init_declarator':([1,99,110,133,],[64,64,191,219,]),'block_item':([149,255,],[254,375,]),'primary_expression':([109,112,134,149,150,156,169,172,178,186,197,198,203,216,233,243,248,255,263,266,267,271,275,287,290,295,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,328,336,360,362,364,365,367,368,371,377,378,407,431,448,451,460,463,466,471,476,477,483,484,486,487,489,505,507,514,515,523,526,],[182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,]),'designator':([161,292,391,469,511,],[293,393,293,293,293,]),'declaration_specifiers_no_type':([0,6,10,16,43,54,69,71,101,106,149,204,211,255,335,337,368,405,],[41,72,72,41,72,103,103,124,103,124,103,124,124,103,124,124,103,124,]),'constant_expression':([216,233,243,287,360,],[352,359,366,387,444,]),'storage_class_specifier':([0,1,6,10,16,43,54,69,71,99,101,106,115,149,204,211,255,335,337,368,405,],[43,66,43,43,43,43,43,43,43,66,43,43,66,43,43,43,43,43,43,43,43,]),'external_declaration':([0,16,],[46,77,]),'pp_directive':([0,16,],[48,48,]),'direct_abstract_declarator':([115,204,206,304,341,404,405,],[202,202,345,202,345,345,202,]),'statement':([149,248,255,371,377,378,448,483,484,486,514,523,526,],[245,372,245,453,372,372,372,372,372,503,372,372,372,]),'brace_close':([98,126,135,136,140,217,218,221,223,236,288,391,494,511,],[144,215,222,224,226,353,354,355,356,361,388,464,510,520,]),'struct_declaration':([98,135,136,140,221,223,],[141,141,141,225,225,225,]),'declaration_specifiers':([0,16,54,69,71,101,106,149,204,211,255,335,337,368,405,],[1,1,99,99,115,99,115,99,115,115,99,115,115,99,115,]),'init_declarator_list_opt':([1,99,],[56,56,]),'assignment_expression':([109,112,134,149,150,169,197,198,203,248,255,263,266,267,271,275,290,295,299,318,326,328,336,362,364,365,367,368,371,377,378,431,448,451,463,466,476,477,483,484,486,487,489,505,507,514,515,523,526,],[157,194,157,249,194,249,332,333,194,249,249,249,383,384,249,386,157,249,399,249,249,249,194,445,249,249,249,249,249,249,249,194,249,249,157,491,498,499,249,249,249,249,249,249,249,249,249,249,249,]),'direct_typeid_declarator':([1,61,63,99,110,133,142,358,],[57,57,108,57,57,57,57,57,]),'declaration_specifiers_no_type_opt':([6,10,43,],[74,76,95,]),'identifier_list_opt':([71,106,335,],[117,153,434,]),'struct_declarator':([142,358,],[228,443,]),'function_specifier':([0,1,6,10,16,43,54,69,71,99,101,106,115,149,204,211,255,335,337,368,405,],[6,58,6,6,6,6,6,6,6,58,6,6,58,6,6,6,6,6,6,6,6,]),'id_declarator':([0,1,16,18,41,61,99,103,110,115,133,142,204,358,],[54,69,54,78,94,78,146,94,146,209,146,146,78,146,]),'designator_list':([161,391,469,511,],[292,292,292,292,]),'pppragma_directive':([0,16,98,135,136,140,149,221,223,248,255,371,377,378,448,483,484,486,514,523,526,],[30,30,137,137,137,137,257,137,137,371,257,257,371,371,371,371,371,371,371,371,371,]),'direct_typeid_noparen_declarator':([115,206,],[200,346,]),'typeid_noparen_declarator':([115,],[201,]),'postfix_expression':([109,112,134,149,150,156,169,172,178,186,197,198,203,216,233,243,248,255,263,266,267,271,275,287,290,295,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,328,336,360,362,364,365,367,368,371,377,378,407,431,448,451,460,463,466,471,476,477,483,484,486,487,489,505,507,514,515,523,526,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'struct_declarator_list_opt':([142,],[231,]),'typeid_declarator':([1,61,99,110,133,142,358,],[60,107,60,60,60,60,60,]),'struct_or_union':([0,16,41,54,69,71,98,101,103,106,124,135,136,140,143,149,169,204,211,221,223,255,271,300,326,328,335,337,368,405,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'binary_expression':([109,112,134,149,150,169,197,198,203,216,233,243,248,255,263,266,267,271,275,287,290,295,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,328,336,360,362,364,365,367,368,371,377,378,431,448,451,463,466,471,476,477,483,484,486,487,489,505,507,514,515,523,526,],[171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,408,409,410,411,412,413,414,415,416,417,418,419,171,421,422,423,424,425,426,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'initializer_list':([161,469,],[291,494,]),'identifier':([71,106,109,112,134,149,150,156,169,172,178,186,197,198,203,212,216,233,243,248,255,263,266,267,271,275,287,289,290,295,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,328,335,336,360,362,364,365,367,368,371,377,378,407,431,448,451,460,463,466,468,471,476,477,483,484,486,487,489,505,507,508,514,515,523,526,],[120,120,173,173,173,173,173,173,173,173,173,173,173,173,173,349,173,173,173,173,173,173,173,173,173,173,173,389,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,120,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,493,173,173,173,173,173,173,173,173,173,173,519,173,173,173,173,]),'block_item_list':([149,],[255,]),'id_init_declarator_list':([41,103,],[91,91,]),'init_declarator_list':([1,99,],[68,68,]),'assignment_expression_opt':([112,150,203,336,431,],[195,264,338,436,474,]),'type_qualifier':([0,1,6,10,16,34,43,54,69,70,71,87,98,99,101,105,106,113,114,115,135,136,140,142,143,149,151,152,169,204,211,221,223,255,271,300,304,326,328,334,335,337,368,405,432,433,],[10,62,10,10,10,86,10,10,10,86,10,131,86,62,10,86,10,86,131,62,86,86,86,229,131,10,86,131,86,10,10,86,86,10,86,86,229,86,86,86,10,10,10,10,86,131,]),'compound_statement':([104,111,149,248,255,371,377,378,448,483,484,486,514,523,526,],[148,192,258,258,258,258,258,258,258,258,258,258,258,258,258,]),'declaration':([0,16,54,69,101,149,255,368,],[31,31,102,102,147,256,256,451,]),'identifier_list':([71,106,335,],[121,121,121,]),'block_item_list_opt':([149,],[236,]),'initializer_list_opt':([161,],[288,]),'translation_unit_or_empty':([0,],[51,]),'enum_specifier':([0,16,41,54,69,71,98,101,103,106,124,135,136,140,143,149,169,204,211,221,223,255,271,300,326,328,335,337,368,405,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'designation':([161,391,469,511,],[286,286,286,286,]),'brace_open':([23,50,80,81,96,97,104,109,111,134,149,248,255,290,371,377,378,407,448,460,463,472,473,483,484,486,514,523,526,],[79,98,129,130,135,136,149,161,149,161,149,149,149,161,149,149,149,469,149,469,161,469,469,149,149,149,149,149,149,]),'typedef_name':([0,16,41,54,69,71,98,101,103,106,124,135,136,140,143,149,169,204,211,221,223,255,271,300,326,328,335,337,368,405,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'designation_opt':([161,391,469,511,],[290,463,290,463,]),'labeled_statement':([149,248,255,371,377,378,448,483,484,486,514,523,526,],[252,252,252,252,252,252,252,252,252,252,252,252,252,]),'struct_or_union_specifier':([0,16,41,54,69,71,98,101,103,106,124,135,136,140,143,149,169,204,211,221,223,255,271,300,326,328,335,337,368,405,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'declaration_list_opt':([54,69,],[104,111,]),'parameter_declaration':([71,106,204,211,335,337,405,],[119,119,119,348,119,119,119,]),'abstract_declarator':([115,204,304,405,],[208,343,208,343,]),'id_init_declarator_list_opt':([41,103,],[92,92,]),'unified_string_literal':([109,112,134,149,150,156,169,172,178,186,197,198,203,216,233,243,248,255,263,266,267,271,275,287,290,295,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,328,336,360,362,364,365,367,368,371,377,378,407,431,448,451,460,463,466,471,476,477,483,484,486,487,489,505,507,514,515,523,526,],[167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'function_definition':([0,16,],[49,49,]),'declarator':([1,99,110,133,142,358,],[67,67,67,67,234,234,]),'constant':([109,112,134,149,150,156,169,172,178,186,197,198,203,216,233,243,248,255,263,266,267,271,275,287,290,295,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,328,336,360,362,364,365,367,368,371,377,378,407,431,448,451,460,463,466,471,476,477,483,484,486,487,489,505,507,514,515,523,526,],[190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,]),'id_init_declarator':([41,103,],[93,93,]),'cast_expression':([109,112,134,149,150,156,169,197,198,203,216,233,243,248,255,263,266,267,271,275,287,290,295,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,328,336,360,362,364,365,367,368,371,377,378,407,431,448,451,460,463,466,471,476,477,483,484,486,487,489,505,507,514,515,523,526,],[180,180,180,180,180,272,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,470,180,180,180,470,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',541),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',546),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',551),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',557),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',562),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',568),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',569),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',580),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',597),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',608),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',614),
  ('pragmacomp_or_statement -> pppragma_directive statement','pragmacomp_or_statement',2,'p_pragmacomp_or_statement','c_parser.py',661),
  ('pragmacomp_or_statement -> statement','pragmacomp_or_statement',1,'p_pragmacomp_or_statement','c_parser.py',662),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',681),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',682),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',741),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',750),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',751),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',761),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',766),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',771),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',777),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',782),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',787),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',792),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',797),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',802),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',808),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',809),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',810),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',811),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',812),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',817),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',822),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',823),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',824),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',825),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',826),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',827),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',828),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',829),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',830),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',831),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',832),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',833),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',838),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',839),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',840),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',841),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',846),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',847),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',848),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',853),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',854),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',862),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',863),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',868),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',869),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',874),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',875),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',882),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',887),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',892),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',897),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',906),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',907),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',917),
  ('struct_or_union_specifier -> struct_or_union brace_open brace_close','struct_or_union_specifier',3,'p_struct_or_union_specifier_2','c_parser.py',918),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',935),
  ('struct_or_union_specifier -> struct_or_union ID brace_open brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_3','c_parser.py',936),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',937),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_3','c_parser.py',938),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',954),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',955),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',962),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',963),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',971),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',1009),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',1014),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',1019),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',1020),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',1028),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',1033),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',1034),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',1042),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',1043),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',1048),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',1053),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',1054),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',1059),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',1060),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',1061),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1072),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1073),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1088),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1089),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1200),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1201),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1230),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1231),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1236),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1237),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1245),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1246),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1265),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1266),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1277),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1308),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1309),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1318),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1323),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1324),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1332),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1333),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1344),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1352),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1353),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1358),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1359),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1364),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1375),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1383),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1388),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1398),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1402),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1413),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1422),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1433),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1442),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1452),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1463),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1464),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1471),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1472),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1478),
  ('labeled_statement -> ID COLON pragmacomp_or_statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1484),
  ('labeled_statement -> CASE constant_expression COLON pragmacomp_or_statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1488),
  ('labeled_statement -> DEFAULT COLON pragmacomp_or_statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1492),
  ('selection_statement -> IF LPAREN expression RPAREN pragmacomp_or_statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1496),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE pragmacomp_or_statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1500),
  ('selection_statement -> SWITCH LPAREN expression RPAREN pragmacomp_or_statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1504),
  ('iteration_statement -> WHILE LPAREN expression RPAREN pragmacomp_or_statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1509),
  ('iteration_statement -> DO pragmacomp_or_statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1513),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN pragmacomp_or_statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1517),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN pragmacomp_or_statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1521),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1526),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1530),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1534),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1538),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1539),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1544),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1551),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1552),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1564),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1568),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1569),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1582),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1583),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1584),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1585),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1586),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1587),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1588),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1589),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1590),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1591),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1592),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1597),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1601),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1602),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1610),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1611),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1612),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1613),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1614),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1615),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1616),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1617),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1618),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1619),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1620),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1621),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1622),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1623),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1624),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1625),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1626),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1627),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1628),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1636),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1640),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1644),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1648),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1649),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1650),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1655),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1656),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1664),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1665),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1666),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1667),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1668),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1669),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1674),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1678),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1682),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1683),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1688),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1689),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1690),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1691),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1697),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1698),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1703),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1704),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1709),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1713),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1717),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1718),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1723),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1727),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1735),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1736),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1737),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1750),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1751),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1760),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1764),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1765),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1766),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1767),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1773),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1774),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1790),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1791),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1802),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1803),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1813),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1814),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1824),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1830),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1836),
]
